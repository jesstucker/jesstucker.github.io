{"version":3,"sources":["webpack:///./src/pages/resume.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Resume","a","createElement","title","className","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","_755544856","node"],"mappings":"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","file":"component---src-pages-resume-js-8878b80d7d81cad8e86e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Resume = () => (\n  <Layout>\n    <SEO title=\"Resume\" />\n    <div className=\"\">\n            {/* {console.log(data.hits)}\n              {\n\n                  data.hits.map((dat, i )=>\n                  <div className=\"resume_item\" key={i}>{dat.name}</div>)\n\n              } */}\n          <h2>SKILLS SUMMARY</h2>\n          <p>\n          Full stack web developer. Have more than 3 years of experience designing and implementing web applications in Python, PHP, JavaScript, and React.\n          </p>\n          <ul>\n            <li>Have knowledge of software engineering principles.</li>\n            <li>Have knowledge and implementation experience of design patterns.</li>\n            <li>Have experience of integrating applications using RESTful Web Services.</li>\n            <li>Have done test driven development (TDD) using Selenium for functional testing and Python for unit testing.</li>\n            <li>Have used Fabric and Travis for CI/CD.</li>\n            <li>Have understanding of agile practices.</li>\n            <li>Have database design skills. </li>\n          </ul>\n\n\n          <h2>TECHNICAL SUMMARY</h2>\n          <p>\n          Programming Languages: Python 2+/3+, PHP 5/7, JavaScript / Node.js\n          Frameworks/Libraries/Services: Django, Flask, Drupal, React.js, REST, AWS\n          Servers/Related: Nginx, Apache, Gunicorn, AWS Lambda, Elastic Beanstalk (EC2)\n          ORM: Django/SQLAlchemy\n          RDBMS: PostgreSQL, SQLite3\n          Additional experience: QUnit, JSON, XML, MySQL, AJAX\n          </p>\n\n\n          <h2>EXPERIENCE</h2>\n\n          <h3>Movement Mortgage (06/18 - Present)</h3>\n          <ul>\n            <li>Architecting and developing data REST APIs</li>\n            <li>Maintaining and debugging legacy codebases </li>\n            <li>Developing CI/CD pipelines / DevOps </li>\n            <li>Developing lead capture marketing sites desktop /mobile, backend / frontend </li>\n            <li>Managing projects using agile / scrum </li>\n            <li>Technologies: Python, Django, Django Rest Framework, Node.js, JavaScript ES5, ES6, Vue.js, React.js, Gatsby.js, REST, YAML, GraphQL, AWS Lambda, AWS Elastic Beanstalk, AWS API Gateway, AWS Alexa Skills, PHP, Laravel, WordPress, Travis, Google Analytics (GA), Fullstory Analytics, Jira, VS Code, NPM, SASS, WebPack, Bitbucket</li>\n          </ul>\n\n\n          <h3>Bit Autonomy (03/18 - 06/18)</h3>\n          <ul>\n            <li>Developing web platforms for expanding customer contact strategy</li>\n            <li>Developing data pipelines to feed business with relevant industry information via industry APIs </li>\n            <li>Implementing analytics and advertising efforts</li>\n            <li>Technologies: Python, JavaScript, Bootstrap, Google Analytics/AdWords, Ansible</li>\n          </ul>\n\n\n          <h3>Everybody’s Bike Rental (01/18 - 03/18)</h3>\n          <ul>\n            <li>Developing full-scale web applications for bike rental reservation system.</li>\n            <li>Django backend reservation system which detects reservation conflicts for bike inventory rental. </li>\n            <li>Built and managed using Agile practices with changing client specifications to suit their business domain and workflow idiom.  Working closely with client to improve design over several iterations.</li>\n            <li>Deployed and maintained on cost effective web service provider.</li>\n            <li>Front end customer interface prototype development using React.js</li>\n            <li>Legacy website performance optimizations.</li>\n            <li>Technologies: Python/Django, JavaScript, JQuery, React.js</li>\n          </ul>\n\n          <h3>Art Institute of Chicago (05/11–08/14)</h3>\n          <ul>\n            <li>Developing software for new applications by performing extract, transform, load (ETL) on legacy Java inventory platform. Heavy use of regular expressions (RegEx) required for data parsing/transforming.  Local application tools refactored into web application tools. Developing Microsoft Excel and Google Sheets macros.</li>\n            <li>Developing statistical methods and applications for inventory growth management within the library domain.</li>\n            <li>Technologies: Python, PHP, Java, Regular Expressions (RegEx), Visual Basic, Microsoft Excel, Google Sheets, JavaScript.</li>\n          </ul>\n\n          <h3>Client, Campbell Ford (07/11–12/11) </h3>\n          <ul>\n            <li>Develop CMS for Car Dealership</li>\n            <li>Developing Custom PHP Templates</li>\n            <li>Configuring Apache servers</li>\n            <li>Technologies: PHP, Drupal, JavaScript, CSS</li>\n            </ul>\n\n            <h3>Wm. Wrigley Jr. Company (12/08–05/11)</h3>\n            <ul>\n            <li>Performing computer-operated laboratory testing for data-driven quality assurance in package prototyping.</li>\n            <li>Performing extract, transform, load (ETL) on packaging data in SAP for global sustainability initiative specifications.</li>\n            <li>Technologies: Microsoft Excel, Visual Basic, SAP</li>\n          </ul>\n\n          <h3>EDUCATION</h3>\n          <div>Bachelor of Fine Art (BFA)</div>\n          <div>University of Central Florida, Orlando, FL</div>\n      </div>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default Resume\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n        <div>\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}