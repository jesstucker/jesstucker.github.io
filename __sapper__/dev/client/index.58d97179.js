import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as svg_element, c as claim_element, b as children, e as detach_dev, f as attr_dev, g as add_location, h as set_style, j as insert_dev, k as append_dev, n as noop, l as space, m as element, o as create_component, t as text, q as query_selector_all, p as claim_space, r as claim_component, u as claim_text, w as mount_component, x as transition_in, y as transition_out, z as destroy_component } from './client.d75bceed.js';

/* src/components/SelfPortrait.svelte generated by Svelte v3.24.0 */

const file = "src/components/SelfPortrait.svelte";

function create_fragment(ctx) {
	let svg;
	let defs;
	let g;
	let path0;
	let path1;
	let path2;
	let path3;
	let path4;
	let path5;
	let circle;
	let path6;
	let path7;
	let path8;
	let path9;
	let path10;
	let path11;
	let path12;
	let path13;
	let path14;
	let path15;
	let path16;
	let path17;
	let path18;
	let path19;
	let path20;
	let path21;
	let path22;
	let path23;
	let path24;
	let path25;
	let path26;
	let path27;
	let ellipse0;
	let ellipse1;
	let ellipse2;
	let ellipse3;
	let path28;
	let path29;
	let path30;
	let path31;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			defs = svg_element("defs");
			g = svg_element("g");
			path0 = svg_element("path");
			path1 = svg_element("path");
			path2 = svg_element("path");
			path3 = svg_element("path");
			path4 = svg_element("path");
			path5 = svg_element("path");
			circle = svg_element("circle");
			path6 = svg_element("path");
			path7 = svg_element("path");
			path8 = svg_element("path");
			path9 = svg_element("path");
			path10 = svg_element("path");
			path11 = svg_element("path");
			path12 = svg_element("path");
			path13 = svg_element("path");
			path14 = svg_element("path");
			path15 = svg_element("path");
			path16 = svg_element("path");
			path17 = svg_element("path");
			path18 = svg_element("path");
			path19 = svg_element("path");
			path20 = svg_element("path");
			path21 = svg_element("path");
			path22 = svg_element("path");
			path23 = svg_element("path");
			path24 = svg_element("path");
			path25 = svg_element("path");
			path26 = svg_element("path");
			path27 = svg_element("path");
			ellipse0 = svg_element("ellipse");
			ellipse1 = svg_element("ellipse");
			ellipse2 = svg_element("ellipse");
			ellipse3 = svg_element("ellipse");
			path28 = svg_element("path");
			path29 = svg_element("path");
			path30 = svg_element("path");
			path31 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					viewBox: true,
					id: true,
					version: true,
					height: true
				},
				1
			);

			var svg_nodes = children(svg);
			defs = claim_element(svg_nodes, "defs", { id: true }, 1);
			children(defs).forEach(detach_dev);
			g = claim_element(svg_nodes, "g", { id: true, style: true, transform: true }, 1);
			var g_nodes = children(g);

			path0 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path0).forEach(detach_dev);

			path1 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path1).forEach(detach_dev);

			path2 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path2).forEach(detach_dev);

			path3 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path3).forEach(detach_dev);

			path4 = claim_element(
				g_nodes,
				"path",
				{
					id: true,
					style: true,
					d: true,
					class: true
				},
				1
			);

			children(path4).forEach(detach_dev);

			path5 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path5).forEach(detach_dev);

			circle = claim_element(
				g_nodes,
				"circle",
				{
					style: true,
					id: true,
					cx: true,
					cy: true,
					r: true,
					class: true
				},
				1
			);

			children(circle).forEach(detach_dev);

			path6 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path6).forEach(detach_dev);

			path7 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path7).forEach(detach_dev);

			path8 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path8).forEach(detach_dev);

			path9 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path9).forEach(detach_dev);

			path10 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path10).forEach(detach_dev);

			path11 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path11).forEach(detach_dev);

			path12 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path12).forEach(detach_dev);

			path13 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path13).forEach(detach_dev);

			path14 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path14).forEach(detach_dev);

			path15 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path15).forEach(detach_dev);

			path16 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path16).forEach(detach_dev);

			path17 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path17).forEach(detach_dev);

			path18 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path18).forEach(detach_dev);

			path19 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path19).forEach(detach_dev);

			path20 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path20).forEach(detach_dev);

			path21 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path21).forEach(detach_dev);

			path22 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path22).forEach(detach_dev);

			path23 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path23).forEach(detach_dev);

			path24 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path24).forEach(detach_dev);

			path25 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path25).forEach(detach_dev);

			path26 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path26).forEach(detach_dev);

			path27 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path27).forEach(detach_dev);

			ellipse0 = claim_element(
				g_nodes,
				"ellipse",
				{
					style: true,
					id: true,
					cx: true,
					cy: true,
					rx: true,
					ry: true
				},
				1
			);

			children(ellipse0).forEach(detach_dev);

			ellipse1 = claim_element(
				g_nodes,
				"ellipse",
				{
					style: true,
					id: true,
					cx: true,
					cy: true,
					rx: true,
					ry: true
				},
				1
			);

			children(ellipse1).forEach(detach_dev);

			ellipse2 = claim_element(
				g_nodes,
				"ellipse",
				{
					style: true,
					id: true,
					cx: true,
					cy: true,
					rx: true,
					ry: true
				},
				1
			);

			children(ellipse2).forEach(detach_dev);

			ellipse3 = claim_element(
				g_nodes,
				"ellipse",
				{
					style: true,
					id: true,
					cx: true,
					cy: true,
					rx: true,
					ry: true
				},
				1
			);

			children(ellipse3).forEach(detach_dev);

			path28 = claim_element(
				g_nodes,
				"path",
				{
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path28).forEach(detach_dev);

			path29 = claim_element(
				g_nodes,
				"path",
				{
					transform: true,
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path29).forEach(detach_dev);

			path30 = claim_element(
				g_nodes,
				"path",
				{
					transform: true,
					style: true,
					d: true,
					id: true,
					class: true
				},
				1
			);

			children(path30).forEach(detach_dev);
			g_nodes.forEach(detach_dev);
			path31 = claim_element(svg_nodes, "path", { style: true, d: true, id: true }, 1);
			children(path31).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(defs, "id", "defs4");
			add_location(defs, file, 5, 2, 103);
			set_style(path0, "display", "inline");
			set_style(path0, "fill", "#ffffff");
			set_style(path0, "fill-opacity", "1");
			set_style(path0, "fill-rule", "evenodd");
			set_style(path0, "stroke", "#535353");
			set_style(path0, "stroke-width", "0.5");
			set_style(path0, "stroke-linecap", "butt");
			set_style(path0, "stroke-linejoin", "miter");
			set_style(path0, "stroke-miterlimit", "4");
			set_style(path0, "stroke-dash-array", "none");
			set_style(path0, "stroke-opacity", "1");
			attr_dev(path0, "d", "m 302.54069,194.23762 c 0,0 -2.77792,-0.50508 -3.283,1.51523 -0.50507,2.0203 -0.25254,5.3033 -2.27284,11.36421 -2.02031,6.06092 1.76777,10.85914 1.76777,10.85914 0,0 0,3.283 0.75761,5.05076 0.75761,1.76777 1.01015,6.31346 3.78807,8.5863 2.77792,2.27284 1.26269,9.09137 7.57615,7.57614 6.31345,-1.51522 18.43528,-42.17386 -8.33376,-44.95178 z");
			attr_dev(path0, "id", "path3454");
			attr_dev(path0, "class", "svelte-p4xb06");
			add_location(path0, file, 11, 2, 241);
			set_style(path1, "fill", "none");
			set_style(path1, "fill-rule", "evenodd");
			set_style(path1, "stroke", "#000000");
			set_style(path1, "stroke-width", "1px");
			set_style(path1, "stroke-linecap", "butt");
			set_style(path1, "stroke-linejoin", "miter");
			set_style(path1, "stroke-opacity", "1");
			attr_dev(path1, "d", "m 403.10347,307.3519 13.1434,3.92893 9.5,7.5 7.75,2.25 15,10.75 37,15 10.5,9.25 16.5,13.5 1.25,4.5 c 0,0 17.75,34 19,51.25 1.25,17.24999 -340.9018,3.04772 -340.9018,3.04772 l 12.72792,-50.91169 8.48528,-16.26345 c 0,0 12.82031,-14.25635 21.92031,-15.55635 9.8995,-1.41422 6.39192,-0.97048 9.8995,-1.41422 0,0 65.76093,-28.63939 72.12489,-34.64823 4.62725,-4.36904 -3.53553,4.24265 -3.53553,4.24265 l -4.94975,7.77817 c 0,0 7.77817,28.28427 15.55634,34.64823 7.77818,6.36396 17.67767,21.92031 28.28428,22.62742 10.6066,0.7071 15.55635,7.77817 35.35533,-8.48528 19.79899,-16.26346 23.33453,-29.69849 26.87006,-44.54773 3.53554,-14.84924 -12.72792,-21.2132 -12.72792,-21.2132 z");
			attr_dev(path1, "id", "path5950");
			attr_dev(path1, "class", "svelte-p4xb06");
			add_location(path1, file, 15, 2, 834);
			set_style(path2, "display", "inline");
			set_style(path2, "fill", "#ffffff");
			set_style(path2, "fill-opacity", "1");
			set_style(path2, "fill-rule", "evenodd");
			set_style(path2, "stroke", "#535353");
			set_style(path2, "stroke-width", "0.5");
			set_style(path2, "stroke-linecap", "butt");
			set_style(path2, "stroke-linejomin", "miter");
			set_style(path2, "stroke-miterlimit", "4");
			set_style(path2, "stroke-dash-array", "none");
			set_style(path2, "stroke-opacity", "1");
			attr_dev(path2, "d", "m 320.31938,265.35236 c 0,0 4.91746,34.52885 -8.68732,52.12387 -11.76447,15.21496 31.947,71.26856 53.53809,65.65992 14.03179,-3.645 41.24345,-8.64959 51.0127,-55.05332 2.51196,-11.93173 -14.64721,-21.2132 -14.64721,-21.2132 0,0 -5.05077,-11.11168 -3.53554,-39.39595 0.99979,-18.6628 -17.18531,3.43605 -39.18441,4.46279 -12.56741,0.58655 -38.49631,-6.58411 -38.49631,-6.58411 z");
			attr_dev(path2, "id", "path3452");
			attr_dev(path2, "class", "svelte-p4xb06");
			add_location(path2, file, 19, 2, 1683);
			set_style(path3, "display", "inline");
			set_style(path3, "fill", "#ffffff");
			set_style(path3, "fill-opacity", "1");
			set_style(path3, "fill-rule", "evenodd");
			set_style(path3, "stroke", "#9b9b9b");
			set_style(path3, "stroke-width", "0.5");
			set_style(path3, "stroke-linecap", "butt");
			set_style(path3, "stroke-linejoin", "miter");
			set_style(path3, "stroke-miterlimit", "4");
			set_style(path3, "stroke-dasharray", "none");
			set_style(path3, "stroke-opacity", "1");
			attr_dev(path3, "d", "m 424.76915,198.02569 c 0,0 5.03114,-1.39679 8.33376,7.82868 3.09059,8.63323 -0.67094,18.03021 -3.53554,22.72843 -7.49922,12.29948 -16.66752,17.67767 -19.1929,14.89975 -5.80838,-7.82868 -3.97472,-3.72176 -6.06092,3.43452 -3.61879,4.97823 3.03046,15.50584 -15.40482,31.66828 -11.86929,14.89975 -33.0825,19.44544 -33.0825,19.44544 0,0 -20.45558,0.75761 -30.05203,-16.41498 -3.83715,-6.82453 -1.66118,-4.56258 -6.56832,-14.01173 -2.32838,-4.48352 -4.62617,-11.69735 -4.62617,-11.69735 -1.66519,-7.96036 -4.96795,-24.04093 -6.73572,-36.66784 -1.01015,-11.36422 1.38896,-19.69798 1.38896,-19.69798 l 0.12627,-50.76016 42.17387,-20.45558 47.98224,9.3439 14.39468,29.54697 -1.76777,39.14341 c 0,0 9.59645,-11.11168 12.62691,-8.33376 z");
			attr_dev(path3, "id", "path3456");
			attr_dev(path3, "class", "svelte-p4xb06");
			add_location(path3, file, 23, 2, 2312);
			attr_dev(path4, "id", "path5719");
			set_style(path4, "display", "inline");
			set_style(path4, "opacity", "1");
			set_style(path4, "fill", "none");
			set_style(path4, "stroke", "#000000");
			set_style(path4, "stroke-width", "0.5");
			set_style(path4, "stroke-miterlimit", "4.19999981");
			set_style(path4, "stroke-dasharray", "none");
			set_style(path4, "stroke-opacity", "1");
			attr_dev(path4, "d", "m 383.54188,202.66595 c 0,0.91245 -0.28487,1.75837 -0.77053,2.45367 -2.60108,1.07732 -6.16373,0.53397 -6.23006,0.87147 -0.96381,-0.78665 -1.57921,-1.98403 -1.57921,-3.32514 0.15753,-0.96299 0.20918,-2.17591 0.93988,-2.33348 3.25573,-0.70207 7.53963,-1.56517 7.63992,2.33348 z m -16.1494,0.81456 c 0,0 2.94863,-0.7202 3.36022,-1.02194 2.39288,-1.75421 7.50789,-3.10352 11.52639,-2.55401 2.20053,0.30091 4.07226,1.17121 4.98814,2.85622 0.22797,0.41939 -1.66308,1.11271 -2.46837,1.54887 -2.59167,1.4037 -9.20072,1.87094 -13.32775,0.5623 -1.27147,-0.40317 -3.90734,-0.49491 -4.07863,-1.39144 z");
			attr_dev(path4, "class", "svelte-p4xb06");
			add_location(path4, file, 27, 2, 3289);
			set_style(path5, "fill", "#3a3a3a");
			set_style(path5, "fill-opacity", "1");
			set_style(path5, "fill-rule", "evenodd");
			set_style(path5, "stroke", "#000000");
			set_style(path5, "stroke-width", "1px");
			set_style(path5, "stroke-linecap", "butt");
			set_style(path5, "stroke-linejoin", "miter");
			set_style(path5, "stroke-opacity", "1");
			attr_dev(path5, "d", "m 375.82725,200.29854 6.01041,-0.53033 c -0.53184,0 2.69076,4.64546 1.23744,5.12652 0,0 -2.2542,0.92759 -3.70554,0.80418 -1.91931,-0.1632 -3.55042,-0.10356 -3.54231,-0.0971 0,0 -2.29809,-5.12653 0,-5.3033 z");
			attr_dev(path5, "id", "path5929");
			attr_dev(path5, "class", "svelte-p4xb06");
			add_location(path5, file, 31, 2, 4069);
			set_style(circle, "display", "inline");
			set_style(circle, "opacity", "1");
			set_style(circle, "fill", "#000000");
			set_style(circle, "fill-opacity", "1");
			set_style(circle, "stroke", "#000000");
			set_style(circle, "stroke-width", "0.5");
			set_style(circle, "stroke-miterlimit", "4.19999981");
			set_style(circle, "stroke-dasharray", "none");
			set_style(circle, "stroke-opacity", "1");
			attr_dev(circle, "id", "path5721");
			attr_dev(circle, "cx", "379.80472");
			attr_dev(circle, "cy", "202.8176");
			attr_dev(circle, "r", "2.147855");
			attr_dev(circle, "class", "svelte-p4xb06");
			add_location(circle, file, 35, 2, 4468);
			set_style(path6, "display", "inline");
			set_style(path6, "fill", "none");
			set_style(path6, "fill-rule", "evenodd");
			set_style(path6, "stroke", "#000000");
			set_style(path6, "stroke-width", "0.5");
			set_style(path6, "stroke-linecap", "butt");
			set_style(path6, "stroke-linejoin", "miter");
			set_style(path6, "stroke-miterlimit", "4");
			set_style(path6, "stroke-dasharray", "none");
			set_style(path6, "stroke-opacity", "1");
			attr_dev(path6, "d", "m 340.29514,203.92246 c 0,0 -7.90066,-7.05811 -15.37957,-6.45235 -6.23119,0.5047 -6.18622,2.35143 -6.36397,2.2981 0,0 3.88909,2.82842 5.65686,3.27036 8.81729,0.0677 10.72445,-0.79894 12.28598,-0.13258 2.03239,0.8673 3.27037,0.83969 3.27037,0.83969 z");
			attr_dev(path6, "id", "path5735");
			attr_dev(path6, "class", "svelte-p4xb06");
			add_location(path6, file, 41, 2, 4728);
			set_style(path7, "display", "inline");
			set_style(path7, "fill", "none");
			set_style(path7, "fill-rule", "evenodd");
			set_style(path7, "stroke", "#000000");
			set_style(path7, "stroke-width", "0.5");
			set_style(path7, "stroke-linecap", "butt");
			set_style(path7, "stroke-linejoin", "miter");
			set_style(path7, "stroke-miterlimit", "4");
			set_style(path7, "stroke-dasharray", "none");
			set_style(path7, "stroke-opacity", "1");
			attr_dev(path7, "d", "m 325.04815,197.5585 c 0,0 -3.2671,3.73849 0.97227,4.94974 3.71231,1.06067 5.83363,-0.83969 5.83363,-0.83969 l -0.26516,-2.87262 -6.36397,-1.28163 z");
			attr_dev(path7, "id", "path5737");
			attr_dev(path7, "class", "svelte-p4xb06");
			add_location(path7, file, 45, 2, 5209);
			set_style(path8, "display", "inline");
			set_style(path8, "fill", "#ffffff");
			set_style(path8, "fill-opacity", "1");
			set_style(path8, "fill-rule", "evenodd");
			set_style(path8, "stroke", "#000000");
			set_style(path8, "stroke-width", "0.2");
			set_style(path8, "stroke-linecap", "butt");
			set_style(path8, "stroke-linejoin", "miter");
			set_style(path8, "stroke-miterlimit", "4");
			set_style(path8, "stroke-dasharray", "none");
			set_style(path8, "stroke-opacity", "1");
			attr_dev(path8, "d", "m 357.16085,233.63795 c 0,0 0.59099,-0.67992 1.74003,0.11557 1.14905,0.7955 2.25391,1.76777 3.18199,1.23744 0.92807,-0.53033 -0.79296,-3.04468 -2.87263,-2.96101 -2.06355,0.083 -7.59723,11.14626 -15.46796,-0.83969 -1.14733,-1.74721 -2.47298,-1.27887 -3.36982,-0.83316 -0.96376,0.47896 -1.45168,1.00919 -1.27056,1.05413 0.69825,0.17325 3.56586,-0.25444 5.33363,0.89461");
			attr_dev(path8, "id", "path5739");
			attr_dev(path8, "class", "svelte-p4xb06");
			add_location(path8, file, 49, 2, 5589);
			set_style(path9, "fill", "#161616");
			set_style(path9, "fill-opacity", "1");
			set_style(path9, "fill-rule", "evenodd");
			set_style(path9, "stroke", "#000000");
			set_style(path9, "stroke-width", "0.1");
			set_style(path9, "stroke-linecap", "butt");
			set_style(path9, "stroke-linejoin", "miter");
			set_style(path9, "stroke-opacity", "1");
			set_style(path9, "stroke-miterlimit", "4");
			set_style(path9, "stroke-dasharray", "none");
			attr_dev(path9, "d", "m 337.99687,249.03083 c -1.08333,0 -2.16667,0 -3.25,0 -0.25,0 -0.52639,-0.11181 -0.75,0 -0.0745,0.0373 0.0589,0.19107 0,0.25 -0.0878,0.0877 -1.07732,-0.0863 -1.25,0 -0.10541,0.0527 -0.14459,0.19729 -0.25,0.25 -0.15713,0.0786 -0.84287,-0.0786 -1,0 -0.0745,0.0373 0.0373,0.17546 0,0.25 -0.0527,0.10541 -0.16667,0.16666 -0.25,0.25 -0.0833,0.0833 -0.14459,0.19729 -0.25,0.25 -0.0745,0.0373 -0.19108,-0.0589 -0.25,0 -0.0589,0.0589 0.0589,0.19107 0,0.25 -0.0589,0.0589 -0.19108,-0.0589 -0.25,0 -0.0589,0.0589 0.0589,0.19107 0,0.25 -0.16783,0.16783 -0.33217,-0.16784 -0.5,0 -0.11785,0.11785 0.16667,0.5 0,0.5 -0.0833,0 0,-0.33334 0,-0.25 0,0.16666 0.0745,0.35092 0,0.5 -0.33333,0.66666 -0.25,-0.75 -0.25,0.25 0,0.58629 0.0589,-0.11786 -0.25,0.5 -0.0373,0.0745 0.0373,0.17546 0,0.25 -0.0527,0.10541 -0.1973,0.14459 -0.25,0.25 -0.0229,0.0459 0.0183,0.75 0,0.75 -0.0833,0 0.0589,-0.30893 0,-0.25 -0.11943,0.11943 -0.35663,0.64337 -0.25,0.75 0.11785,0.11785 0.38215,-0.11786 0.5,0 0.0589,0.0589 -0.0589,0.19107 0,0.25 0.0589,0.0589 0.17546,-0.0373 0.25,0 0.10541,0.0527 0.14459,0.19729 0.25,0.25 0.14907,0.0745 0.34189,-0.0527 0.5,0 1.81085,0.60361 -0.39415,-0.0721 0.75,0.5 0.0745,0.0373 0.17546,-0.0373 0.25,0 0.10541,0.0527 0.14459,0.19729 0.25,0.25 0.0745,0.0373 0.19107,-0.0589 0.25,0 0.0589,0.0589 -0.0589,0.19107 0,0.25 0.0589,0.0589 0.16667,0 0.25,0 0.0833,0.0833 0.18463,0.15194 0.25,0.25 0.10336,0.15504 0.19107,0.32322 0.25,0.5 0.10345,0.31035 -0.20523,0.27238 0.25,0.5 0.26667,0.13333 0.23333,-0.13334 0.5,0 0.10541,0.0527 0.14459,0.19729 0.25,0.25 0.0745,0.0373 0.16667,0 0.25,0 0.0833,0.0833 0.14459,0.19729 0.25,0.25 0.14907,0.0745 0.38215,-0.11786 0.5,0 0.0589,0.0589 -0.0589,0.19107 0,0.25 0.0589,0.0589 0.17094,-0.0264 0.25,0 0.17678,0.0589 0.33333,0.16666 0.5,0.25 0.16667,0.0833 0.34022,0.15413 0.5,0.25 0.4639,0.27834 1.38714,0.94761 1.75,1.25 2.16264,1.8022 -0.92109,-0.53073 1,0.75 0.0981,0.0654 0.14459,0.19729 0.25,0.25 0.0745,0.0373 0.16667,0 0.25,0 0.25,0 0.5,0 0.75,0 1.08333,0 2.16667,0 3.25,0 0.33333,0 0.66667,0 1,0 0.16667,0 0.33333,0 0.5,0 0.0833,0 0.19107,-0.0589 0.25,0 0.0589,0.0589 -0.0589,0.19107 0,0.25 0.0589,0.0589 0.16667,0 0.25,0 0.25,0 0.5,0 0.75,0 0.91667,0 1.83333,0 2.75,0 0.33333,0 0.6712,0.0548 1,0 0.33892,-0.0565 0.65986,-0.20141 1,-0.25 0.24749,-0.0354 0.50251,0.0354 0.75,0 2.4574,-0.35106 -0.62075,-0.25 2.25,-0.25 1.75,0 3.5,0 5.25,0 0.58333,0 1.16667,0 1.75,0 0.16667,0 0.33333,0 0.5,0 0.0833,0 0.17094,0.0264 0.25,0 0.17678,-0.0589 0.32322,-0.19108 0.5,-0.25 0.0791,-0.0264 0.16915,0.0202 0.25,0 0.25565,-0.0639 0.49434,-0.18609 0.75,-0.25 0.0808,-0.0202 0.19107,0.0589 0.25,0 0.0589,-0.0589 -0.0589,-0.19108 0,-0.25 0.0589,-0.0589 0.16667,0 0.25,0 0.16667,0 0.33333,0 0.5,0 0.91667,0 1.83333,0 2.75,0 0.0665,0 0.72936,0.0413 0.75,0 0.0745,-0.14908 -0.0527,-0.34189 0,-0.5 0.16583,-0.49749 0.23333,-0.11667 0.5,-0.25 0.10541,-0.0527 0.14459,-0.1973 0.25,-0.25 0.0745,-0.0373 0.19107,0.0589 0.25,0 0.0589,-0.0589 -0.0589,-0.19108 0,-0.25 0.0589,-0.0589 0.17546,0.0373 0.25,0 1.04044,-0.52022 -0.26726,0.0173 0.25,-0.5 0.0589,-0.0589 0.17546,0.0373 0.25,0 0.10541,-0.0527 0.14459,-0.1973 0.25,-0.25 0.14907,-0.0745 0.35093,0.0745 0.5,0 1.14415,-0.57208 -1.06085,0.10361 0.75,-0.5 0.0791,-0.0264 0.19107,0.0589 0.25,0 0.0589,-0.0589 -0.0373,-0.17547 0,-0.25 0.0527,-0.10541 0.19729,-0.14459 0.25,-0.25 0.13333,-0.26667 -0.13333,-0.23334 0,-0.5 0.0527,-0.10541 0.19729,-0.14459 0.25,-0.25 0.0373,-0.0745 -0.0589,-0.19108 0,-0.25 0.0589,-0.0589 0.19107,0.0589 0.25,0 0.0589,-0.0589 -0.0373,-0.17547 0,-0.25 0.0527,-0.10541 0.19729,-0.14459 0.25,-0.25 0.0373,-0.0745 -0.0589,-0.19108 0,-0.25 0.0589,-0.0589 0.19107,0.0589 0.25,0 0.0589,-0.0589 -0.0589,-0.19108 0,-0.25 0.11785,-0.11786 0.34189,0.0527 0.5,0 0.17678,-0.0589 0.32322,-0.19108 0.5,-0.25 0.32912,-0.10971 0.52928,0.19144 0.75,-0.25 0.22222,-0.44445 -0.13889,-0.13889 -0.25,-0.25 -0.0589,-0.0589 0.0589,-0.19108 0,-0.25 -0.0589,-0.0589 -0.17546,0.0373 -0.25,0 -0.21082,-0.10541 -0.28918,-0.39459 -0.5,-0.5 -0.0745,-0.0373 -0.17546,0.0373 -0.25,0 -0.10541,-0.0527 -0.15194,-0.18463 -0.25,-0.25 -0.15504,-0.10337 -0.36824,-0.11824 -0.5,-0.25 -0.0589,-0.0589 0.0589,-0.19108 0,-0.25 -0.0589,-0.0589 -0.19108,0.0589 -0.25,0 -0.0589,-0.0589 0.0589,-0.19108 0,-0.25 -0.11785,-0.11786 -0.35093,0.0745 -0.5,0 -0.10541,-0.0527 -0.14459,-0.1973 -0.25,-0.25 -0.0745,-0.0373 -0.17546,0.0373 -0.25,0 -0.10541,-0.0527 -0.14459,-0.1973 -0.25,-0.25 -0.14647,-0.0732 -1.06578,0.0461 -1.25,0 -0.18078,-0.0452 -0.32322,-0.19108 -0.5,-0.25 -0.32596,-0.10866 -0.66963,-0.15561 -1,-0.25 -0.25338,-0.0724 -0.5,-0.16667 -0.75,-0.25 -0.25,-0.0833 -0.52403,-0.11442 -0.75,-0.25 -0.20211,-0.12127 -0.28918,-0.39459 -0.5,-0.5 -0.14907,-0.0745 -0.34189,0.0527 -0.5,0 -0.1118,-0.0373 -0.14459,-0.1973 -0.25,-0.25 -0.14907,-0.0745 -0.38215,0.11785 -0.5,0 -0.0589,-0.0589 0.0589,-0.19108 0,-0.25 -0.0589,-0.0589 -0.16667,0 -0.25,0 -0.0833,0 -0.16667,0 -0.25,0 -0.41667,0 -0.83333,0 -1.25,0 -3.25,0 -6.5,0 -9.75,0 -2.91667,0 -5.83333,0 -8.75,0 -1.08333,0 -2.16667,0 -3.25,0 -0.33333,0 -0.66667,0 -1,0 -0.25,0 -0.5034,0.0411 -0.75,0 -0.41914,-0.0699 -0.83333,-0.16667 -1.25,-0.25 z");
			attr_dev(path9, "id", "path5952");
			attr_dev(path9, "class", "svelte-p4xb06");
			add_location(path9, file, 53, 2, 6205);
			set_style(path10, "fill", "#ffffff");
			set_style(path10, "fill-opacity", "1");
			set_style(path10, "fill-rule", "evenodd");
			set_style(path10, "stroke", "#000000");
			set_style(path10, "stroke-width", "0.2");
			set_style(path10, "stroke-linecap", "butt");
			set_style(path10, "stroke-linejoin", "miter");
			set_style(path10, "stroke-miterlimit", "4");
			set_style(path10, "stroke-dasharray", "none");
			set_style(path10, "stroke-opacity", "1");
			attr_dev(path10, "d", "m 371.1875,251.98721 c 0,0 0.1875,2.6875 -0.1875,3.25 -0.375,0.5625 -2.375,-0.0625 -2.5,-0.5625 -0.125,-0.5 -0.0625,1.5 -1.25,2.125 -1.1875,0.625 -2,-1.5625 -2,-1.5625 0,0 -0.5625,2.875 -2.25,2.5625 -1.6875,-0.3125 -2.1875,-1 -2.1875,-1 l -0.4375,-1.25 c 0,0 -0.6875,3.1875 -2.0625,2.6875 -1.375,-0.5 -2.4375,-0.1875 -2.875,-2.25 -0.4375,-2.0625 -0.5625,1.5 -0.5625,1.5 0,0 -5.1875,-0.0625 -5.6875,-0.6875 -0.5,-0.625 -0.3125,-1.3125 -0.3125,-1.3125 l -0.4375,1.3125 c 0,0 -4.75,0.3125 -5.1875,-0.75 -0.4375,-1.0625 -0.3125,-1.625 -0.3125,-1.625 l -0.4375,1.75 c 0,0 -2.0625,0.5 -2.9375,-1.4375 -0.875,-1.9375 -0.125,1.125 -0.125,1.125 0,0 -1.5625,0.6875 -2,-0.125 -0.4375,-0.8125 -0.75,-1.5625 -0.75,-1.5625 0,0 -1.875,-1.3125 -2.0625,-2.375 -0.1875,-1.0625 13.85095,-0.39461 13.85095,-0.39461 7.85323,0.18024 14.76784,-1.39611 22.71155,0.58211 z");
			attr_dev(path10, "id", "path5763");
			attr_dev(path10, "class", "svelte-p4xb06");
			add_location(path10, file, 57, 2, 11588);
			set_style(path11, "fill", "#ffffff");
			set_style(path11, "fill-opacity", "1");
			set_style(path11, "fill-rule", "evenodd");
			set_style(path11, "stroke", "#000000");
			set_style(path11, "stroke-width", "0.2");
			set_style(path11, "stroke-linecap", "butt");
			set_style(path11, "stroke-linejoin", "miter");
			set_style(path11, "stroke-miterlimit", "4");
			set_style(path11, "stroke-dasharray", "none");
			set_style(path11, "stroke-opacity", "1");
			attr_dev(path11, "d", "m 374.125,252.61221 c 0.69963,0.41978 -15.10409,-5.11245 -16.8125,-6.375 -0.81823,-0.60469 -2.6875,-0.1875 -2.6875,-0.1875 0,0 -4.375,1.6875 -5.4375,1.5 -1.0625,-0.1875 -1.83233,1.66412 -7,-2.5 -0.48666,-0.39215 -11.84804,2.6201 -13.75,7.375 -1,2.5 1.5625,0.625 1.5625,0.625 0,0 0.875,-2.5625 2.625,-2.5625 1.75,0 14.75,0.5625 15.875,0.875 1.125,0.3125 18.625,-0.3125 21.75,0.4375 3.125,0.75 3.375,1.4375 3.375,1.4375 0,0 -1,1.5 -2.0625,2.0625 -1.0625,0.5625 -6.6875,2.375 -8.875,2.6875 -2.1875,0.3125 -13.9375,0.3125 -14.75,0.375 -0.8125,0.0625 -4.625,1.1875 -8.375,-0.0625 -3.75,-1.25 -7.8125,-3.8125 -8.75,-4.3125 -0.9375,-0.5 -2.125,0.5625 -2.125,0.5625 0,0 0.75,-0.1875 1.5625,-0.1875 0.8125,0 7.3125,10 11.4375,10.9375 4.125,0.9375 9,1.75 15.5,-0.1875 6.5,-1.9375 10.3125,-4.5 13.25,-6.9375 2.9375,-2.4375 3.6875,-5.5625 3.6875,-5.5625 z");
			attr_dev(path11, "id", "path5792");
			attr_dev(path11, "class", "svelte-p4xb06");
			add_location(path11, file, 61, 2, 12670);
			set_style(path12, "fill", "#000000");
			set_style(path12, "fill-opacity", "1");
			set_style(path12, "fill-rule", "evenodd");
			set_style(path12, "stroke", "#000000");
			set_style(path12, "stroke-width", "1.52499998");
			set_style(path12, "stroke-linecap", "butt");
			set_style(path12, "stroke-linejoin", "miter");
			set_style(path12, "stroke-miterlimit", "4");
			set_style(path12, "stroke-dasharray", "none");
			set_style(path12, "stroke-opacity", "1");
			attr_dev(path12, "d", "m 408.375,202.11221 1.25,1.75 -1.25,-0.625 0.5,1.375 -0.625,0 0.5,1.375 -1.25,0.125 1,1.625 0.25,-1 0.625,1.375 -1.25,0.625 1.375,1.75 0.125,-1 0.875,1.125 -1.25,0.125 1.25,2.375 0.375,1.375 0.125,0.625 0.875,-3 0.125,2.375 1,-3.75 0.125,1.125 1.25,-3.5 0,2 1.125,-3.875 0.125,1.875 0.625,-5.125 0.625,2.875 0.75,-5.5 0.75,2 0.625,-2.75 0.5,1.75 1.125,-4 0.25,2.625 1.5,-1.25 2.5,-1 -0.75,-3.75 1.125,1.25 -1.125,-3.125 1.25,1 -1.125,-3.625 2,2.375 -0.75,-6.375 1.125,2.625 -0.75,-4.5 1.5,1.75 -1.75,-5.5 1.625,0.625 -1.25,-4.875 1.125,0.75 -2,-6.375 2,1.875 -2.75,-5.75 2.25,2.25 -1.5,-5.625 1.5,1.5 -1.375,-3.75 1.875,2.125 -2.75,-5.625 2.625,2.25 -2.25,-4.5 2.125,1.5 -2.125,-3.875 2.125,1.125 -2.625,-4 3.875,3.125 -3.75,-6 2,0.625 -3.125,-3.875 2,0.5 -1.875,-3.5 1.625,0.25 -1.625,-3.875 -0.625,1.5 -1,-3 -1.375,1.5 -3,-3.125 -3.25,-4.5 0.375,2.625 -3.5,-4.625 0.625,2.25 -3.875,-4.75 -0.375,1.75 -3,-3.625 -0.375,1.75 -2.125,-3.375 0.25,2.25 -2.875,-4.5 -1,1 -3.625,-3.5 1.375,2.5 -4.625,-4.25 1.125,2.375 -3.375,-2.875 0.75,2 -3.125,-3.25 1,1.625 -2.875,-3.375 1.375,3 -2.375,-2.75 -2,-0.75 0.75,1.625 -2.375,-2.5 -4.125,-1.625 -2,0 3,1.125 -0.25,2.25 -3.5,-2.625 1.25,1.75 -2.875,-2.25 -0.5,2.125 -2.875,-2.625 -4.625,-1.125 2.5,1.625 -5.625,-0.875 2.625,2.125 -4.5,-1.25 2.125,2 -6,-2 2.75,2.25 -2.875,-1 0.5,1.5 -3.5,-1.625 1.125,2.125 -4,-0.875 1.625,1.625 -5.875,-0.5 1.875,1.5 -6.375,-0.25 3.75,1.75 -6.25,-0.625 -4.125,0.5 3.625,0.875 -5.75,-0.25 1.625,1.625 -2.375,0.125 0.75,1 -3.875,0 2.25,1.375 -3.75,0 1.5,1.125 -3.5,0.125 2,1.375 -3.375,1.375 2.5,0.125 -5.125,1.125 2.5,0.25 -3.375,1.375 3.25,0.25 -4.75,1.375 3.25,0.875 -5.5,-0.375 1.125,1.5 -3.75,0.5 -1.375,2.625 2.25,-1.75 0.75,1.125 -2.75,1.25 -1.25,1.75 2.25,-0.875 -3,3.375 2.25,-0.5 -4.125,4.5 2.125,-0.75 -2.875,4.125 1.875,0.25 -3.5,1.625 1.25,0 -2.375,3.5 2.125,-1.125 -4.125,4.375 3.25,-1.75 -2.875,4.125 1.5,-1.25 -2.25,4.625 2.125,-2.125 -3.625,4.25 1.875,-0.75 -1.125,3.625 1.375,-1.375 -1.625,4.875 1.125,-1.375 -0.875,3.375 1.125,-0.875 -0.875,4 1.75,0 -1.5,3.625 1.25,-0.625 -1.375,4.375 1.625,-2 -1,4.5 1.25,-0.875 -0.5,5.375 1.25,-2.125 -0.875,3.5 0.875,-0.625 0.625,1.25 -0.5,3.375 1.375,-1.25 -1.5,3.375 1.25,-0.75 0,3.25 1.375,-1.25 -1.625,4 1.375,-0.625 -1.125,3.875 1.375,-1.125 -0.25,2.875 0.875,-1.25 0,3.375 1.25,-6.75 1,-3.375 -0.25,-14.625 c 0,0 -0.38388,-13.83731 0.11612,-16.83731 0.22841,-1.37048 0.41992,-3.42336 0.56058,-5.24915 0.16725,-2.17091 1.32326,-6.67242 1.32326,-6.67242 l 1.74209,-2.39809 1.57346,3.21809 1.25374,-4.4424 0.95991,3.8324 c 2.04411,1.39169 -3.27416,-23.57977 4.71812,-0.77468 l 1.94145,3.08161 0.92962,-4.17067 1.72259,6.10347 1.16219,-6.33847 1.59848,6.0116 2.67638,-5.50508 2.46286,2.6589 3.37124,-3.19625 2.63338,2.59721 2.8503,-4.68805 c 6.20964,2.74575 1.20519,-6.59939 8.0223,2.40363 l 2.78374,-0.37388 c 1.54729,0.71082 2.61617,-7.80305 4.64245,-0.86534 l 3.01491,2.43407 4.49535,-2.7942 -1.00482,4.1201 3.91819,-4.12968 0.0778,4.91894 c 1.86231,-0.26724 3.05081,-8.19221 3.81916,-0.80173 l 6.51003,-8.29278 -1.71331,7.30334 5.16272,-5.33956 -2.34862,5.46075 4.97838,-5.97649 -1.73083,5.72581 4.78034,-6.69319 -1.03841,4.66959 5.95476,-5.85981 -1.90573,6.16102 c 2.28016,-0.74003 4.71712,-6.03779 8.25469,-3.63431 0.28273,1.77056 1.17061,-3.08679 2.14216,-1.56048 1.01451,1.59381 2.08829,9.57306 1.1153,11.53279 -1.39005,2.79974 -1.7925,-4.01355 -0.1437,8.2574 0.12885,0.95893 1.98496,7.57435 1.98496,7.57435 2.14522,2.36754 3.64747,4.60481 4.63372,7.23447 1.0037,2.67618 0.59936,7.78673 0.97746,10.87266 0.36896,3.01139 -0.74758,5.21412 -2.17468,9.53909");
			attr_dev(path12, "id", "path5803");
			attr_dev(path12, "class", "svelte-p4xb06");
			add_location(path12, file, 65, 2, 13748);
			set_style(path13, "fill", "#000000");
			set_style(path13, "fill-opacity", "1");
			set_style(path13, "fill-rule", "evenodd");
			set_style(path13, "stroke", "#000000");
			set_style(path13, "stroke-width", "1px");
			set_style(path13, "stroke-linecap", "butt");
			set_style(path13, "stroke-linejoin", "miter");
			set_style(path13, "stroke-opacity", "1");
			attr_dev(path13, "d", "m 382.89832,191.10615 3.18198,0.53033 -2.12132,-0.17678 4.41942,1.23744 -1.94455,-1.32583 c 1.76777,0.20624 2.41568,2.27892 5.30331,0.61872 l -1.94455,1.41421 3.35876,-0.61871 2.2981,0.44194 1.23743,0.17677 -0.88388,0.53033 2.12132,0 -1.76777,0.53033 2.65165,0.88389 1.76777,-0.53033 -2.2981,-2.12132 0.88389,-0.35356 -4.77297,-1.94454 2.65165,0.17678 -4.06587,-1.76777 -0.53033,0.70711 -5.03813,-2.38649 -1.06066,0.70711 -2.38649,-1.5026 -1.41421,0.0884 -2.12132,0.26517 -1.85616,-0.26516 -2.56326,-0.0884 -1.23743,0.35355 -1.76777,0.53033 -1.5026,-0.0884 -3.88909,-0.26516 1.85615,1.06066 -5.21491,-0.26516 0.79549,0.26516 -3.88908,0.88388 3.53553,0.35355 -3.8007,2.47488 3.35876,-0.26516 3.27036,-0.70711 0.35356,0.44194 -3.18197,0.26516 -1.32584,0.97227 5.3917,-0.35355 4.41941,-0.88388 3.18198,-0.70711 3.18198,-0.70711 -6.54073,1.94455 8.3085,-1.41422 -1.59099,1.23744 z");
			attr_dev(path13, "id", "path5805");
			attr_dev(path13, "class", "svelte-p4xb06");
			add_location(path13, file, 69, 2, 17580);
			set_style(path14, "fill", "#000000");
			set_style(path14, "fill-opacity", "1");
			set_style(path14, "fill-rule", "evenodd");
			set_style(path14, "stroke", "#000000");
			set_style(path14, "stroke-width", "1px");
			set_style(path14, "stroke-linecap", "butt");
			set_style(path14, "stroke-linejoin", "miter");
			set_style(path14, "stroke-opacity", "1");
			attr_dev(path14, "d", "m 338.88092,190.39904 -5.65685,-4.24264 -0.7955,-0.44194 c 1.11959,1.00173 -3.09359,-0.0884 -3.09359,-0.0884 l -2.47487,-0.88388 -2.74004,0.0884 -4.68458,0.53034 -0.0884,0.0884 -2.38647,0.0884 -4.06587,1.85616 3.71231,-0.35356 -5.3033,2.2981 2.2981,-0.35355 -3.27037,1.67938 0.61872,-0.0884 -1.67938,1.5026 2.38648,-0.26517 -0.0884,0.17678 2.56326,-0.70711 2.74003,-1.23743 0.44195,0.7071 3.44714,-1.94454 0.44194,0.88388 2.38649,-1.06066 4.68458,-0.17677 -4.24264,-0.17678 7.42462,1.41421 -2.38648,1e-5 6.09879,0.17677 z");
			attr_dev(path14, "id", "path5807");
			attr_dev(path14, "class", "svelte-p4xb06");
			add_location(path14, file, 73, 2, 18649);
			set_style(path15, "fill", "#2e2e2e");
			set_style(path15, "fill-opacity", "1");
			set_style(path15, "fill-rule", "evenodd");
			set_style(path15, "stroke", "#000000");
			set_style(path15, "stroke-width", "0.5");
			set_style(path15, "stroke-linecap", "butt");
			set_style(path15, "stroke-linejoin", "miter");
			set_style(path15, "stroke-miterlimit", "4");
			set_style(path15, "stroke-dasharray", "none");
			set_style(path15, "stroke-opacity", "1");
			attr_dev(path15, "d", "m 333.22407,199.59143 -0.53033,3.35876 c 0,0 -5.83363,1.41421 -7.95495,-0.35356 -2.12132,-1.76776 -1.50261,-5.12652 -1.50261,-5.12652 l 8.57368,1.23744 -0.35356,1.76776 -1.59099,-1.23743 -2.82842,-0.88389 c 0,0 -2.65166,1.23744 -0.70711,3.00521 1.94454,1.76776 5.3033,-0.35356 5.3033,-0.35356 z");
			attr_dev(path15, "id", "path5809");
			attr_dev(path15, "class", "svelte-p4xb06");
			add_location(path15, file, 77, 2, 19363);
			set_style(path16, "fill", "none");
			set_style(path16, "fill-rule", "evenodd");
			set_style(path16, "stroke", "#000000");
			set_style(path16, "stroke-width", "0.2");
			set_style(path16, "stroke-linecap", "butt");
			set_style(path16, "stroke-linejoin", "miter");
			set_style(path16, "stroke-miterlimit", "4");
			set_style(path16, "stroke-dasharray", "none");
			set_style(path16, "stroke-opacity", "1");
			attr_dev(path16, "d", "m 370.1704,232.29512 c 0,0 0,0 7.60139,7.95495 0.83972,0.87877 0,0 3.75742,7.10488 0.21545,0.40739 0.30845,0.67329 0.30845,0.67329 0,0 1.41421,4.41942 -0.17678,9.19239 -1.59099,4.77297 -1.41421,3.53554 -1.41421,3.53554 l 0,0.88388");
			attr_dev(path16, "id", "path5815");
			attr_dev(path16, "class", "svelte-p4xb06");
			add_location(path16, file, 81, 2, 19892);
			set_style(path17, "fill", "none");
			set_style(path17, "fill-rule", "evenodd");
			set_style(path17, "stroke", "#000000");
			set_style(path17, "stroke-width", "0.2");
			set_style(path17, "stroke-linecap", "butt");
			set_style(path17, "stroke-linejoin", "miter");
			set_style(path17, "stroke-miterlimit", "4");
			set_style(path17, "stroke-dasharray", "none");
			set_style(path17, "stroke-opacity", "1");
			attr_dev(path17, "d", "m 335.52217,227.52215 c 0,0 -3.88909,0.35355 -10.78338,15.20279");
			attr_dev(path17, "id", "path5817");
			attr_dev(path17, "class", "svelte-p4xb06");
			add_location(path17, file, 85, 2, 20339);
			set_style(path18, "display", "inline");
			set_style(path18, "fill", "none");
			set_style(path18, "fill-rule", "evenodd");
			set_style(path18, "stroke", "#000000");
			set_style(path18, "stroke-width", "0.1");
			set_style(path18, "stroke-linecap", "butt");
			set_style(path18, "stroke-linejoin", "miter");
			set_style(path18, "stroke-miterlimit", "4");
			set_style(path18, "stroke-dasharray", "none");
			set_style(path18, "stroke-opacity", "1");
			attr_dev(path18, "d", "m 307.2379,216.03166 c 0,0 -1.32583,4.06587 0.26516,5.65686 1.59099,1.59099 1.32583,5.12652 1.32583,5.12652 l -1.76777,-3.71231 -2.2981,-0.17678 c 0,0 -3.35876,-6.71751 -1.06066,-9.01561");
			attr_dev(path18, "id", "path5821");
			attr_dev(path18, "class", "svelte-p4xb06");
			add_location(path18, file, 89, 2, 20619);
			set_style(path19, "display", "inline");
			set_style(path19, "fill", "#ffffff");
			set_style(path19, "fill-opacity", "1");
			set_style(path19, "fill-rule", "evenodd");
			set_style(path19, "stroke", "#000000");
			set_style(path19, "stroke-width", "0.2");
			set_style(path19, "stroke-linecap", "butt");
			set_style(path19, "stroke-linejoin", "miter");
			set_style(path19, "stroke-miterlimit", "4");
			set_style(path19, "stroke-dasharray", "none");
			set_style(path19, "stroke-opacity", "1");
			attr_dev(path19, "d", "m 303.17203,206.48572 -2.47487,6.36396 c 0,0 -0.88389,7.42462 1.23743,11.13693 2.12133,3.71231 -2.65165,-6.0104 -2.65165,-6.0104 l -1.59099,-10.07628 c 0,0 1.23744,-3.53553 1.59099,-4.77297 0.35356,-1.23743 0.17678,-6.36396 1.06066,-6.36396 0.88389,0 3.18198,1.41422 3.18198,2.82843");
			attr_dev(path19, "id", "path5823");
			attr_dev(path19, "class", "svelte-p4xb06");
			add_location(path19, file, 93, 2, 21037);
			set_style(path20, "display", "inline");
			set_style(path20, "fill", "none");
			set_style(path20, "fill-rule", "evenodd");
			set_style(path20, "stroke", "#000000");
			set_style(path20, "stroke-width", "0.2");
			set_style(path20, "stroke-linecap", "butt");
			set_style(path20, "stroke-linejoin", "miter");
			set_style(path20, "stroke-miterlimit", "4");
			set_style(path20, "stroke-dasharray", "none");
			set_style(path20, "stroke-opacity", "1");
			attr_dev(path20, "d", "m 417.90011,211.43547 -1.94455,3.71231 c 0,0 4.41942,8.3085 0.17678,10.78338 -4.24264,2.47487 -5.65685,5.48007 -3.53553,4.59619 2.12132,-0.88388 4.94974,-4.59619 5.65685,-4.59619");
			attr_dev(path20, "id", "path5825");
			attr_dev(path20, "class", "svelte-p4xb06");
			add_location(path20, file, 97, 2, 21569);
			set_style(path21, "display", "inline");
			set_style(path21, "fill", "none");
			set_style(path21, "fill-rule", "evenodd");
			set_style(path21, "stroke", "#000000");
			set_style(path21, "stroke-width", "0.1");
			set_style(path21, "stroke-linecap", "butt");
			set_style(path21, "stroke-linejoin", "miter");
			set_style(path21, "stroke-miterlimit", "4");
			set_style(path21, "stroke-dasharray", "none");
			set_style(path21, "stroke-opacity", "1");
			attr_dev(path21, "d", "m 422.4963,202.0663 c 0,0 9.61922,-2.559 9.54594,13.61181 -0.021,4.64361 -2.45988,3.93859 -2.45988,3.93859 -0.6039,9.10214 -7.96994,13.20875 -7.96994,13.20875 0,0 6.36396,-4.24264 6.54073,-13.61181 0.17678,-9.36916 2.12133,-13.96536 -5.65685,-17.14734");
			attr_dev(path21, "id", "path5827");
			attr_dev(path21, "class", "svelte-p4xb06");
			add_location(path21, file, 101, 2, 21979);
			set_style(path22, "display", "inline");
			set_style(path22, "fill", "none");
			set_style(path22, "fill-rule", "evenodd");
			set_style(path22, "stroke", "#000000");
			set_style(path22, "stroke-width", "0.5");
			set_style(path22, "stroke-linecap", "butt");
			set_style(path22, "stroke-linejoin", "miter");
			set_style(path22, "stroke-miterlimit", "4");
			set_style(path22, "stroke-dasharray", "none");
			set_style(path22, "stroke-opacity", "1");
			attr_dev(path22, "d", "m 391.75,200.48721 c 0,0 -5.875,-13.875 -25,0.25");
			attr_dev(path22, "id", "path5829");
			attr_dev(path22, "class", "svelte-p4xb06");
			add_location(path22, file, 105, 2, 22462);
			set_style(path23, "display", "inline");
			set_style(path23, "fill", "none");
			set_style(path23, "fill-rule", "evenodd");
			set_style(path23, "stroke", "#000000");
			set_style(path23, "stroke-width", "0.5");
			set_style(path23, "stroke-linecap", "butt");
			set_style(path23, "stroke-linejoin", "miter");
			set_style(path23, "stroke-miterlimit", "4");
			set_style(path23, "stroke-dasharray", "none");
			set_style(path23, "stroke-opacity", "1");
			attr_dev(path23, "d", "m 316.375,195.48721 c 0,0 11.875,-10.875 25,6.125");
			attr_dev(path23, "id", "path5831");
			attr_dev(path23, "class", "svelte-p4xb06");
			add_location(path23, file, 109, 2, 22742);
			set_style(path24, "display", "inline");
			set_style(path24, "fill", "none");
			set_style(path24, "fill-rule", "evenodd");
			set_style(path24, "stroke", "#000000");
			set_style(path24, "stroke-width", "0.2");
			set_style(path24, "stroke-linecap", "butt");
			set_style(path24, "stroke-linejoin", "miter");
			set_style(path24, "stroke-miterlimit", "4");
			set_style(path24, "stroke-dasharray", "none");
			set_style(path24, "stroke-opacity", "1");
			attr_dev(path24, "d", "m 377,250.61221 c 0,0 2.25,3 1,6.25");
			attr_dev(path24, "id", "path5833");
			attr_dev(path24, "class", "svelte-p4xb06");
			add_location(path24, file, 113, 2, 23023);
			set_style(path25, "fill", "none");
			set_style(path25, "fill-rule", "evenodd");
			set_style(path25, "stroke", "#000000");
			set_style(path25, "stroke-width", "0.2");
			set_style(path25, "stroke-linecap", "butt");
			set_style(path25, "stroke-linejoin", "miter");
			set_style(path25, "stroke-miterlimit", "4");
			set_style(path25, "stroke-dasharray", "none");
			set_style(path25, "stroke-opacity", "1");
			attr_dev(path25, "d", "m 342.15129,223.98661 c 0.0399,0.005 -10.65802,1.66257 -5.27684,8.39347 0.338,0.42278 4.79981,0.86218 4.79981,0.86218");
			attr_dev(path25, "id", "path5842");
			attr_dev(path25, "class", "svelte-p4xb06");
			add_location(path25, file, 117, 2, 23290);
			set_style(path26, "fill", "none");
			set_style(path26, "fill-rule", "evenodd");
			set_style(path26, "stroke", "#000000");
			set_style(path26, "stroke-width", "0.2");
			set_style(path26, "stroke-linecap", "butt");
			set_style(path26, "stroke-linejoin", "miter");
			set_style(path26, "stroke-miterlimit", "4");
			set_style(path26, "stroke-dasharray", "none");
			set_style(path26, "stroke-opacity", "1");
			attr_dev(path26, "d", "m 364.51354,226.80984 c 0,0 6.18719,9.28598 -1.85615,9.1092");
			attr_dev(path26, "id", "path5844");
			attr_dev(path26, "class", "svelte-p4xb06");
			add_location(path26, file, 121, 2, 23624);
			set_style(path27, "display", "inline");
			set_style(path27, "fill", "none");
			set_style(path27, "fill-rule", "evenodd");
			set_style(path27, "stroke", "#000000");
			set_style(path27, "stroke-width", "0.60000002");
			set_style(path27, "stroke-linecap", "butt");
			set_style(path27, "stroke-linejoin", "miter");
			set_style(path27, "stroke-miterlimit", "4");
			set_style(path27, "stroke-dasharray", "none");
			set_style(path27, "stroke-opacity", "1");
			attr_dev(path27, "d", "m 332.5,189.86221 c 0,0 16.25,7 12.25,17");
			attr_dev(path27, "id", "path5848");
			attr_dev(path27, "class", "svelte-p4xb06");
			add_location(path27, file, 125, 2, 23900);
			set_style(ellipse0, "display", "inline");
			set_style(ellipse0, "opacity", "0");
			set_style(ellipse0, "fill", "none");
			set_style(ellipse0, "stroke", "#000000");
			set_style(ellipse0, "stroke-width", "0.30000001");
			set_style(ellipse0, "stroke-miterlimit", "4");
			set_style(ellipse0, "stroke-dasharray", "none");
			set_style(ellipse0, "stroke-opacity", "1");
			attr_dev(ellipse0, "id", "path5697");
			attr_dev(ellipse0, "cx", "379.46429");
			attr_dev(ellipse0, "cy", "203.6122");
			attr_dev(ellipse0, "rx", "1.0714285");
			attr_dev(ellipse0, "ry", "3.75");
			add_location(ellipse0, file, 129, 2, 24179);
			set_style(ellipse1, "display", "inline");
			set_style(ellipse1, "opacity", "0");
			set_style(ellipse1, "fill", "none");
			set_style(ellipse1, "stroke", "#000000");
			set_style(ellipse1, "stroke-width", "0.1");
			set_style(ellipse1, "stroke-miterlimit", "4");
			set_style(ellipse1, "stroke-dasharray", "none");
			set_style(ellipse1, "stroke-opacity", "1");
			attr_dev(ellipse1, "id", "path5699");
			attr_dev(ellipse1, "cx", "380.55804");
			attr_dev(ellipse1, "cy", "202.71935");
			attr_dev(ellipse1, "rx", "2.4330356");
			attr_dev(ellipse1, "ry", "1.875");
			add_location(ellipse1, file, 136, 2, 24438);
			set_style(ellipse2, "display", "inline");
			set_style(ellipse2, "opacity", "0");
			set_style(ellipse2, "fill", "none");
			set_style(ellipse2, "stroke", "#000000");
			set_style(ellipse2, "stroke-width", "0.1");
			set_style(ellipse2, "stroke-miterlimit", "4");
			set_style(ellipse2, "stroke-dasharray", "none");
			set_style(ellipse2, "stroke-opacity", "1");
			attr_dev(ellipse2, "id", "path5701");
			attr_dev(ellipse2, "cx", "379.2634");
			attr_dev(ellipse2, "cy", "202.71935");
			attr_dev(ellipse2, "rx", "1.8973215");
			attr_dev(ellipse2, "ry", "1.4732143");
			add_location(ellipse2, file, 143, 2, 24692);
			set_style(ellipse3, "display", "inline");
			set_style(ellipse3, "opacity", "0");
			set_style(ellipse3, "fill", "none");
			set_style(ellipse3, "stroke", "#000000");
			set_style(ellipse3, "stroke-width", "0.1");
			set_style(ellipse3, "stroke-miterlimit", "4");
			set_style(ellipse3, "stroke-dasharray", "none");
			set_style(ellipse3, "stroke-opacity", "1");
			attr_dev(ellipse3, "id", "path5703");
			attr_dev(ellipse3, "cx", "391.74106");
			attr_dev(ellipse3, "cy", "208.1881");
			attr_dev(ellipse3, "rx", "1.9196428");
			attr_dev(ellipse3, "ry", "1.6294643");
			add_location(ellipse3, file, 150, 2, 24949);
			set_style(path28, "fill", "#000000");
			set_style(path28, "fill-opacity", "1");
			set_style(path28, "fill-rule", "evenodd");
			set_style(path28, "stroke", "#000000");
			set_style(path28, "stroke-width", "1px");
			set_style(path28, "stroke-linecap", "butt");
			set_style(path28, "stroke-linejoin", "miter");
			set_style(path28, "stroke-opacity", "1");
			attr_dev(path28, "d", "m 328.80465,198.53077 -1.06066,-1.06066 -1.94454,0 c 0,0 -0.53033,5.3033 2.2981,4.41942 2.82842,-0.88389 4.59619,-1.94455 4.59619,-1.94455 l -4.59619,-2.47487 0,0");
			attr_dev(path28, "id", "path5927");
			attr_dev(path28, "class", "svelte-p4xb06");
			add_location(path28, file, 157, 2, 25206);
			attr_dev(path29, "transform", "translate(296.49688,106.24631)");
			set_style(path29, "fill", "none");
			set_style(path29, "fill-rule", "evenodd");
			set_style(path29, "stroke", "#000000");
			set_style(path29, "stroke-width", "0.69999999");
			set_style(path29, "stroke-linecap", "butt");
			set_style(path29, "stroke-linejoin", "miter");
			set_style(path29, "stroke-miterlimit", "4");
			set_style(path29, "stroke-dasharray", "none");
			set_style(path29, "stroke-opacity", "1");
			attr_dev(path29, "d", "m 61.739253,126.6998 c 0.01738,0.071 -0.415139,0.0308 -0.441942,0.0442 -0.01318,0.007 -0.01042,0.0338 0,0.0442 0.02083,0.0208 0.06044,-0.009 0.08839,0 0.03125,0.0104 0.05714,0.0338 0.08839,0.0442 0.02795,0.009 0.06755,-0.0208 0.08839,0 0.01042,0.0104 -0.01042,0.0338 0,0.0442 0.01042,0.0104 0.03102,-0.007 0.04419,0 0.03727,0.0186 0.04886,0.0752 0.08839,0.0884 0.0083,0.003 0.259693,0.002 0.265165,0 0.03125,-0.0104 0.05714,-0.0338 0.08839,-0.0442 0.02795,-0.009 0.05893,0 0.08839,0 0.07366,0 0.147314,0 0.220971,0 0.07366,0 0.147314,0 0.220971,0 0.01473,0 0.02946,0 0.04419,0 0.01473,0 0.03241,-0.009 0.04419,0 0.01279,0.01 0.234711,0.24994 0.265165,0.26517 0.07823,0.0391 0.0151,-0.0657 0.08839,0.0442 0.117851,0.17678 -0.04419,0.0147 0.132582,0.13258 0.01733,0.0116 0.02443,0.0376 0.04419,0.0442 0.02795,0.009 0.06044,-0.009 0.08839,0 0.03953,0.0132 0.05112,0.0697 0.08839,0.0884 0.01318,0.007 0.03102,-0.007 0.04419,0 0.01863,0.009 0.02556,0.0349 0.04419,0.0442 0.01318,0.007 0.04419,-0.0147 0.04419,0 0,0.0208 -0.02398,0.0391 -0.04419,0.0442 -0.04287,0.0107 -0.08839,0 -0.132582,0 -0.04419,0 -0.08899,0.007 -0.132583,0 -0.04791,-0.008 -0.172883,-0.0563 -0.22097,-0.0884 -0.01036,-0.007 -0.05465,-0.0779 -0.08839,-0.0442 -0.03251,0.0325 0.03556,0.0798 0.04419,0.0884 0.0442,0.0442 0.08839,0.0884 0.132583,0.13258 0.01473,0.0147 0.02686,0.0326 0.04419,0.0442 0.101616,0.0677 0.119355,0.0206 0.220971,0.0884 0.03985,0.0266 0.150993,0.16819 0.176777,0.17678 0.02795,0.009 0.06044,-0.009 0.08839,0 0.03953,0.0132 0.05112,0.0698 0.08839,0.0884 0.02635,0.0132 0.06755,-0.0208 0.08839,0 0.02329,0.0233 0.0209,0.0651 0.04419,0.0884 0.01355,0.0136 0.207313,-0.0137 0.220971,0 0.01042,0.0104 -0.01042,0.0338 0,0.0442 0.02083,0.0208 0.06204,-0.0132 0.08839,0 0.01863,0.009 0.02556,0.0349 0.04419,0.0442 0.01318,0.007 0.03378,-0.0104 0.04419,0 0.01042,0.0104 -0.01042,0.0338 0,0.0442 0.01042,0.0104 0.03102,-0.007 0.0442,0 0.09429,0.0472 -0.0059,0.0412 0.08839,0.0884 0.01318,0.007 0.03102,-0.007 0.04419,0 0.01863,0.009 0.02946,0.0295 0.04419,0.0442 0.01473,0.0147 0.03488,0.0256 0.04419,0.0442 0.0066,0.0132 -0.01042,0.0338 0,0.0442 0.01042,0.0104 0.03102,-0.007 0.0442,0 0.01863,0.009 0.03488,0.0256 0.04419,0.0442 0.0066,0.0132 -0.01318,0.0376 0,0.0442 0.02635,0.0132 0.06204,-0.0132 0.08839,0 0.01318,0.007 -0.01042,0.0338 0,0.0442 0.01042,0.0104 0.02946,0 0.04419,0 0.01473,0 0.02946,0 0.0442,0 0.103643,0 -0.02083,-0.0104 0.08839,0.0442 0.0038,0.002 0.173009,0.002 0.176777,0 0.08302,-0.0415 0.07379,-0.16218 0.132582,-0.22097 0.02329,-0.0233 0.06098,-0.0259 0.08839,-0.0442 0.01873,-0.0125 0.12344,-0.11429 0.132583,-0.13258 0.0066,-0.0132 -0.01042,-0.0338 0,-0.0442 0.01042,-0.0104 0.03378,0.0104 0.04419,0 0.0035,-0.004 0,-0.18619 0,-0.22097 0,-0.17265 0.01318,-0.005 -0.04419,-0.17678 -0.0047,-0.014 0.01042,-0.0338 0,-0.0442 -0.02329,-0.0233 -0.06098,-0.0259 -0.08839,-0.0442 -0.0608,-0.0405 -0.04545,-0.0682 -0.08839,-0.13258 -0.01156,-0.0173 -0.02946,-0.0295 -0.04419,-0.0442 -0.01473,-0.0147 -0.02946,-0.0295 -0.04419,-0.0442 -0.02946,-0.0147 -0.0651,-0.0209 -0.08839,-0.0442 -0.02329,-0.0233 -0.02443,-0.062 -0.0442,-0.0884 -0.05,-0.0667 -0.126776,-0.11011 -0.176776,-0.17678 -0.01976,-0.0264 -0.02443,-0.062 -0.04419,-0.0884 -0.025,-0.0333 -0.06236,-0.0558 -0.08839,-0.0884 -0.223002,-0.27875 0.03664,-0.008 -0.176777,-0.22097 -0.02946,-0.0295 -0.05893,-0.0589 -0.08839,-0.0884 -0.01473,-0.0147 -0.02556,-0.0349 -0.04419,-0.0442 -0.04419,-0.0147 -0.08839,-0.0295 -0.132583,-0.0442 -0.01473,-0.0147 -0.02556,-0.0349 -0.04419,-0.0442 -0.04167,-0.0208 -0.09264,-0.0202 -0.132582,-0.0442 -0.03573,-0.0214 -0.05112,-0.0698 -0.08839,-0.0884 -0.25868,-0.12934 -0.09536,0.0248 -0.265165,-0.0884 -0.04023,-0.0268 -0.09341,-0.113 -0.132582,-0.13258 -0.01318,-0.007 -0.03102,0.007 -0.04419,0 -0.03376,-0.0169 -0.102657,-0.12261 -0.132583,-0.13258 -0.02795,-0.009 -0.06044,0.009 -0.08839,0 -0.01976,-0.007 -0.02946,-0.0295 -0.04419,-0.0442 -0.01473,-0.0147 -0.03488,-0.0256 -0.0442,-0.0442 -0.0066,-0.0132 0.01042,-0.0338 0,-0.0442 -0.172478,-0.17247 -0.02373,0.0102 -0.132582,-0.0442 -0.01863,-0.009 -0.02556,-0.0349 -0.04419,-0.0442 -0.01318,-0.007 -0.03022,0.005 -0.04419,0 -0.03125,-0.0104 -0.05714,-0.0338 -0.08839,-0.0442 -0.02573,-0.009 -0.234756,0 -0.265165,0 -0.01473,0 -0.02946,0 -0.04419,0 -0.01473,0 -0.03378,-0.0104 -0.04419,0 -0.01042,0.0104 0.01042,0.0338 0,0.0442 -0.01042,0.0104 -0.03378,-0.0104 -0.04419,0 -0.02083,0.0208 0.01318,0.062 0,0.0884 -0.0093,0.0186 -0.03488,0.0256 -0.04419,0.0442 -0.0066,0.0132 0.0066,0.031 0,0.0442 -0.03479,0.0696 -0.111007,0.17165 -0.176776,0.22097 -0.02635,0.0198 -0.05893,0.0295 -0.08839,0.0442 -0.101564,0.0508 -0.05545,0.0442 -0.132582,0.0442 -0.03742,0 -0.153018,-0.008 -0.176777,0 -0.01976,0.007 -0.02556,0.0349 -0.04419,0.0442 -0.01318,0.007 -0.03102,-0.007 -0.04419,0 -0.01863,0.009 -0.02556,0.0349 -0.04419,0.0442 -0.01318,0.007 -0.04419,-0.0147 -0.04419,0 0,0.0751 0.08926,0.16088 0.04419,0.22097 0.02258,0.17123 -0.167856,-0.0973 -0.220971,-0.0442 -0.01042,0.0104 0.01042,0.0338 0,0.0442 -0.01042,0.0104 -0.03378,-0.0104 -0.04419,0 -0.01042,0.0104 0.01042,0.0338 0,0.0442 -0.01042,0.0104 -0.03761,-0.0132 -0.04419,0 -0.01318,0.0264 0.01318,0.062 0,0.0884 -0.0066,0.0132 -0.03378,-0.0104 -0.0442,0 -0.01042,0.0104 0.0066,0.031 0,0.0442 -0.0273,0.0546 -0.04267,0.0442 -0.08839,0.0442 -0.01473,0 -0.05893,0 -0.04419,0 0.117851,0 0.235702,0 0.353553,0 0.02946,0 0.05893,0 0.08839,0 0.02946,0 0.0598,0.007 0.08839,0 0.03196,-0.008 0.05643,-0.0362 0.08839,-0.0442 0.04288,-0.0107 0.08839,0 0.132583,0 0.08839,0 0.176776,0 0.265165,0 0.04162,0 0.19583,-0.008 0.220971,0 0.08535,0.0284 0.01545,0.0751 0.04419,0.13258 0.0066,0.0132 0.03378,-0.0104 0.04419,0 0.01042,0.0104 0,0.0295 0,0.0442 0,0.0147 0.0066,0.031 0,0.0442 -0.0093,0.0186 -0.02443,0.0376 -0.04419,0.0442 -0.04193,0.014 -0.08839,0 -0.132583,0 -0.05559,0 -0.197133,0.0273 -0.220971,-0.0442 -0.0093,-0.028 0,-0.0589 0,-0.0884 0,-0.0884 0,-0.17678 0,-0.26517 0,-0.0884 0,-0.17677 0,-0.26516 0,-0.0295 0,-0.0589 0,-0.0884 0,-0.0147 -0.0066,-0.031 0,-0.0442 0.0093,-0.0186 0.03488,-0.0256 0.0442,-0.0442 0.06759,-0.13518 -0.255969,0.10055 0.132582,-0.13258 0.02825,-0.017 0.0651,-0.0209 0.08839,-0.0442 0.02329,-0.0233 0.01679,-0.0701 0.04419,-0.0884 0.02451,-0.0164 0.05981,0.007 0.08839,0 0.03196,-0.008 0.05714,-0.0338 0.08839,-0.0442 0.0057,-0.002 0.128923,-0.002 0.132583,0 0.08586,0.0429 0.04419,0.14479 0.04419,0.22097 0,0.0737 -0.0067,0.14762 0,0.22098 0.05388,0.59269 0.04419,-0.002 0.04419,0.44194 0,0.11785 0,0.2357 0,0.35355 0,0.0147 -0.01042,0.0338 0,0.0442 0.01042,0.0104 0.03378,0.0104 0.04419,0 0.01042,-0.0104 -0.0047,-0.0302 0,-0.0442 0.01042,-0.0312 0.02946,-0.0589 0.0442,-0.0884 0.01473,-0.0295 0.02725,-0.0601 0.04419,-0.0884 0.06225,-0.10375 0.09217,-0.11995 0.132582,-0.22097 0.0173,-0.0433 0.0329,-0.0874 0.04419,-0.13258 0.0036,-0.0143 -0.0047,-0.0582 0,-0.0442 0.179387,0.53816 -0.01792,-0.0454 0.0442,0.26516 0.04598,0.22991 0.02946,0.0442 0.08839,0.22097 0.0093,0.028 -0.02083,0.0676 0,0.0884 0.03111,0.0311 0.08175,-0.0336 0.08839,-0.0442 0.06295,-0.10072 0.123662,-0.20313 0.176777,-0.30936 0.106954,-0.21391 0.139272,-0.3731 0.265165,-0.57453 0.02208,-0.0353 0.06975,-0.0511 0.08839,-0.0884 0.01318,-0.0264 -0.01318,-0.062 0,-0.0884 0.0066,-0.0132 0.02946,0 0.0442,0 0.01473,0 0.04062,-0.0143 0.04419,0 0.01429,0.0572 0,0.11785 0,0.17677 0,0.10312 0,0.20624 0,0.30936 0,0.0442 0,0.0884 0,0.13258 0,0.0295 -0.0093,0.0604 0,0.0884 0.07376,0.22128 0.0098,-0.0737 0.08839,0.0442 0.06283,0.0942 0.04419,0.2052 0.04419,0.30936 0,0.10312 0,0.20624 0,0.30936 0,0.0295 0,0.0589 0,0.0884 0,0.0147 0,0.0589 0,0.0442 0,-0.0884 0,-0.17678 0,-0.26517 0,-0.0147 0,-0.0295 0,-0.0442 0,-0.0147 0.01042,-0.0338 0,-0.0442 -2.34e-4,-2.3e-4 -0.131105,3.7e-4 -0.132582,0 -0.03196,-0.008 -0.05893,-0.0295 -0.08839,-0.0442 -0.04419,0 -0.08899,0.007 -0.132582,0 -0.04595,-0.008 -0.09092,-0.0234 -0.132583,-0.0442 -0.0317,-0.0159 -0.06948,-0.10092 -0.08839,-0.0442 -0.03872,0.11616 0.06765,0.32171 0.08839,0.39775 0.01976,0.0725 0.02443,0.1485 0.04419,0.22097 0.02451,0.0899 0.05567,0.17793 0.08839,0.26517 0.01157,0.0308 0.0209,0.0651 0.04419,0.0884 0.02329,0.0233 0.0651,0.0209 0.08839,0.0442 0.01042,0.0104 -0.01042,0.0338 0,0.0442 0.01042,0.0104 0.03378,0.0104 0.0442,0 0.01042,-0.0104 -0.0047,-0.0302 0,-0.0442 0.01042,-0.0312 0.02725,-0.0601 0.04419,-0.0884 0.08362,-0.13938 0.0727,-0.11689 0.176776,-0.22097 0.01473,-0.0147 0.02686,-0.0326 0.0442,-0.0442 0.02741,-0.0183 0.06098,-0.0259 0.08839,-0.0442 0.08086,-0.0539 0.0044,-0.0563 0.132582,-0.0884 0.04288,-0.0107 0.08839,0 0.132583,0 0.07366,0 0.147314,0 0.220971,0 0.01473,0 0.03378,-0.0104 0.04419,0 0.01042,0.0104 -0.0066,0.031 0,0.0442 0.0093,0.0186 0.03914,0.024 0.04419,0.0442 0.01429,0.0572 0,0.11785 0,0.17678 0,0.0147 0,0.0295 0,0.0442 0,0.0147 0.01318,0.0376 0,0.0442 -0.02635,0.0132 -0.05892,0 -0.08839,0 -0.07236,0 -0.08839,-0.016 -0.08839,-0.0884");
			attr_dev(path29, "id", "path5956");
			attr_dev(path29, "class", "svelte-p4xb06");
			add_location(path29, file, 161, 2, 25561);
			attr_dev(path30, "transform", "translate(296.49688,106.24631)");
			set_style(path30, "fill", "none");
			set_style(path30, "fill-rule", "evenodd");
			set_style(path30, "stroke", "#000000");
			set_style(path30, "stroke-width", "0.60000002");
			set_style(path30, "stroke-linecap", "butt");
			set_style(path30, "stroke-linejoin", "miter");
			set_style(path30, "stroke-miterlimit", "4");
			set_style(path30, "stroke-dasharray", "none");
			set_style(path30, "stroke-opacity", "1");
			attr_dev(path30, "d", "m 45.873544,124.22493 c -0.265165,0 -0.53033,0 -0.795495,0 -0.03074,0 -0.204989,0.008 -0.220971,0 -0.01863,-0.009 -0.02556,-0.0349 -0.04419,-0.0442 -0.0099,-0.005 -0.166275,0 -0.176777,0 -0.08839,0 -0.176776,0 -0.265165,0 -0.07366,0 -0.147313,0 -0.22097,0 -0.02946,0 -0.06044,-0.009 -0.08839,0 -0.137944,0.046 0.01473,0.0295 -0.04419,0.0884 -0.01042,0.0104 -0.04419,0.0147 -0.04419,0 0,-0.004 0.241174,0.005 0.265165,0 0.232018,-0.0464 0.06401,-0.0132 0.176777,-0.0884 0.0082,-0.005 0.173944,-0.0855 0.176776,-0.0884 0.02329,-0.0233 0.0209,-0.0651 0.04419,-0.0884 0.111631,-0.11163 0.05095,-0.017 0.132583,-0.0442 0.320117,-0.1067 -0.06968,0.0127 0.132583,-0.0884 0.01143,-0.006 0.23384,0 0.265165,0 0.02946,0 0.05893,0 0.08839,0 0.01473,0 0.05892,0 0.04419,0 -0.02946,0 -0.0595,-0.006 -0.08839,0 -0.05134,0.0103 -0.170464,0.0547 -0.220971,0.0884 -0.07218,0.0481 -0.01814,0.0655 -0.132583,0.0884 -0.337141,0 0.03486,-0.0198 -0.220971,0.0442 -0.04287,0.0107 -0.09066,-0.014 -0.132582,0 -0.03125,0.0104 -0.05714,0.0338 -0.08839,0.0442 -0.02795,0.009 -0.05893,0 -0.08839,0 -0.03613,0 -0.28696,-0.007 -0.309359,0 -0.01976,0.007 -0.02556,0.0349 -0.04419,0.0442 -0.01318,0.007 -0.03378,-0.0104 -0.04419,0 -0.01042,0.0104 0.0066,0.031 0,0.0442 -0.146574,0.14657 0.02083,-0.0417 -0.04419,0.0884 -0.0093,0.0186 -0.02946,0.0295 -0.0442,0.0442 -0.01473,0.0147 -0.02556,0.0349 -0.04419,0.0442 -0.01318,0.007 -0.03761,-0.0132 -0.04419,0 -0.01318,0.0264 0.01318,0.062 0,0.0884 -0.0066,0.0132 -0.03102,-0.007 -0.04419,0 -0.01863,0.009 -0.02686,0.0326 -0.04419,0.0442 -0.02741,0.0183 -0.0651,0.0209 -0.08839,0.0442 -0.01042,0.0104 0.0066,0.031 0,0.0442 -0.0093,0.0186 -0.03488,0.0256 -0.04419,0.0442 -0.0066,0.0132 0.0066,0.031 0,0.0442 -0.02023,0.0404 -0.100286,0.0776 -0.132582,0.0884 -0.01398,0.005 -0.03102,-0.007 -0.0442,0 -0.01863,0.009 -0.02556,0.0349 -0.04419,0.0442 -0.01318,0.007 -0.03102,-0.007 -0.04419,0 -0.01863,0.009 -0.02556,0.0349 -0.04419,0.0442 -0.108848,0.0544 0.0399,-0.12828 -0.132583,0.0442 -0.01042,0.0104 0.01042,0.0338 0,0.0442 -0.01042,0.0104 -0.03102,-0.007 -0.04419,0 -0.01863,0.009 -0.02556,0.0349 -0.04419,0.0442 -0.01318,0.007 -0.03378,-0.0104 -0.04419,0 -0.01042,0.0104 -0.01042,0.0338 0,0.0442 0.02031,0.0203 0.100757,-0.023 0.132582,-0.0442 0.01733,-0.0115 0.02686,-0.0326 0.04419,-0.0442 0.02741,-0.0183 0.05609,-0.0377 0.08839,-0.0442 0.018,-0.004 0.248512,0.008 0.265165,0 0.01863,-0.009 0.02556,-0.0349 0.04419,-0.0442 0.01318,-0.007 0.02946,0 0.04419,0 0.01473,0 0.02946,0 0.04419,0 0.103644,0 -0.02083,0.0104 0.08839,-0.0442 0.01162,-0.006 0.153666,0 0.176777,0 0.04282,0 0.238813,-0.009 0.265165,0 0.03125,0.0104 0.05893,0.0295 0.08839,0.0442 0.02946,0.0147 0.06098,0.0259 0.08839,0.0442 0.01733,0.0116 0.02443,0.0376 0.04419,0.0442 0.02795,0.009 0.05893,0 0.08839,0 0.02946,0 0.05893,0 0.08839,0 0.220971,0 0.441942,0 0.662913,0 0.07366,0 0.147314,0 0.220971,0 0.02946,0 0.06044,-0.009 0.08839,0 0.274318,0.0914 -0.14688,-0.004 0.220971,0.0884 0.02858,0.007 0.06204,-0.0132 0.08839,0 0.01863,0.009 0.02556,0.0349 0.04419,0.0442 0.01345,0.007 0.11268,0 0.132583,0 0.10312,0 0.206239,0 0.309359,0 0.01623,0 0.174998,-0.002 0.176777,0 0.01042,0.0104 -0.01318,0.0376 0,0.0442 0.03953,0.0198 0.08839,0 0.132582,0 0.01747,0 0.202097,-0.009 0.220971,0 0.01863,0.009 0.02556,0.0349 0.04419,0.0442 0.01318,0.007 0.03378,-0.0104 0.0442,0 0.01042,0.0104 -0.01042,0.0338 0,0.0442 0.0221,0.0221 0.110485,-0.0221 0.132582,0 0.05893,0.0589 -0.07366,0.0442 0.04419,0.0442 0.01473,0 0.02946,0 0.04419,0 0.01473,0 0.03378,-0.0104 0.0442,0 0.01042,0.0104 -0.01042,0.0338 0,0.0442 0.01042,0.0104 0.04419,-0.0147 0.04419,0 0,0.0147 -0.03378,0.0104 -0.04419,0 -0.02329,-0.0233 -0.02592,-0.061 -0.0442,-0.0884 -0.01156,-0.0173 -0.02946,-0.0295 -0.04419,-0.0442 -0.01473,-0.0147 -0.02686,-0.0326 -0.04419,-0.0442 -0.02741,-0.0183 -0.06098,-0.0259 -0.08839,-0.0442 -0.02143,-0.0143 -0.206686,-0.19954 -0.220971,-0.22097 -0.01827,-0.0274 -0.02592,-0.061 -0.04419,-0.0884 -0.01156,-0.0173 -0.02946,-0.0295 -0.0442,-0.0442 -0.01473,-0.0147 -0.02556,-0.0349 -0.04419,-0.0442 -0.01318,-0.007 -0.03378,0.0104 -0.04419,0 -0.01042,-0.0104 0.0047,-0.0302 0,-0.0442 -0.01042,-0.0312 -0.0209,-0.0651 -0.04419,-0.0884 -0.01042,-0.0104 -0.03022,0.005 -0.04419,0 -0.03125,-0.0104 -0.0651,-0.0209 -0.08839,-0.0442 -0.01042,-0.0104 0.0066,-0.031 0,-0.0442 -0.02652,-0.053 -0.106066,-0.0795 -0.132582,-0.13258 -0.0066,-0.0132 0.01042,-0.0338 0,-0.0442 -0.01042,-0.0104 -0.03102,0.007 -0.04419,0 -0.01863,-0.009 -0.02946,-0.0295 -0.04419,-0.0442 -0.01473,-0.0147 -0.03488,-0.0256 -0.0442,-0.0442 -0.0066,-0.0132 0.0066,-0.031 0,-0.0442 -0.0093,-0.0186 -0.03488,-0.0256 -0.04419,-0.0442 -0.0066,-0.0132 0.01042,-0.0338 0,-0.0442 -0.02329,-0.0233 -0.0651,-0.0209 -0.08839,-0.0442 -0.01042,-0.0104 0.01042,-0.0338 0,-0.0442 -0.01042,-0.0104 -0.03102,0.007 -0.04419,0 -0.01863,-0.009 -0.02946,-0.0295 -0.04419,-0.0442 -0.02946,0 -0.06044,0.009 -0.08839,0 -0.01976,-0.007 -0.02556,-0.0349 -0.04419,-0.0442 -0.02343,-0.0117 -0.190906,0.01 -0.220971,0 -0.01976,-0.007 -0.02556,-0.0349 -0.04419,-0.0442 -0.02635,-0.0132 -0.06204,0.0132 -0.08839,0 -0.03727,-0.0186 -0.04886,-0.0752 -0.08839,-0.0884 -0.0029,-9.6e-4 -0.218068,-9.6e-4 -0.220971,0 -0.06789,0.0226 -0.03424,0.0965 -0.08839,0.13259 -0.0088,0.006 -0.19091,0 -0.220971,0 -0.01473,0 -0.03378,-0.0104 -0.04419,0 -0.004,0.004 -0.0023,0.13145 0,0.13258 0.02635,0.0132 0.06044,-0.009 0.08839,0 0.03953,0.0132 0.05112,0.0697 0.08839,0.0884 0.01318,0.007 0.02946,0 0.04419,0 0.02946,0.0147 0.06098,0.0259 0.08839,0.0442 0.01733,0.0116 0.03488,0.0256 0.04419,0.0442 0.0066,0.0132 -0.01226,0.036 0,0.0442 0.03876,0.0258 0.09092,0.0234 0.132583,0.0442 0.01863,0.009 0.02556,0.0349 0.04419,0.0442 0.01318,0.007 0.02946,0 0.04419,0 0.01473,0.0147 0.02556,0.0349 0.04419,0.0442 0.02635,0.0132 0.06044,-0.009 0.08839,0 0.03125,0.0104 0.05714,0.0338 0.08839,0.0442 0.01398,0.005 0.02946,0 0.04419,0 0.02946,0 0.05933,-0.005 0.08839,0 0.05991,0.01 0.118374,0.0275 0.176776,0.0442 0.04479,0.0128 0.0869,0.0351 0.132583,0.0442 0.02889,0.006 0.06044,-0.009 0.08839,0 0.01976,0.007 0.02556,0.0349 0.04419,0.0442 0.01318,0.007 0.05849,-0.004 0.0442,0 -0.07287,0.0182 -0.146228,0.0367 -0.220971,0.0442 -0.07329,0.007 -0.147314,0 -0.220971,0 -0.08839,0 -0.176777,0 -0.265165,0 -0.10312,0 -0.20624,0 -0.309359,0 -0.0442,0 -0.08873,0.005 -0.132583,0 -0.07454,-0.009 -0.146435,-0.0349 -0.220971,-0.0442 -0.04385,-0.005 -0.08925,0.009 -0.132582,0 -0.0323,-0.006 -0.05609,-0.0377 -0.08839,-0.0442 -7.28e-4,-1.5e-4 -0.29652,-0.004 -0.309359,0 -0.03125,0.0104 -0.06098,0.0259 -0.08839,0.0442 -0.146574,0.14657 0.04167,-0.0208 -0.08839,0.0442 -0.01863,0.009 -0.04419,0.065 -0.04419,0.0442 0,-0.13309 0.320708,-0.24591 0.397748,-0.26517 0.221451,-0.0554 0.438555,-0.0442 0.662912,-0.0442 0.05893,0 0.117852,0 0.176777,0 0.01473,0 0.03761,-0.0132 0.04419,0 0.01768,0.0353 -0.01768,0.0972 0,0.13258 0.0093,0.0186 0.02946,0.0295 0.04419,0.0442 0.0773,0.0773 0.157299,0.10561 0.265165,0.13258 0.01429,0.004 0.03102,-0.007 0.0442,0 0.01863,0.009 0.02946,0.0295 0.04419,0.0442 0.01473,0.0147 0.05893,0.0295 0.04419,0.0442 -0.01473,0.0147 -0.06153,-0.0326 -0.04419,-0.0442 0.05054,-0.0337 0.119154,-0.025 0.176777,-0.0442 0.03125,-0.0104 0.05893,-0.0295 0.08839,-0.0442");
			attr_dev(path30, "id", "path5958");
			attr_dev(path30, "class", "svelte-p4xb06");
			add_location(path30, file, 166, 2, 34768);
			attr_dev(g, "id", "layer3");
			set_style(g, "display", "inline");
			set_style(g, "opacity", "0.656");
			attr_dev(g, "transform", "translate(-191.56549,-106.24631)");
			add_location(g, file, 7, 2, 129);
			set_style(path31, "fill", "#ffffff");
			set_style(path31, "fill-rule", "evenodd");
			set_style(path31, "stroke", "#ffffff");
			set_style(path31, "stroke-width", "0.5");
			set_style(path31, "stroke-linecap", "butt");
			set_style(path31, "stroke-linejoin", "miter");
			set_style(path31, "stroke-opacity", "1");
			set_style(path31, "fill-opacity", "1");
			set_style(path31, "stroke-miterlimit", "4");
			set_style(path31, "stroke-dasharray", "none");
			attr_dev(path31, "d", "m 190.3885,95.61845 c 0.6491,-0.387994 -0.77329,0.640927 -0.53033,0.883883 0.0417,0.04167 0.13511,-0.04167 0.17678,0 0.0417,0.04167 -0.0264,0.124072 0,0.176777 0.0373,0.07454 0.11785,0.117851 0.17677,0.176777 0.25665,0.256644 0.19137,0.176776 0.53033,0.176776 0.11785,0 0.24815,0.05271 0.35356,0 0.0527,-0.02635 -0.0417,-0.13511 0,-0.176776 0.0833,-0.08333 0.27022,0.08333 0.35355,0 0.0417,-0.04167 0,-0.117851 0,-0.176777 0,-0.05893 0,-0.117851 0,-0.176777 0,-0.05892 0,-0.117851 0,-0.176776 0,-0.05893 0.0264,-0.124072 0,-0.176777 -0.0373,-0.07454 -0.11785,-0.117851 -0.17678,-0.176777 -0.34857,-0.348573 -0.0959,-0.156565 -0.88388,-0.353553 z");
			attr_dev(path31, "id", "path6021");
			add_location(path31, file, 172, 2, 42313);
			attr_dev(svg, "viewBox", "0 0 341.68462 328.07979");
			attr_dev(svg, "id", "selfportrait-object");
			attr_dev(svg, "version", "1.1");
			attr_dev(svg, "height", "65px");
			add_location(svg, file, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, defs);
			append_dev(svg, g);
			append_dev(g, path0);
			append_dev(g, path1);
			append_dev(g, path2);
			append_dev(g, path3);
			append_dev(g, path4);
			append_dev(g, path5);
			append_dev(g, circle);
			append_dev(g, path6);
			append_dev(g, path7);
			append_dev(g, path8);
			append_dev(g, path9);
			append_dev(g, path10);
			append_dev(g, path11);
			append_dev(g, path12);
			append_dev(g, path13);
			append_dev(g, path14);
			append_dev(g, path15);
			append_dev(g, path16);
			append_dev(g, path17);
			append_dev(g, path18);
			append_dev(g, path19);
			append_dev(g, path20);
			append_dev(g, path21);
			append_dev(g, path22);
			append_dev(g, path23);
			append_dev(g, path24);
			append_dev(g, path25);
			append_dev(g, path26);
			append_dev(g, path27);
			append_dev(g, ellipse0);
			append_dev(g, ellipse1);
			append_dev(g, ellipse2);
			append_dev(g, ellipse3);
			append_dev(g, path28);
			append_dev(g, path29);
			append_dev(g, path30);
			append_dev(svg, path31);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<SelfPortrait> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("SelfPortrait", $$slots, []);
	return [];
}

class SelfPortrait extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "SelfPortrait",
			options,
			id: create_fragment.name
		});
	}
}

/* src/components/AllisonTattoo.svelte generated by Svelte v3.24.0 */

const file$1 = "src/components/AllisonTattoo.svelte";

function create_fragment$1(ctx) {
	let svg;
	let g0;
	let path0;
	let path1;
	let path2;
	let path3;
	let path4;
	let path5;
	let path6;
	let path7;
	let path8;
	let path9;
	let path10;
	let path11;
	let path12;
	let path13;
	let path14;
	let path15;
	let path16;
	let path17;
	let path18;
	let path19;
	let path20;
	let path21;
	let path22;
	let path23;
	let path24;
	let path25;
	let path26;
	let path27;
	let path28;
	let path29;
	let path30;
	let path31;
	let path32;
	let path33;
	let path34;
	let path35;
	let path36;
	let path37;
	let path38;
	let path39;
	let path40;
	let path41;
	let path42;
	let path43;
	let path44;
	let path45;
	let path46;
	let path47;
	let path48;
	let path49;
	let path50;
	let path51;
	let path52;
	let path53;
	let path54;
	let path55;
	let path56;
	let path57;
	let path58;
	let path59;
	let path60;
	let path61;
	let path62;
	let path63;
	let path64;
	let path65;
	let path66;
	let path67;
	let path68;
	let path69;
	let path70;
	let path71;
	let path72;
	let path73;
	let path74;
	let g1;
	let path75;
	let path76;
	let path77;
	let path78;
	let path79;
	let path80;
	let path81;
	let path82;
	let path83;
	let path84;
	let path85;
	let path86;
	let g2;
	let path87;
	let path88;
	let path89;
	let path90;
	let path91;
	let path92;
	let path93;
	let path94;
	let path95;
	let path96;
	let path97;
	let path98;
	let path99;
	let path100;
	let path101;
	let path102;
	let path103;
	let path104;
	let path105;
	let path106;
	let path107;
	let path108;
	let path109;
	let path110;
	let path111;
	let path112;
	let path113;
	let path114;
	let path115;
	let path116;
	let path117;
	let path118;
	let path119;
	let path120;
	let path121;
	let path122;
	let path123;
	let path124;
	let path125;
	let path126;
	let path127;
	let line0;
	let line1;
	let line2;
	let line3;
	let line4;
	let line5;
	let line6;
	let path128;
	let path129;
	let line7;
	let path130;
	let path131;
	let path132;
	let path133;
	let path134;
	let path135;
	let path136;
	let path137;
	let path138;
	let line8;
	let line9;
	let line10;
	let line11;
	let line12;
	let line13;
	let path139;
	let line14;
	let line15;
	let line16;
	let line17;
	let line18;
	let line19;
	let line20;
	let line21;
	let line22;
	let path140;
	let line23;
	let line24;
	let line25;
	let path141;
	let line26;
	let line27;
	let line28;
	let line29;
	let line30;
	let line31;
	let path142;
	let path143;
	let path144;
	let path145;
	let path146;
	let path147;
	let path148;
	let path149;
	let path150;
	let path151;
	let path152;
	let path153;
	let path154;
	let path155;
	let path156;
	let path157;
	let path158;
	let path159;
	let path160;
	let path161;
	let path162;
	let path163;
	let path164;
	let path165;
	let path166;
	let path167;
	let path168;
	let path169;
	let path170;
	let path171;
	let path172;
	let path173;
	let path174;
	let path175;
	let path176;
	let path177;
	let path178;
	let path179;
	let path180;
	let path181;
	let path182;
	let path183;
	let path184;
	let path185;
	let path186;
	let path187;
	let path188;
	let path189;
	let path190;
	let path191;
	let path192;
	let path193;
	let path194;
	let path195;
	let path196;
	let path197;
	let path198;
	let path199;
	let path200;
	let path201;
	let path202;
	let path203;
	let path204;
	let path205;
	let path206;
	let path207;
	let path208;
	let path209;
	let path210;
	let path211;
	let path212;
	let path213;
	let path214;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			g0 = svg_element("g");
			path0 = svg_element("path");
			path1 = svg_element("path");
			path2 = svg_element("path");
			path3 = svg_element("path");
			path4 = svg_element("path");
			path5 = svg_element("path");
			path6 = svg_element("path");
			path7 = svg_element("path");
			path8 = svg_element("path");
			path9 = svg_element("path");
			path10 = svg_element("path");
			path11 = svg_element("path");
			path12 = svg_element("path");
			path13 = svg_element("path");
			path14 = svg_element("path");
			path15 = svg_element("path");
			path16 = svg_element("path");
			path17 = svg_element("path");
			path18 = svg_element("path");
			path19 = svg_element("path");
			path20 = svg_element("path");
			path21 = svg_element("path");
			path22 = svg_element("path");
			path23 = svg_element("path");
			path24 = svg_element("path");
			path25 = svg_element("path");
			path26 = svg_element("path");
			path27 = svg_element("path");
			path28 = svg_element("path");
			path29 = svg_element("path");
			path30 = svg_element("path");
			path31 = svg_element("path");
			path32 = svg_element("path");
			path33 = svg_element("path");
			path34 = svg_element("path");
			path35 = svg_element("path");
			path36 = svg_element("path");
			path37 = svg_element("path");
			path38 = svg_element("path");
			path39 = svg_element("path");
			path40 = svg_element("path");
			path41 = svg_element("path");
			path42 = svg_element("path");
			path43 = svg_element("path");
			path44 = svg_element("path");
			path45 = svg_element("path");
			path46 = svg_element("path");
			path47 = svg_element("path");
			path48 = svg_element("path");
			path49 = svg_element("path");
			path50 = svg_element("path");
			path51 = svg_element("path");
			path52 = svg_element("path");
			path53 = svg_element("path");
			path54 = svg_element("path");
			path55 = svg_element("path");
			path56 = svg_element("path");
			path57 = svg_element("path");
			path58 = svg_element("path");
			path59 = svg_element("path");
			path60 = svg_element("path");
			path61 = svg_element("path");
			path62 = svg_element("path");
			path63 = svg_element("path");
			path64 = svg_element("path");
			path65 = svg_element("path");
			path66 = svg_element("path");
			path67 = svg_element("path");
			path68 = svg_element("path");
			path69 = svg_element("path");
			path70 = svg_element("path");
			path71 = svg_element("path");
			path72 = svg_element("path");
			path73 = svg_element("path");
			path74 = svg_element("path");
			g1 = svg_element("g");
			path75 = svg_element("path");
			path76 = svg_element("path");
			path77 = svg_element("path");
			path78 = svg_element("path");
			path79 = svg_element("path");
			path80 = svg_element("path");
			path81 = svg_element("path");
			path82 = svg_element("path");
			path83 = svg_element("path");
			path84 = svg_element("path");
			path85 = svg_element("path");
			path86 = svg_element("path");
			g2 = svg_element("g");
			path87 = svg_element("path");
			path88 = svg_element("path");
			path89 = svg_element("path");
			path90 = svg_element("path");
			path91 = svg_element("path");
			path92 = svg_element("path");
			path93 = svg_element("path");
			path94 = svg_element("path");
			path95 = svg_element("path");
			path96 = svg_element("path");
			path97 = svg_element("path");
			path98 = svg_element("path");
			path99 = svg_element("path");
			path100 = svg_element("path");
			path101 = svg_element("path");
			path102 = svg_element("path");
			path103 = svg_element("path");
			path104 = svg_element("path");
			path105 = svg_element("path");
			path106 = svg_element("path");
			path107 = svg_element("path");
			path108 = svg_element("path");
			path109 = svg_element("path");
			path110 = svg_element("path");
			path111 = svg_element("path");
			path112 = svg_element("path");
			path113 = svg_element("path");
			path114 = svg_element("path");
			path115 = svg_element("path");
			path116 = svg_element("path");
			path117 = svg_element("path");
			path118 = svg_element("path");
			path119 = svg_element("path");
			path120 = svg_element("path");
			path121 = svg_element("path");
			path122 = svg_element("path");
			path123 = svg_element("path");
			path124 = svg_element("path");
			path125 = svg_element("path");
			path126 = svg_element("path");
			path127 = svg_element("path");
			line0 = svg_element("line");
			line1 = svg_element("line");
			line2 = svg_element("line");
			line3 = svg_element("line");
			line4 = svg_element("line");
			line5 = svg_element("line");
			line6 = svg_element("line");
			path128 = svg_element("path");
			path129 = svg_element("path");
			line7 = svg_element("line");
			path130 = svg_element("path");
			path131 = svg_element("path");
			path132 = svg_element("path");
			path133 = svg_element("path");
			path134 = svg_element("path");
			path135 = svg_element("path");
			path136 = svg_element("path");
			path137 = svg_element("path");
			path138 = svg_element("path");
			line8 = svg_element("line");
			line9 = svg_element("line");
			line10 = svg_element("line");
			line11 = svg_element("line");
			line12 = svg_element("line");
			line13 = svg_element("line");
			path139 = svg_element("path");
			line14 = svg_element("line");
			line15 = svg_element("line");
			line16 = svg_element("line");
			line17 = svg_element("line");
			line18 = svg_element("line");
			line19 = svg_element("line");
			line20 = svg_element("line");
			line21 = svg_element("line");
			line22 = svg_element("line");
			path140 = svg_element("path");
			line23 = svg_element("line");
			line24 = svg_element("line");
			line25 = svg_element("line");
			path141 = svg_element("path");
			line26 = svg_element("line");
			line27 = svg_element("line");
			line28 = svg_element("line");
			line29 = svg_element("line");
			line30 = svg_element("line");
			line31 = svg_element("line");
			path142 = svg_element("path");
			path143 = svg_element("path");
			path144 = svg_element("path");
			path145 = svg_element("path");
			path146 = svg_element("path");
			path147 = svg_element("path");
			path148 = svg_element("path");
			path149 = svg_element("path");
			path150 = svg_element("path");
			path151 = svg_element("path");
			path152 = svg_element("path");
			path153 = svg_element("path");
			path154 = svg_element("path");
			path155 = svg_element("path");
			path156 = svg_element("path");
			path157 = svg_element("path");
			path158 = svg_element("path");
			path159 = svg_element("path");
			path160 = svg_element("path");
			path161 = svg_element("path");
			path162 = svg_element("path");
			path163 = svg_element("path");
			path164 = svg_element("path");
			path165 = svg_element("path");
			path166 = svg_element("path");
			path167 = svg_element("path");
			path168 = svg_element("path");
			path169 = svg_element("path");
			path170 = svg_element("path");
			path171 = svg_element("path");
			path172 = svg_element("path");
			path173 = svg_element("path");
			path174 = svg_element("path");
			path175 = svg_element("path");
			path176 = svg_element("path");
			path177 = svg_element("path");
			path178 = svg_element("path");
			path179 = svg_element("path");
			path180 = svg_element("path");
			path181 = svg_element("path");
			path182 = svg_element("path");
			path183 = svg_element("path");
			path184 = svg_element("path");
			path185 = svg_element("path");
			path186 = svg_element("path");
			path187 = svg_element("path");
			path188 = svg_element("path");
			path189 = svg_element("path");
			path190 = svg_element("path");
			path191 = svg_element("path");
			path192 = svg_element("path");
			path193 = svg_element("path");
			path194 = svg_element("path");
			path195 = svg_element("path");
			path196 = svg_element("path");
			path197 = svg_element("path");
			path198 = svg_element("path");
			path199 = svg_element("path");
			path200 = svg_element("path");
			path201 = svg_element("path");
			path202 = svg_element("path");
			path203 = svg_element("path");
			path204 = svg_element("path");
			path205 = svg_element("path");
			path206 = svg_element("path");
			path207 = svg_element("path");
			path208 = svg_element("path");
			path209 = svg_element("path");
			path210 = svg_element("path");
			path211 = svg_element("path");
			path212 = svg_element("path");
			path213 = svg_element("path");
			path214 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(nodes, "svg", { viewBox: true }, 1);
			var svg_nodes = children(svg);
			g0 = claim_element(svg_nodes, "g", { id: true, "data-name": true }, 1);
			var g0_nodes = children(g0);
			path0 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path0).forEach(detach_dev);
			path1 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path1).forEach(detach_dev);
			path2 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path2).forEach(detach_dev);
			path3 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path3).forEach(detach_dev);
			path4 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path4).forEach(detach_dev);
			path5 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path5).forEach(detach_dev);
			path6 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path6).forEach(detach_dev);
			path7 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path7).forEach(detach_dev);
			path8 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path8).forEach(detach_dev);
			path9 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path9).forEach(detach_dev);
			path10 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path10).forEach(detach_dev);
			path11 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path11).forEach(detach_dev);
			path12 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path12).forEach(detach_dev);
			path13 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path13).forEach(detach_dev);
			path14 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path14).forEach(detach_dev);
			path15 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path15).forEach(detach_dev);
			path16 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path16).forEach(detach_dev);
			path17 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path17).forEach(detach_dev);
			path18 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path18).forEach(detach_dev);
			path19 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path19).forEach(detach_dev);
			path20 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path20).forEach(detach_dev);
			path21 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path21).forEach(detach_dev);
			path22 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path22).forEach(detach_dev);
			path23 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path23).forEach(detach_dev);
			path24 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path24).forEach(detach_dev);
			path25 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path25).forEach(detach_dev);
			path26 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path26).forEach(detach_dev);
			path27 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path27).forEach(detach_dev);
			path28 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path28).forEach(detach_dev);
			path29 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path29).forEach(detach_dev);
			path30 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path30).forEach(detach_dev);
			path31 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path31).forEach(detach_dev);
			path32 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path32).forEach(detach_dev);
			path33 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path33).forEach(detach_dev);
			path34 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path34).forEach(detach_dev);
			path35 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path35).forEach(detach_dev);
			path36 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path36).forEach(detach_dev);
			path37 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path37).forEach(detach_dev);
			path38 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path38).forEach(detach_dev);
			path39 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path39).forEach(detach_dev);
			path40 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path40).forEach(detach_dev);
			path41 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path41).forEach(detach_dev);
			path42 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path42).forEach(detach_dev);
			path43 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path43).forEach(detach_dev);
			path44 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path44).forEach(detach_dev);
			path45 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path45).forEach(detach_dev);
			path46 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path46).forEach(detach_dev);
			path47 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path47).forEach(detach_dev);
			path48 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path48).forEach(detach_dev);
			path49 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path49).forEach(detach_dev);
			path50 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path50).forEach(detach_dev);
			path51 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path51).forEach(detach_dev);
			path52 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path52).forEach(detach_dev);
			path53 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path53).forEach(detach_dev);
			path54 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path54).forEach(detach_dev);
			path55 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path55).forEach(detach_dev);
			path56 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path56).forEach(detach_dev);
			path57 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path57).forEach(detach_dev);
			path58 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path58).forEach(detach_dev);
			path59 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path59).forEach(detach_dev);
			path60 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path60).forEach(detach_dev);
			path61 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path61).forEach(detach_dev);
			path62 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path62).forEach(detach_dev);
			path63 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path63).forEach(detach_dev);
			path64 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path64).forEach(detach_dev);
			path65 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path65).forEach(detach_dev);
			path66 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path66).forEach(detach_dev);
			path67 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path67).forEach(detach_dev);
			path68 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path68).forEach(detach_dev);
			path69 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path69).forEach(detach_dev);
			path70 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path70).forEach(detach_dev);
			path71 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path71).forEach(detach_dev);
			path72 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path72).forEach(detach_dev);
			path73 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path73).forEach(detach_dev);
			path74 = claim_element(g0_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path74).forEach(detach_dev);
			g0_nodes.forEach(detach_dev);
			g1 = claim_element(svg_nodes, "g", { id: true, "data-name": true, class: true }, 1);
			var g1_nodes = children(g1);
			path75 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path75).forEach(detach_dev);
			path76 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path76).forEach(detach_dev);
			path77 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path77).forEach(detach_dev);
			path78 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path78).forEach(detach_dev);
			path79 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path79).forEach(detach_dev);
			path80 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path80).forEach(detach_dev);
			path81 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path81).forEach(detach_dev);
			path82 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path82).forEach(detach_dev);
			path83 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path83).forEach(detach_dev);
			path84 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path84).forEach(detach_dev);
			path85 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path85).forEach(detach_dev);
			path86 = claim_element(g1_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path86).forEach(detach_dev);
			g1_nodes.forEach(detach_dev);
			g2 = claim_element(svg_nodes, "g", { id: true, "data-name": true }, 1);
			var g2_nodes = children(g2);
			path87 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path87).forEach(detach_dev);
			path88 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path88).forEach(detach_dev);
			path89 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path89).forEach(detach_dev);
			path90 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path90).forEach(detach_dev);
			path91 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path91).forEach(detach_dev);
			path92 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path92).forEach(detach_dev);
			path93 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path93).forEach(detach_dev);
			path94 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path94).forEach(detach_dev);
			path95 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path95).forEach(detach_dev);
			path96 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path96).forEach(detach_dev);
			path97 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path97).forEach(detach_dev);
			path98 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path98).forEach(detach_dev);
			path99 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path99).forEach(detach_dev);
			path100 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path100).forEach(detach_dev);
			path101 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path101).forEach(detach_dev);
			path102 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path102).forEach(detach_dev);
			path103 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path103).forEach(detach_dev);
			path104 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path104).forEach(detach_dev);
			path105 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path105).forEach(detach_dev);
			path106 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path106).forEach(detach_dev);
			path107 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path107).forEach(detach_dev);
			path108 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path108).forEach(detach_dev);
			path109 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path109).forEach(detach_dev);
			path110 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path110).forEach(detach_dev);
			path111 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path111).forEach(detach_dev);
			path112 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path112).forEach(detach_dev);
			path113 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path113).forEach(detach_dev);
			path114 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path114).forEach(detach_dev);
			path115 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path115).forEach(detach_dev);

			path116 = claim_element(
				g2_nodes,
				"path",
				{
					class: true,
					d: true,
					transform: true,
					fill: true
				},
				1
			);

			children(path116).forEach(detach_dev);
			path117 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path117).forEach(detach_dev);
			path118 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path118).forEach(detach_dev);
			path119 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path119).forEach(detach_dev);
			path120 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path120).forEach(detach_dev);
			path121 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path121).forEach(detach_dev);
			path122 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path122).forEach(detach_dev);
			path123 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path123).forEach(detach_dev);
			path124 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path124).forEach(detach_dev);
			path125 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path125).forEach(detach_dev);
			path126 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path126).forEach(detach_dev);
			path127 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path127).forEach(detach_dev);

			line0 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line0).forEach(detach_dev);

			line1 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line1).forEach(detach_dev);

			line2 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line2).forEach(detach_dev);

			line3 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line3).forEach(detach_dev);

			line4 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line4).forEach(detach_dev);

			line5 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line5).forEach(detach_dev);

			line6 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line6).forEach(detach_dev);
			path128 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path128).forEach(detach_dev);
			path129 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path129).forEach(detach_dev);

			line7 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line7).forEach(detach_dev);
			path130 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path130).forEach(detach_dev);
			path131 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path131).forEach(detach_dev);
			path132 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path132).forEach(detach_dev);
			path133 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path133).forEach(detach_dev);
			path134 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path134).forEach(detach_dev);
			path135 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path135).forEach(detach_dev);
			path136 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path136).forEach(detach_dev);
			path137 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path137).forEach(detach_dev);
			path138 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path138).forEach(detach_dev);

			line8 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line8).forEach(detach_dev);

			line9 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line9).forEach(detach_dev);

			line10 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line10).forEach(detach_dev);

			line11 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line11).forEach(detach_dev);

			line12 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line12).forEach(detach_dev);

			line13 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line13).forEach(detach_dev);
			path139 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path139).forEach(detach_dev);

			line14 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line14).forEach(detach_dev);

			line15 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line15).forEach(detach_dev);

			line16 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line16).forEach(detach_dev);

			line17 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line17).forEach(detach_dev);

			line18 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line18).forEach(detach_dev);

			line19 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line19).forEach(detach_dev);

			line20 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line20).forEach(detach_dev);

			line21 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line21).forEach(detach_dev);

			line22 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line22).forEach(detach_dev);
			path140 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path140).forEach(detach_dev);

			line23 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line23).forEach(detach_dev);

			line24 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line24).forEach(detach_dev);

			line25 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line25).forEach(detach_dev);
			path141 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path141).forEach(detach_dev);

			line26 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line26).forEach(detach_dev);

			line27 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line27).forEach(detach_dev);

			line28 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line28).forEach(detach_dev);

			line29 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line29).forEach(detach_dev);

			line30 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line30).forEach(detach_dev);

			line31 = claim_element(
				g2_nodes,
				"line",
				{
					class: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			children(line31).forEach(detach_dev);
			path142 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path142).forEach(detach_dev);
			path143 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path143).forEach(detach_dev);
			path144 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path144).forEach(detach_dev);
			path145 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path145).forEach(detach_dev);
			path146 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path146).forEach(detach_dev);
			path147 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path147).forEach(detach_dev);
			path148 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path148).forEach(detach_dev);
			path149 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path149).forEach(detach_dev);
			path150 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path150).forEach(detach_dev);
			path151 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path151).forEach(detach_dev);
			path152 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path152).forEach(detach_dev);
			path153 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path153).forEach(detach_dev);
			path154 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path154).forEach(detach_dev);
			path155 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path155).forEach(detach_dev);
			path156 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path156).forEach(detach_dev);
			path157 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path157).forEach(detach_dev);
			path158 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path158).forEach(detach_dev);
			path159 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path159).forEach(detach_dev);
			path160 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path160).forEach(detach_dev);
			path161 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path161).forEach(detach_dev);
			path162 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path162).forEach(detach_dev);
			path163 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path163).forEach(detach_dev);
			path164 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path164).forEach(detach_dev);
			path165 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path165).forEach(detach_dev);
			path166 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path166).forEach(detach_dev);
			path167 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path167).forEach(detach_dev);
			path168 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path168).forEach(detach_dev);
			path169 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path169).forEach(detach_dev);
			path170 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path170).forEach(detach_dev);
			path171 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path171).forEach(detach_dev);
			path172 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path172).forEach(detach_dev);
			path173 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path173).forEach(detach_dev);
			path174 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path174).forEach(detach_dev);
			path175 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path175).forEach(detach_dev);
			path176 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path176).forEach(detach_dev);
			path177 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path177).forEach(detach_dev);
			path178 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path178).forEach(detach_dev);
			path179 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path179).forEach(detach_dev);
			path180 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path180).forEach(detach_dev);
			path181 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path181).forEach(detach_dev);
			path182 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path182).forEach(detach_dev);
			path183 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path183).forEach(detach_dev);
			path184 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path184).forEach(detach_dev);
			path185 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path185).forEach(detach_dev);
			path186 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path186).forEach(detach_dev);
			path187 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path187).forEach(detach_dev);
			path188 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path188).forEach(detach_dev);
			path189 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path189).forEach(detach_dev);
			path190 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path190).forEach(detach_dev);
			path191 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path191).forEach(detach_dev);
			path192 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path192).forEach(detach_dev);
			path193 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path193).forEach(detach_dev);
			path194 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path194).forEach(detach_dev);
			path195 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path195).forEach(detach_dev);
			path196 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path196).forEach(detach_dev);
			path197 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path197).forEach(detach_dev);
			path198 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path198).forEach(detach_dev);
			path199 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path199).forEach(detach_dev);
			path200 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path200).forEach(detach_dev);
			path201 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path201).forEach(detach_dev);
			path202 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path202).forEach(detach_dev);
			path203 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path203).forEach(detach_dev);
			path204 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path204).forEach(detach_dev);
			path205 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path205).forEach(detach_dev);
			path206 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path206).forEach(detach_dev);
			path207 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path207).forEach(detach_dev);
			path208 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path208).forEach(detach_dev);
			path209 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path209).forEach(detach_dev);
			path210 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path210).forEach(detach_dev);
			path211 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path211).forEach(detach_dev);
			path212 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path212).forEach(detach_dev);
			path213 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path213).forEach(detach_dev);
			path214 = claim_element(g2_nodes, "path", { class: true, d: true, transform: true }, 1);
			children(path214).forEach(detach_dev);
			g2_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path0, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path0, "d", "M106.1,59.8");
			attr_dev(path0, "transform", "translate(0 0)");
			add_location(path0, file$1, 6, 16, 130);
			attr_dev(path1, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path1, "d", "M106.59,45.48");
			attr_dev(path1, "transform", "translate(0 0)");
			add_location(path1, file$1, 7, 16, 223);
			attr_dev(path2, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path2, "d", "M107,48.55");
			attr_dev(path2, "transform", "translate(0 0)");
			add_location(path2, file$1, 8, 16, 318);
			attr_dev(path3, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path3, "d", "M99.33,45.11");
			attr_dev(path3, "transform", "translate(0 0)");
			add_location(path3, file$1, 9, 16, 410);
			attr_dev(path4, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path4, "d", "M97.56,45.76c.93-1.21-1.16.61-1.16.61s-5,3.14-3.21,10.67S100,59.55,99.82,60");
			attr_dev(path4, "transform", "translate(0 0)");
			add_location(path4, file$1, 10, 16, 504);
			attr_dev(path5, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path5, "d", "M82.31,61.11S76.45,57.21,70.87,64");
			attr_dev(path5, "transform", "translate(0 0)");
			add_location(path5, file$1, 11, 16, 661);
			attr_dev(path6, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path6, "d", "M81.56,61.67S75.69,60,72.7,63.06c-3.74,3.87-3,10.85.31,14a7.16,7.16,0,0,0,1.67,1.21");
			attr_dev(path6, "transform", "translate(0 0)");
			add_location(path6, file$1, 12, 16, 776);
			attr_dev(path7, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path7, "d", "M79.05,63.9c-.18-.88-.37.47-.37.47S73.75,81.11,82,79.62s11.44-2.69,14.23-.55a9,9,0,0,0,8,1.16c1.77-.56,2.19-1.72-2.79,5.91");
			attr_dev(path7, "transform", "translate(0 0)");
			add_location(path7, file$1, 13, 16, 941);
			attr_dev(path8, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path8, "d", "M87.8,52.09s-1.12-1.86-2.33,7.16,8.37,5.58,8.37,5.58,8-3.47,12.1.28c4.93,4.56.83,11.91,1,12.93");
			attr_dev(path8, "transform", "translate(0 0)");
			add_location(path8, file$1, 14, 16, 1145);
			attr_dev(path9, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path9, "d", "M77.94,81.21c-5.94-4.13-7.49-10.84-5-14.61,2-3.07,6.21-3.47,7.07-3.53");
			attr_dev(path9, "transform", "translate(0 0)");
			add_location(path9, file$1, 15, 16, 1321);
			attr_dev(path10, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path10, "d", "M88.22,51.58s-1.68-3.4-.93,6.37,7.95,5.35,7.95,5.35");
			attr_dev(path10, "transform", "translate(0 0)");
			add_location(path10, file$1, 16, 16, 1472);
			attr_dev(path11, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path11, "d", "M102,46.18s.19-2,1.77.33-3.81,9.39-3.81,9.39");
			attr_dev(path11, "transform", "translate(0 0)");
			add_location(path11, file$1, 17, 16, 1605);
			attr_dev(path12, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path12, "d", "M100.73,46.18s.17-1.4,1.07-.79,3.43,3.22-3.08,12.11");
			attr_dev(path12, "transform", "translate(0 0)");
			add_location(path12, file$1, 18, 16, 1731);
			attr_dev(path13, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path13, "d", "M97.94,46s1.07-3.35,2,.19,4.79,2.7-2.6,13.39");
			attr_dev(path13, "transform", "translate(0 0)");
			add_location(path13, file$1, 19, 16, 1864);
			attr_dev(path14, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path14, "d", "M96.17,59.21c5.49-7.21,3.07-10,3-12.56s-1.84,0-1.84,0");
			attr_dev(path14, "transform", "translate(0 0)");
			add_location(path14, file$1, 20, 16, 1990);
			attr_dev(path15, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path15, "d", "M96.08,48s1.86-3.11,2-.32,1.35,5-3,11.07");
			attr_dev(path15, "transform", "translate(0 0)");
			add_location(path15, file$1, 21, 16, 2125);
			attr_dev(path16, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path16, "d", "M95,50.28s1.49-4.42,1.53-.56.1,3.76-2.18,8.46");
			attr_dev(path16, "transform", "translate(0 0)");
			add_location(path16, file$1, 22, 16, 2247);
			attr_dev(path17, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path17, "d", "M107.94,68c2.32-10.32-1.4-8.09-8.12-8.07-7.16,0-7.7-5-5.19-10.53s2.56-3.16,2.56-3.16");
			attr_dev(path17, "transform", "translate(0 0)");
			add_location(path17, file$1, 23, 16, 2374);
			attr_dev(path18, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path18, "d", "M93.7,51.9s1.82-3.72,1.26-.46a17.41,17.41,0,0,1-1.35,4.93");
			attr_dev(path18, "transform", "translate(0 0)");
			add_location(path18, file$1, 24, 16, 2540);
			attr_dev(path19, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path19, "d", "M99.94,55.9s-1.72,2.28,3.16.75,2.46-1.77,2.46-1.77c-1.86.23-.32,1.07,3.4,11.77,1.39,4-.93,7.86-.93,7.86");
			attr_dev(path19, "transform", "translate(0 0)");
			add_location(path19, file$1, 25, 16, 2679);
			attr_dev(path20, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path20, "d", "M97.8,58.88s11.81-5.81,11.58,9.49c0,0,.18,2.28-1.91,6.51a98.9,98.9,0,0,1-4.79,9.21");
			attr_dev(path20, "transform", "translate(0 0)");
			add_location(path20, file$1, 26, 16, 2864);
			attr_dev(path21, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path21, "d", "M94.87,47.62s-.28-2.65-1.68,1-3.53,12.56,1,11.3");
			attr_dev(path21, "transform", "translate(0 0)");
			add_location(path21, file$1, 27, 16, 3028);
			attr_dev(path22, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path22, "d", "M93.19,48.6s-.74-1.67-1.53.19c0,.14.37-1.91-1.72,5.62s.55,11.35,8.74,7.35");
			attr_dev(path22, "transform", "translate(0 0)");
			add_location(path22, file$1, 28, 16, 3157);
			attr_dev(path23, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path23, "d", "M91.19,50s-2-3.07-3.9,8");
			attr_dev(path23, "transform", "translate(0 0)");
			add_location(path23, file$1, 29, 16, 3312);
			attr_dev(path24, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path24, "d", "M89,51s-.65-1.35-1.86,4");
			attr_dev(path24, "transform", "translate(0 0)");
			add_location(path24, file$1, 30, 16, 3417);
			attr_dev(path25, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path25, "d", "M86.26,54.46s-2-2.14-1.81,5.91,3.77,8.74,10.18,6.18,15.35,3.26,12.79,8.79");
			attr_dev(path25, "transform", "translate(0 0)");
			add_location(path25, file$1, 31, 16, 3522);
			attr_dev(path26, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path26, "d", "M84.45,57.21s-1.35-1.73-.51,4.93,2.93,6.37,5.21,6.23.93-.05,7.81-2.09,10.14,2.09,10.14,2.09c4.51,5-2.7,13.35-2.7,13.35,6.7-11.58.89-6.14.89-6.14-1.12.65-1.77,2-6.33-.42s-5.63-.42-10.47,0S78.91,78.79,78.73,70,80,63.67,80,63.67");
			attr_dev(path26, "transform", "translate(0 0)");
			add_location(path26, file$1, 32, 16, 3677);
			attr_dev(path27, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path27, "d", "M83.61,60s-1.12-.61-1,4.6,4,5.68,7.21,4.84,11-3.72,14.6-1.16,4.56,4.41,2.23,9.16");
			attr_dev(path27, "transform", "translate(0 0)");
			add_location(path27, file$1, 33, 16, 3984);
			attr_dev(path28, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path28, "d", "M82.59,62.18S81,60.41,81.05,66s3.44,7.07,9.91,4.7,10-3.12,12.46-.46c6.75,7.2-1.39,14.23-1.58,15.16-.63,3.17-.37-1.82-2.6-1.12s-7.63,3.49-11,.23-4-2.23-4.66-2.27S77.89,85.39,75.15,76s3.53-11.67,3.53-11.67");
			attr_dev(path28, "transform", "translate(0 0)");
			add_location(path28, file$1, 34, 16, 4146);
			attr_dev(path29, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path29, "d", "M81.24,63.21S79.47,61.76,79.8,67s1,8.6,10.09,5.81,13.44-.47,14.23,4.1c.56,3.21-.79,6.55-3.67,11.07");
			attr_dev(path29, "transform", "translate(0 0)");
			add_location(path29, file$1, 35, 16, 4431);
			attr_dev(path30, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path30, "d", "M95.24,63.3c15.63-8.14,15.35,12.37,10.28,16.65");
			attr_dev(path30, "transform", "translate(0 0)");
			add_location(path30, file$1, 36, 16, 4611);
			attr_dev(path31, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path31, "d", "M99.77,45.55s.45-2.11,1.46,1.11.49,6.18-.85,9.67,2.68.82,4.92-.89-.09-1-.75-.7.28,3,1.83,5.42,3.24,8.29,2.2,11.88");
			attr_dev(path31, "transform", "translate(0 0)");
			add_location(path31, file$1, 37, 16, 4739);
			attr_dev(path32, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path32, "d", "M104,48.15s4.64,1.15,1.36-2.83-4.12-1-4-.21");
			attr_dev(path32, "transform", "translate(0 0)");
			add_location(path32, file$1, 38, 16, 4934);
			attr_dev(path33, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path33, "d", "M105.58,49.68s-2.38-2.13.24,3.14-.45-.28-.45-.28S102.33,46.72,105.58,49.68Z");
			attr_dev(path33, "transform", "translate(0 0)");
			add_location(path33, file$1, 39, 16, 5059);
			attr_dev(path34, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path34, "d", "M100.66,45.39s.83,1,.76-2.23a22.19,22.19,0,0,0,0-3.35c-.27-2.63-1.23-1.67-1.23-1.67s.28-.56-1.26,1.67");
			attr_dev(path34, "transform", "translate(0 0)");
			add_location(path34, file$1, 40, 16, 5216);
			attr_dev(path35, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path35, "d", "M101.4,39.81s2-.84.09,2.86");
			attr_dev(path35, "transform", "translate(0 0)");
			add_location(path35, file$1, 41, 16, 5399);
			attr_dev(path36, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path36, "d", "M102,39.67s2.24-1.67-.56,3.49");
			attr_dev(path36, "transform", "translate(0 0)");
			add_location(path36, file$1, 42, 16, 5507);
			attr_dev(path37, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path37, "d", "M102.61,39.39s3.21-.14.21,3.77");
			attr_dev(path37, "transform", "translate(0 0)");
			add_location(path37, file$1, 43, 16, 5618);
			attr_dev(path38, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path38, "d", "M104,40.51s2.72-.07,1.39,2-.91,1.68-.91,1.68");
			attr_dev(path38, "transform", "translate(0 0)");
			add_location(path38, file$1, 44, 16, 5730);
			attr_dev(path39, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path39, "d", "M105.4,42.53s2.56-.77,1.65.91a9.48,9.48,0,0,1-1.42,2.16");
			attr_dev(path39, "transform", "translate(0 0)");
			add_location(path39, file$1, 45, 16, 5856);
			attr_dev(path40, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path40, "d", "M106.68,44.21s2.61-.07-.42,2.39");
			attr_dev(path40, "transform", "translate(0 0)");
			add_location(path40, file$1, 46, 16, 5993);
			attr_dev(path41, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path41, "d", "M107.26,45.65s1.77,0-.3,2.9");
			attr_dev(path41, "transform", "translate(0 0)");
			add_location(path41, file$1, 47, 16, 6106);
			attr_dev(path42, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path42, "d", "M97.29,41.48s2.55-5.67,2.93,3.4");
			attr_dev(path42, "transform", "translate(0 0)");
			add_location(path42, file$1, 48, 16, 6215);
			attr_dev(path43, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path43, "d", "M96.35,42.46s1.68-3.3,2.42,2");
			attr_dev(path43, "transform", "translate(0 0)");
			add_location(path43, file$1, 49, 16, 6328);
			attr_dev(path44, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path44, "d", "M94.31,41.9s3-1.58,2.46,4");
			attr_dev(path44, "transform", "translate(0 0)");
			add_location(path44, file$1, 50, 16, 6438);
			attr_dev(path45, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path45, "d", "M95.7,43.86s-2.88-2.52-.41-2.24");
			attr_dev(path45, "transform", "translate(0 0)");
			add_location(path45, file$1, 51, 16, 6545);
			attr_dev(path46, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path46, "d", "M95.1,44.51s1.21-2.56,1.3,1.86");
			attr_dev(path46, "transform", "translate(0 0)");
			add_location(path46, file$1, 52, 16, 6658);
			attr_dev(path47, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path47, "d", "M94.49,45.53s.56-4,1,1.4");
			attr_dev(path47, "transform", "translate(0 0)");
			add_location(path47, file$1, 53, 16, 6770);
			attr_dev(path48, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path48, "d", "M94,46.79s.14-3.63.7,0");
			attr_dev(path48, "transform", "translate(0 0)");
			add_location(path48, file$1, 54, 16, 6876);
			attr_dev(path49, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path49, "d", "M94.82,44S91,40,95.61,41.76");
			attr_dev(path49, "transform", "translate(0 0)");
			add_location(path49, file$1, 55, 16, 6980);
			attr_dev(path50, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path50, "d", "M94.4,44.79s-5.81-4.56-1-3.4");
			attr_dev(path50, "transform", "translate(0 0)");
			add_location(path50, file$1, 56, 16, 7089);
			attr_dev(path51, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path51, "d", "M94,46.09s-6-4.79-2.51-4.23");
			attr_dev(path51, "transform", "translate(0 0)");
			add_location(path51, file$1, 57, 16, 7199);
			attr_dev(path52, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path52, "d", "M93.61,47.39s-7.72-5.81-3.3-5.11");
			attr_dev(path52, "transform", "translate(0 0)");
			add_location(path52, file$1, 58, 16, 7308);
			attr_dev(path53, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path53, "d", "M91.84,48.32s-9-7.35-3-5.58");
			attr_dev(path53, "transform", "translate(0 0)");
			add_location(path53, file$1, 59, 16, 7422);
			attr_dev(path54, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path54, "d", "M90.59,49.53s-8.79-7.35-4-6.42");
			attr_dev(path54, "transform", "translate(0 0)");
			add_location(path54, file$1, 60, 16, 7531);
			attr_dev(path55, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path55, "d", "M89.66,49.9s-9.77-7.16-4.37-5.62");
			attr_dev(path55, "transform", "translate(0 0)");
			add_location(path55, file$1, 61, 16, 7643);
			attr_dev(path56, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path56, "d", "M88.4,51s-10-6.56-4.84-6.56");
			attr_dev(path56, "transform", "translate(0 0)");
			add_location(path56, file$1, 62, 16, 7757);
			attr_dev(path57, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path57, "d", "M86.82,52.6s-11.35-6-4.88-7.39");
			attr_dev(path57, "transform", "translate(0 0)");
			add_location(path57, file$1, 63, 16, 7866);
			attr_dev(path58, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path58, "d", "M85.19,54.32S73.84,48.09,79.94,47");
			attr_dev(path58, "transform", "translate(0 0)");
			add_location(path58, file$1, 64, 16, 7978);
			attr_dev(path59, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path59, "d", "M84.54,56.28s-10-6.42-6.32-7.49");
			attr_dev(path59, "transform", "translate(0 0)");
			add_location(path59, file$1, 65, 16, 8093);
			attr_dev(path60, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path60, "d", "M83.05,60.37S73,54.55,77.7,50.6");
			attr_dev(path60, "transform", "translate(0 0)");
			add_location(path60, file$1, 66, 16, 8206);
			attr_dev(path61, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path61, "d", "M80.87,60.41S71,53.07,77.38,49.67");
			attr_dev(path61, "transform", "translate(0 0)");
			add_location(path61, file$1, 67, 16, 8319);
			attr_dev(path62, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path62, "d", "M77.89,59.86s-6.37-7.17-2.65-7.12");
			attr_dev(path62, "transform", "translate(0 0)");
			add_location(path62, file$1, 68, 16, 8434);
			attr_dev(path63, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path63, "d", "M77.19,59.16s-4.56.84-5.67,2.32");
			attr_dev(path63, "transform", "translate(0 0)");
			add_location(path63, file$1, 69, 16, 8549);
			attr_dev(path64, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path64, "d", "M75.7,59.34s-4.51-4.93-1.76-5.25");
			attr_dev(path64, "transform", "translate(0 0)");
			add_location(path64, file$1, 70, 16, 8662);
			attr_dev(path65, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path65, "d", "M75,58.6s-2.75.47-2.28,1.81");
			attr_dev(path65, "transform", "translate(0 0)");
			add_location(path65, file$1, 71, 16, 8776);
			attr_dev(path66, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path66, "d", "M74.4,58.65s-1.67-2.37-1-2.28");
			attr_dev(path66, "transform", "translate(0 0)");
			add_location(path66, file$1, 72, 16, 8885);
			attr_dev(path67, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path67, "d", "M74,58.83s-.51-.93-.32-.93");
			attr_dev(path67, "transform", "translate(0 0)");
			add_location(path67, file$1, 73, 16, 8996);
			attr_dev(path68, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path68, "d", "M151.59,310.72");
			attr_dev(path68, "transform", "translate(0 0)");
			add_location(path68, file$1, 74, 16, 9104);
			attr_dev(path69, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path69, "d", "M148.61,309.88");
			attr_dev(path69, "transform", "translate(0 0)");
			add_location(path69, file$1, 75, 16, 9200);
			attr_dev(path70, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path70, "d", "M149.47,314.27");
			attr_dev(path70, "transform", "translate(0 0)");
			add_location(path70, file$1, 76, 16, 9296);
			attr_dev(path71, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path71, "d", "M147.83,308.11");
			attr_dev(path71, "transform", "translate(0 0)");
			add_location(path71, file$1, 77, 16, 9392);
			attr_dev(path72, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path72, "d", "M26.08,323.3s6.45-26,25.81-39.15a43.59,43.59,0,0,1,5.58-3.22");
			attr_dev(path72, "transform", "translate(0 0)");
			add_location(path72, file$1, 78, 16, 9488);
			attr_dev(path73, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path73, "d", "M94.49,175.62S72.72,189.71,74,207.76a21.47,21.47,0,0,0,.64,4");
			attr_dev(path73, "transform", "translate(0 0)");
			add_location(path73, file$1, 79, 16, 9630);
			attr_dev(path74, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path74, "d", "M74,207.76c0,8.37-.2,8.19-1.32,13.4,0,0-4,13.58-9.3,32.7s-2.51,14.68-11.44,30.29");
			attr_dev(path74, "transform", "translate(0 0)");
			add_location(path74, file$1, 80, 16, 9772);
			attr_dev(g0, "id", "Layer_1");
			attr_dev(g0, "data-name", "Layer 1");
			add_location(g0, file$1, 5, 12, 77);
			attr_dev(path75, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path75, "d", "M160.82,17.33a23.52,23.52,0,0,1,2.38-3c.4-.18,2.9-3.85,2.44-4.6a16,16,0,0,0-2.07-2.95c-.41-.2-.85-.18-1.21-.66s-2-.51-2-.51L158.67,5a1.07,1.07,0,0,0-.42,1.76,4.5,4.5,0,0,0,2.61,1.45l.4.09a7.56,7.56,0,0,0,1,2.31c.09.22-.26,0-.26,0s-.11,0-.55.48");
			attr_dev(path75, "transform", "translate(0 0)");
			add_location(path75, file$1, 83, 16, 10018);
			attr_dev(path76, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path76, "d", "M164.59,12.56a36,36,0,0,1,2.46-2.71c.51-.37,1.14-4.86,1.56-5.76a3.63,3.63,0,0,0-.33-1.72,12,12,0,0,1,0-2c.09-.57-1.12-.15-1.3.05s-.57.11-.88,2.33-.42,1.5-.13,1.74c-.24-.2-1.32,2-1.5,3.28");
			attr_dev(path76, "transform", "translate(0 0)");
			add_location(path76, file$1, 84, 16, 10343);
			attr_dev(path77, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path77, "d", "M168.28,2.37l.42-1a.48.48,0,0,0-.48-.66");
			attr_dev(path77, "transform", "translate(0 0)");
			add_location(path77, file$1, 85, 16, 10611);
			attr_dev(path78, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path78, "d", "M166.06,2.59c-1.12,2-1,2.16-1,2.16s-.55.11-1.48,2");
			attr_dev(path78, "transform", "translate(0 0)");
			add_location(path78, file$1, 86, 16, 10732);
			attr_dev(path79, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path79, "d", "M160.05,10.12A6.08,6.08,0,0,1,161.42,9");
			attr_dev(path79, "transform", "translate(0 0)");
			add_location(path79, file$1, 87, 16, 10863);
			attr_dev(path80, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path80, "d", "M158,11.7a4,4,0,0,0-1.25,1.14,3,3,0,0,0-1.59.62,2.37,2.37,0,0,0-1.45.24,2.54,2.54,0,0,0-1.36.2");
			attr_dev(path80, "transform", "translate(0 0)");
			add_location(path80, file$1, 88, 16, 10983);
			attr_dev(path81, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path81, "d", "M153.48,13.81a5.93,5.93,0,0,1,.86-1.34,7.93,7.93,0,0,0,.77-1.06");
			attr_dev(path81, "transform", "translate(0 0)");
			add_location(path81, file$1, 89, 16, 11159);
			attr_dev(path82, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path82, "d", "M156.67,18.43s-.82-2,1.87-4.77a1.47,1.47,0,0,0,.26-.6");
			attr_dev(path82, "transform", "translate(0 0)");
			add_location(path82, file$1, 90, 16, 11304);
			attr_dev(path83, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path83, "d", "M148.46,20.21c5.41-2.93,5.2-2.78,7.37-4.86");
			attr_dev(path83, "transform", "translate(0 0)");
			add_location(path83, file$1, 91, 16, 11439);
			attr_dev(path84, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path84, "d", "M156.65,13.55a10.24,10.24,0,0,1-1.3,2.79");
			attr_dev(path84, "transform", "translate(0 0)");
			add_location(path84, file$1, 92, 16, 11563);
			attr_dev(path85, "class", "allison-tattoo-3 svelte-1qjlatf");
			attr_dev(path85, "d", "M156.3,6.74s.93,1,1.71,0C157.9,6.5,156.3,6.74,156.3,6.74Z");
			attr_dev(path85, "transform", "translate(0 0)");
			add_location(path85, file$1, 93, 16, 11685);
			attr_dev(path86, "class", "allison-tattoo-3 svelte-1qjlatf");
			attr_dev(path86, "d", "M160.65,5.7S158.88,5,158.74,5,158.47,6.58,160.65,5.7Z");
			attr_dev(path86, "transform", "translate(0 0)");
			add_location(path86, file$1, 94, 16, 11824);
			attr_dev(g1, "id", "Layer_2");
			attr_dev(g1, "data-name", "Layer 2");
			attr_dev(g1, "class", "lady-hand svelte-1qjlatf");
			add_location(g1, file$1, 82, 12, 9947);
			attr_dev(path87, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path87, "d", "M144.82,276.18s1.74,4.33,7.19-2.16");
			attr_dev(path87, "transform", "translate(0 0)");
			add_location(path87, file$1, 97, 12, 12021);
			attr_dev(path88, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path88, "d", "M125.86,136.49c-.48-1.2-1-2.52-1.48-4");
			attr_dev(path88, "transform", "translate(0 0)");
			add_location(path88, file$1, 98, 12, 12133);
			attr_dev(path89, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path89, "d", "M125.86,136.49a72.65,72.65,0,0,0,3,6.75,5.08,5.08,0,0,1-.21,3.52c-1.24,2.62-5.32,4-9.94,2.76");
			attr_dev(path89, "transform", "translate(0 0)");
			add_location(path89, file$1, 99, 12, 12248);
			attr_dev(path90, "class", "allison-tattoo-4 svelte-1qjlatf");
			attr_dev(path90, "d", "M125.86,136.49");
			attr_dev(path90, "transform", "translate(0 0)");
			add_location(path90, file$1, 100, 12, 12418);
			attr_dev(path91, "class", "allison-tattoo-4 svelte-1qjlatf");
			attr_dev(path91, "d", "M120.06,136.31");
			attr_dev(path91, "transform", "translate(0 0)");
			add_location(path91, file$1, 101, 12, 12510);
			attr_dev(path92, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path92, "d", "M125.86,136.49a5.93,5.93,0,0,0,4.15-2.94,5.08,5.08,0,0,0,.21-3.52s-1.66,0-3.89-6.43");
			attr_dev(path92, "transform", "translate(0 0)");
			add_location(path92, file$1, 102, 12, 12602);
			attr_dev(path93, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path93, "d", "M123.47,265.72s-3.52-.39-16.83-32.08");
			attr_dev(path93, "transform", "translate(0 0)");
			add_location(path93, file$1, 103, 12, 12763);
			attr_dev(path94, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path94, "d", "M123.19,262.65A21.09,21.09,0,0,0,124.7,269a22.47,22.47,0,0,0,5.26,7.9");
			attr_dev(path94, "transform", "translate(0 0)");
			add_location(path94, file$1, 104, 12, 12877);
			attr_dev(path95, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path95, "d", "M123.4,288.46A22.61,22.61,0,0,0,124.7,269");
			attr_dev(path95, "transform", "translate(0 0)");
			add_location(path95, file$1, 105, 12, 13024);
			attr_dev(path96, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path96, "d", "M126.87,284.93s-8,6.6-8.7,23.38");
			attr_dev(path96, "transform", "translate(0 0)");
			add_location(path96, file$1, 106, 12, 13143);
			attr_dev(path97, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path97, "d", "M147.7,281.39s8.38-8.93,3.91-19.53-4.84-5-8.56-20.84-9.49-31.07-15.16-39.63-3-9.3-3-9.3,2.89.37-2.51-11.44");
			attr_dev(path97, "transform", "translate(0 0)");
			add_location(path97, file$1, 107, 12, 13252);
			attr_dev(path98, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path98, "d", "M142.05,310.93s3-13.54,5-23S149.7,279,149.7,279");
			attr_dev(path98, "transform", "translate(0 0)");
			add_location(path98, file$1, 108, 12, 13436);
			attr_dev(path99, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path99, "d", "M70.22,282.79s.55,4.09,7.39.88");
			attr_dev(path99, "transform", "translate(0 0)");
			add_location(path99, file$1, 109, 12, 13561);
			attr_dev(path100, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path100, "d", "M111.42,194.69a97.39,97.39,0,0,1-4.78,38.95,80.57,80.57,0,0,1-8.8,18.17c-11,16.91-8.62,12.65-13.16,21.3-1.74,3.33-1.86,4.09-2,5.49s-1.18,4.26-4.56,7.07c-6.7,5.58-5,4.4-7.18,8.09S68.86,303,54.12,319.9a68.43,68.43,0,0,1-4.79,5.17");
			attr_dev(path100, "transform", "translate(0 0)");
			add_location(path100, file$1, 110, 12, 13669);
			attr_dev(path101, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path101, "d", "M112.14,377.55");
			attr_dev(path101, "transform", "translate(0 0)");
			add_location(path101, file$1, 111, 12, 13974);
			attr_dev(path102, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path102, "d", "M113.14,367.75c-.2.52-.47,1.22-.76,2");
			attr_dev(path102, "transform", "translate(0 0)");
			add_location(path102, file$1, 112, 12, 14066);
			attr_dev(path103, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path103, "d", "M113.14,367.75l0-.13c1-2.69,2.14-9.58,2.61-20.65s2.32-38.09,2.32-38.09");
			attr_dev(path103, "transform", "translate(0 0)");
			add_location(path103, file$1, 113, 12, 14180);
			attr_dev(path104, "class", "allison-tattoo-6 svelte-1qjlatf");
			attr_dev(path104, "d", "M97.31,46.65");
			attr_dev(path104, "transform", "translate(0 0)");
			add_location(path104, file$1, 114, 12, 14328);
			attr_dev(path105, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path105, "d", "M119.38,81.11");
			attr_dev(path105, "transform", "translate(0 0)");
			add_location(path105, file$1, 115, 12, 14418);
			attr_dev(path106, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path106, "d", "M114.23,84c4.5-6.8,13-14,13-14s7.71-6.45,7.44-8.31");
			attr_dev(path106, "transform", "translate(0 0)");
			add_location(path106, file$1, 116, 12, 14509);
			attr_dev(path107, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path107, "d", "M133.41,61.58");
			attr_dev(path107, "transform", "translate(0 0)");
			add_location(path107, file$1, 117, 12, 14637);
			attr_dev(path108, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path108, "d", "M143,24.53");
			attr_dev(path108, "transform", "translate(0 0)");
			add_location(path108, file$1, 118, 12, 14728);
			attr_dev(path109, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path109, "d", "M159.17,15.09a2.68,2.68,0,0,1-.11-2.07l.69.22s-1.83-.77-1.57-1.76c-1.25.7-3.36-.13-3.47-.2s-.62-1.58.26-1.36c1.49.37,1.82-.51,3.24-.62.55,0,.44-.2,1.47.55s2,1.45,2,1.45.63.11.44,1.68a41,41,0,0,1-1.87,5.78A9.59,9.59,0,0,0,159,19.91c-.7,1-.51.81-5.08,4.29a9.43,9.43,0,0,0-2.53,2.7,1,1,0,0,1-.78.59");
			attr_dev(path109, "transform", "translate(0 0)");
			add_location(path109, file$1, 119, 12, 14816);
			attr_dev(path110, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path110, "d", "M156.44,9.74s2.42-4,.13-4.22c-1.52-.14-2.35,2.22-2.35,2.22s-.16-.24-2.16,2.68-1.47,1.92-1.47,1.92-4.29,4.17-4.77,8.51c-2.31,3-2.15,4.27-3.06,6.23,0,0-7.27,23.21-8.47,34.12-.56,2-4.71,6.76-4.71,6.76");
			attr_dev(path110, "transform", "translate(0 0)");
			add_location(path110, file$1, 120, 12, 15189);
			attr_dev(path111, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path111, "d", "M151.79,25.17");
			attr_dev(path111, "transform", "translate(0 0)");
			add_location(path111, file$1, 121, 12, 15464);
			attr_dev(path112, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path112, "d", "M119.8,112.93s-1.63-15.86,2.51-24.47");
			attr_dev(path112, "transform", "translate(0 0)");
			add_location(path112, file$1, 122, 12, 15555);
			attr_dev(path113, "class", "allison-tattoo-7 svelte-1qjlatf");
			attr_dev(path113, "d", "M106.13,48.11s3.88,3.67,7.64,1.78c1.89-.42,1.47,3.14,1.47,3.14s.1,1,2.34-.31c.83-.28,1.57,2.37,1.57,2.37s-.46-1.05.34-1.22,2.06,2.34,1.92,2.41.81,1.36,1.75,1.11,6.9,2-3.87,14.86c-7.82,12.84-6.35,23.23-6.35,23.23s.3,7.35,7.25,18.21c.14,1,10.64,15.49,10.64,15.49s1.5,3.35-.38,5.58-2.51,2.72-2.58,3.28");
			attr_dev(path113, "transform", "translate(0 0)");
			add_location(path113, file$1, 123, 12, 15669);
			attr_dev(path114, "class", "allison-tattoo-7 svelte-1qjlatf");
			attr_dev(path114, "d", "M126.19,150s.6.17,1.78-.8c2.55-1.92,2.16-7.37.66-9.6s-3.94-9.63-3.94-9.63");
			attr_dev(path114, "transform", "translate(0 0)");
			add_location(path114, file$1, 124, 12, 16045);
			attr_dev(path115, "class", "allison-tattoo-2 svelte-1qjlatf");
			attr_dev(path115, "d", "M112.35,203.25s14.68-21,15.62-54");
			attr_dev(path115, "transform", "translate(0 0)");
			add_location(path115, file$1, 125, 12, 16196);
			attr_dev(path116, "class", "allison-tattoo-8 svelte-1qjlatf");
			attr_dev(path116, "d", "M156.26,308.69l-1.46-37.53s-1.47-15.35-4.75-19.47-5-13.81-5-13.81-1-6.7-6.35-19.26c-12.35-23-12.84-30.21-12.84-30.21l2.51-39.76");
			attr_dev(path116, "transform", "translate(0 0)");
			attr_dev(path116, "fill", "none");
			add_location(path116, file$1, 126, 12, 16306);
			attr_dev(path117, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path117, "d", "M153.61,308s1.21.16,1,.95-1.74-.21-1.7-.44,2.72-3.1,3.26.53-7.4,1-7.4,1-1.48-1.88,1.61-1.51c1,.09-.21.58-.21.58s-.58,0-.29-.13l.29-.12a.31.31,0,0,0-.47,0c-.25.25-.35.49-.17.55a1.7,1.7,0,0,0,1.9.31c1-.54-.47-1.68-.54-1.79a37.93,37.93,0,0,0-6.45.45c-1.19.35,1.08.74.62.67s-.14-.49-.14-.49,1.19-.66,1.37,1.53-7,.53-7,.53-1.46-1.78,2.2-1.47-1.92.7-1.05.46-1.63-.11-.34.31,5.65-.42,1.11-1.26-6.38,1.71-3.66,1.15-1.47-.34.1-.62,2,1-2,1.85-4.29-.91-3.21-1.36,1.5-.11.94.31-.91,1.08.35.17,0-1.32-3-1-5.58.45-2.86,1.15.25-.39.25-.39-1.36-.14.69-.14.81,2.8-3.21,2.55-5-2.23-2.65-2.34,1.26.46.28.21-.45.49.21.46,2.86-.49-.17-1.75-7.25.84-7.25.84-4.18,2.42-.6,1.67-.23-.46-.23-.46,5.48-1.12.65,1.49c-2.84.79-2.84.09-2.84.09");
			attr_dev(path117, "transform", "translate(0 0)");
			add_location(path117, file$1, 127, 12, 16522);
			attr_dev(path118, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path118, "d", "M106.57,51.13s.42.55.86,1.27c.59,1,1.23,2.19,1,2.78-.59,1.36,0,.35.18-.11a3.15,3.15,0,0,0-.16-1.92c.1-.61.56-.52.56-.52a1,1,0,0,0-.87-1,2.42,2.42,0,0,0-.79,0C107.2,52.07,106.57,51.13,106.57,51.13Z");
			attr_dev(path118, "transform", "translate(0 0)");
			add_location(path118, file$1, 128, 12, 17311);
			attr_dev(path119, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path119, "d", "M107.74,52s-.07.61.31.24.06-.57.06-.57a.72.72,0,0,0-.68.76C107.44,53.12,107.74,52,107.74,52Z");
			attr_dev(path119, "transform", "translate(0 0)");
			add_location(path119, file$1, 129, 12, 17585);
			attr_dev(path120, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path120, "d", "M152.54,40");
			attr_dev(path120, "transform", "translate(0 0)");
			add_location(path120, file$1, 130, 12, 17755);
			attr_dev(path121, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path121, "d", "M109.24,132.18s.21-2.83-5.28-6a29.8,29.8,0,0,0-2.95-1.49");
			attr_dev(path121, "transform", "translate(0 0)");
			add_location(path121, file$1, 131, 12, 17843);
			attr_dev(path122, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path122, "d", "M95.36,101.27");
			attr_dev(path122, "transform", "translate(0 0)");
			add_location(path122, file$1, 132, 12, 17977);
			attr_dev(path123, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path123, "d", "M96,100c-2.72,5.89-2.13,6.63-2.13,6.63-1.53-.63-4.74-1.19-12.63,8.51-1.46,1.81-1.14,2.28-4,4.09C74,121,60,131.33,55.42,133.86c-2.37,1.31-1.39-.24-4.74,3.39s-.19-.51-7.49,6.37a99.92,99.92,0,0,0-10.83,10.79c-7.19,7.77-9.84,10.91-10.12,10.91");
			attr_dev(path123, "transform", "translate(0 0)");
			add_location(path123, file$1, 133, 12, 18068);
			attr_dev(path124, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path124, "d", "M90.63,106.55a7.85,7.85,0,0,1,5.17-6.32c2.32-1.07,11.62,2.93,17.21,18.91s13.67,10.12,3.55-9.63c-3.37-6.59-3.62-10.4-3.62-14");
			attr_dev(path124, "transform", "translate(0 0)");
			add_location(path124, file$1, 134, 12, 18384);
			attr_dev(path125, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path125, "d", "M90,109.55");
			attr_dev(path125, "transform", "translate(0 0)");
			add_location(path125, file$1, 135, 12, 18585);
			attr_dev(path126, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path126, "d", "M92.47,130.51");
			attr_dev(path126, "transform", "translate(0 0)");
			add_location(path126, file$1, 136, 12, 18673);
			attr_dev(path127, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path127, "d", "M90,109.55");
			attr_dev(path127, "transform", "translate(0 0)");
			add_location(path127, file$1, 137, 12, 18764);
			attr_dev(line0, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line0, "x1", "56.17");
			attr_dev(line0, "y1", "327.07");
			attr_dev(line0, "x2", "56.26");
			attr_dev(line0, "y2", "294.79");
			add_location(line0, file$1, 138, 12, 18852);
			attr_dev(line1, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line1, "x1", "69.19");
			attr_dev(line1, "y1", "326.97");
			attr_dev(line1, "x2", "69.29");
			attr_dev(line1, "y2", "274.69");
			add_location(line1, file$1, 139, 12, 18944);
			attr_dev(line2, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line2, "x1", "50.4");
			attr_dev(line2, "y1", "297.48");
			attr_dev(line2, "x2", "49.84");
			attr_dev(line2, "y2", "323.44");
			add_location(line2, file$1, 140, 12, 19036);
			attr_dev(line3, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line3, "x1", "46.77");
			attr_dev(line3, "y1", "323.16");
			attr_dev(line3, "x2", "45.47");
			attr_dev(line3, "y2", "302.23");
			add_location(line3, file$1, 141, 12, 19127);
			attr_dev(line4, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line4, "x1", "33.66");
			attr_dev(line4, "y1", "324");
			attr_dev(line4, "x2", "35.61");
			attr_dev(line4, "y2", "308.37");
			add_location(line4, file$1, 142, 12, 19219);
			attr_dev(line5, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line5, "x1", "32.26");
			attr_dev(line5, "y1", "323.44");
			attr_dev(line5, "x2", "32.73");
			attr_dev(line5, "y2", "310.97");
			add_location(line5, file$1, 143, 12, 19308);
			attr_dev(line6, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line6, "x1", "73.01");
			attr_dev(line6, "y1", "327.34");
			attr_dev(line6, "x2", "74.31");
			attr_dev(line6, "y2", "261.3");
			add_location(line6, file$1, 144, 12, 19400);
			attr_dev(path128, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path128, "d", "M90.22,326.88s-2.61-83,1.11-103.16");
			attr_dev(path128, "transform", "translate(0 0)");
			add_location(path128, file$1, 145, 12, 19491);
			attr_dev(path129, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path129, "d", "M94.68,326.88s-.37-93.4,1.77-104.56");
			attr_dev(path129, "transform", "translate(0 0)");
			add_location(path129, file$1, 146, 12, 19603);
			attr_dev(line7, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line7, "x1", "113.84");
			attr_dev(line7, "y1", "311.16");
			attr_dev(line7, "x2", "114.03");
			attr_dev(line7, "y2", "236.55");
			add_location(line7, file$1, 147, 12, 19716);
			attr_dev(path130, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path130, "d", "M124.82,310a497.72,497.72,0,0,1-2.79-58.6");
			attr_dev(path130, "transform", "translate(0 0)");
			add_location(path130, file$1, 148, 12, 19810);
			attr_dev(path131, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path131, "d", "M126.49,309.67s-1.11-34.6-1.86-51.53");
			attr_dev(path131, "transform", "translate(0 0)");
			add_location(path131, file$1, 149, 12, 19929);
			attr_dev(path132, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path132, "d", "M133.31,310");
			attr_dev(path132, "transform", "translate(0 0)");
			add_location(path132, file$1, 150, 12, 20043);
			attr_dev(path133, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path133, "d", "M134.22,309.3s-2.61-34.23-1.77-40.28");
			attr_dev(path133, "transform", "translate(0 0)");
			add_location(path133, file$1, 151, 12, 20132);
			attr_dev(path134, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path134, "d", "M136.17,309.86s.18-33.49-.75-39.35");
			attr_dev(path134, "transform", "translate(0 0)");
			add_location(path134, file$1, 152, 12, 20246);
			attr_dev(path135, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path135, "d", "M143.15,309s-2.8-31.72-2.7-39.72");
			attr_dev(path135, "transform", "translate(0 0)");
			add_location(path135, file$1, 153, 12, 20358);
			attr_dev(path136, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path136, "d", "M144.44,308.34s-.64-33.18-.83-38.3");
			attr_dev(path136, "transform", "translate(0 0)");
			add_location(path136, file$1, 154, 12, 20468);
			attr_dev(path137, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path137, "d", "M152,309.11s-1.67-33.49-1.39-39.25");
			attr_dev(path137, "transform", "translate(0 0)");
			add_location(path137, file$1, 155, 12, 20580);
			attr_dev(path138, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path138, "d", "M152.91,308.51s.19-27.31-.09-29.35");
			attr_dev(path138, "transform", "translate(0 0)");
			add_location(path138, file$1, 156, 12, 20692);
			attr_dev(line8, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line8, "x1", "100.35");
			attr_dev(line8, "y1", "327.81");
			attr_dev(line8, "x2", "100.26");
			attr_dev(line8, "y2", "324.93");
			add_location(line8, file$1, 157, 12, 20804);
			attr_dev(line9, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line9, "x1", "108.45");
			attr_dev(line9, "y1", "326.6");
			attr_dev(line9, "x2", "108.45");
			attr_dev(line9, "y2", "324.46");
			add_location(line9, file$1, 158, 12, 20898);
			attr_dev(line10, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line10, "x1", "110.54");
			attr_dev(line10, "y1", "326.27");
			attr_dev(line10, "x2", "110.5");
			attr_dev(line10, "y2", "324.9");
			add_location(line10, file$1, 159, 12, 20991);
			attr_dev(line11, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line11, "x1", "83.05");
			attr_dev(line11, "y1", "329.2");
			attr_dev(line11, "x2", "83.05");
			attr_dev(line11, "y2", "326.6");
			add_location(line11, file$1, 160, 12, 21083);
			attr_dev(line12, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line12, "x1", "87.15");
			attr_dev(line12, "y1", "327.81");
			attr_dev(line12, "x2", "87.33");
			attr_dev(line12, "y2", "328.6");
			add_location(line12, file$1, 161, 12, 21173);
			attr_dev(line13, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line13, "x1", "76.91");
			attr_dev(line13, "y1", "328.93");
			attr_dev(line13, "x2", "77.01");
			attr_dev(line13, "y2", "327.53");
			add_location(line13, file$1, 162, 12, 21264);
			attr_dev(path139, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path139, "d", "M58.87,326.13v1c4.09-1.68.69.65.69.65-4.18.14-5.76-1.54,3.68-1.86s5.91,2.74,1.3,1.58c2,1.07,8.19-2.46-.42-.84-10.32,2.84,7.35,3.26,10.79,3.72s5.07-2.51,1.49-2.88c-4.42.79,3.63,1.54-.88,1.44-7.86-3.16,4.84-1.9,11.63-2.51s.46,3,.18,2.14c1.07-.28,2-.51-1.16-.88s-6.61,3.76,5.77,2.65,7.86-4.05,6.74-3.58c-.74-.61-4.09.83-.84,1s-.6.84-.6.84c-3-.79-5.35-3.91,7.53-3.77a15.92,15.92,0,0,1,5.73.07c4.08,1.13-1,5.3-1.35,3.51-1.81-4.09,1.5-1.84,1.48-1.9");
			attr_dev(path139, "transform", "translate(0 0)");
			add_location(path139, file$1, 163, 12, 21356);
			attr_dev(line14, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line14, "x1", "54.59");
			attr_dev(line14, "y1", "322.23");
			attr_dev(line14, "x2", "54.87");
			attr_dev(line14, "y2", "324.65");
			add_location(line14, file$1, 164, 12, 21876);
			attr_dev(line15, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line15, "x1", "38.96");
			attr_dev(line15, "y1", "325.76");
			attr_dev(line15, "x2", "39.05");
			attr_dev(line15, "y2", "322.97");
			add_location(line15, file$1, 165, 12, 21968);
			attr_dev(line16, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line16, "x1", "27.05");
			attr_dev(line16, "y1", "324.83");
			attr_dev(line16, "x2", "27.33");
			attr_dev(line16, "y2", "323.16");
			add_location(line16, file$1, 166, 12, 22060);
			attr_dev(line17, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line17, "x1", "24.17");
			attr_dev(line17, "y1", "324.65");
			attr_dev(line17, "x2", "24.17");
			attr_dev(line17, "y2", "324");
			add_location(line17, file$1, 167, 12, 22152);
			attr_dev(line18, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line18, "x1", "96.45");
			attr_dev(line18, "y1", "327.16");
			attr_dev(line18, "x2", "96.73");
			attr_dev(line18, "y2", "325.3");
			add_location(line18, file$1, 168, 12, 22241);
			attr_dev(line19, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line19, "x1", "78.4");
			attr_dev(line19, "y1", "328.83");
			attr_dev(line19, "x2", "78.22");
			attr_dev(line19, "y2", "326.69");
			add_location(line19, file$1, 169, 12, 22332);
			attr_dev(line20, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line20, "x1", "74.96");
			attr_dev(line20, "y1", "327.81");
			attr_dev(line20, "x2", "75.24");
			attr_dev(line20, "y2", "326.6");
			add_location(line20, file$1, 170, 12, 22423);
			attr_dev(line21, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line21, "x1", "112.96");
			attr_dev(line21, "y1", "312.46");
			attr_dev(line21, "x2", "112.45");
			attr_dev(line21, "y2", "311.25");
			add_location(line21, file$1, 171, 12, 22514);
			attr_dev(line22, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line22, "x1", "121.56");
			attr_dev(line22, "y1", "310.97");
			attr_dev(line22, "x2", "121.47");
			attr_dev(line22, "y2", "308.46");
			add_location(line22, file$1, 172, 12, 22608);
			attr_dev(path140, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path140, "d", "M117.47,310.6");
			attr_dev(path140, "transform", "translate(0 0)");
			add_location(path140, file$1, 173, 12, 22702);
			attr_dev(line23, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line23, "x1", "146.29");
			attr_dev(line23, "y1", "310.05");
			attr_dev(line23, "x2", "146.4");
			attr_dev(line23, "y2", "308.09");
			add_location(line23, file$1, 174, 12, 22793);
			attr_dev(line24, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line24, "x1", "148.35");
			attr_dev(line24, "y1", "309.39");
			attr_dev(line24, "x2", "148.35");
			attr_dev(line24, "y2", "307.9");
			add_location(line24, file$1, 175, 12, 22886);
			attr_dev(line25, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line25, "x1", "154.61");
			attr_dev(line25, "y1", "308.95");
			attr_dev(line25, "x2", "154.77");
			attr_dev(line25, "y2", "307.44");
			add_location(line25, file$1, 176, 12, 22979);
			attr_dev(path141, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path141, "d", "M132.73,310.6");
			attr_dev(path141, "transform", "translate(0 0)");
			add_location(path141, file$1, 177, 12, 23073);
			attr_dev(line26, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line26, "x1", "132.54");
			attr_dev(line26, "y1", "309.62");
			attr_dev(line26, "x2", "132.89");
			attr_dev(line26, "y2", "310.74");
			add_location(line26, file$1, 178, 12, 23164);
			attr_dev(line27, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line27, "x1", "139.26");
			attr_dev(line27, "y1", "308.41");
			attr_dev(line27, "x2", "138.96");
			attr_dev(line27, "y2", "310.07");
			add_location(line27, file$1, 179, 12, 23258);
			attr_dev(line28, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line28, "x1", "145.06");
			attr_dev(line28, "y1", "309.01");
			attr_dev(line28, "x2", "145.31");
			attr_dev(line28, "y2", "308.58");
			add_location(line28, file$1, 180, 12, 23352);
			attr_dev(line29, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line29, "x1", "129.75");
			attr_dev(line29, "y1", "310.46");
			attr_dev(line29, "x2", "129.75");
			attr_dev(line29, "y2", "309.11");
			add_location(line29, file$1, 181, 12, 23446);
			attr_dev(line30, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line30, "x1", "131.7");
			attr_dev(line30, "y1", "310.41");
			attr_dev(line30, "x2", "131.56");
			attr_dev(line30, "y2", "309.02");
			add_location(line30, file$1, 182, 12, 23540);
			attr_dev(line31, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(line31, "x1", "117.7");
			attr_dev(line31, "y1", "311.11");
			attr_dev(line31, "x2", "117.42");
			attr_dev(line31, "y2", "309.11");
			add_location(line31, file$1, 183, 12, 23633);
			attr_dev(path142, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path142, "d", "M142,311.16a216.59,216.59,0,0,1-5.58,21.95c-3.16,9.58-5,28.56,2.58,32.65,3.76,2,8.53,2.69,13.32,4.56");
			attr_dev(path142, "transform", "translate(0 0)");
			add_location(path142, file$1, 184, 12, 23726);
			attr_dev(path143, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path143, "d", "M51.75,370.07s18.84,9.93-.19,9c-29.48-2-36.93-.19-36.93-.19s-9.28,3.06-4.28-7.63-1.48,3.85,2.14,2.8c4.19-1.23,40.8,2,31.59-1.05C53,374.13,51.75,370.07,51.75,370.07Z");
			attr_dev(path143, "transform", "translate(0 0)");
			add_location(path143, file$1, 185, 12, 23904);
			attr_dev(path144, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path144, "d", "M54.58,323.66");
			attr_dev(path144, "transform", "translate(0 0)");
			add_location(path144, file$1, 186, 12, 24146);
			attr_dev(path145, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path145, "d", "M55.33,322.32");
			attr_dev(path145, "transform", "translate(0 0)");
			add_location(path145, file$1, 187, 12, 24237);
			attr_dev(path146, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path146, "d", "M26,323.44");
			attr_dev(path146, "transform", "translate(0 0)");
			add_location(path146, file$1, 188, 12, 24328);
			attr_dev(path147, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path147, "d", "M115.05,356.65s-2.51,1.86,8.56,2S135,360.32,135,360.32s-1.79-6-.95-6.19c.51-.11-1.26-.53-4.11-.78a51.38,51.38,0,0,0-6.5-.15c-6.13.28-8.65-.46-8.27-1.2S115.05,356.65,115.05,356.65Z");
			attr_dev(path147, "transform", "translate(0 0)");
			add_location(path147, file$1, 189, 12, 24416);
			attr_dev(path148, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path148, "d", "M115.42,349.67s-.65-2.05,6.8.65,10,3.35,10,3.35");
			attr_dev(path148, "transform", "translate(0 0)");
			add_location(path148, file$1, 190, 12, 24673);
			attr_dev(path149, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path149, "d", "M134.49,359.81s1-1-1.48,14.23");
			attr_dev(path149, "transform", "translate(0 0)");
			add_location(path149, file$1, 191, 12, 24798);
			attr_dev(path150, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path150, "d", "M138.05,365.13s.63,3.05-1.7,9.19");
			attr_dev(path150, "transform", "translate(0 0)");
			add_location(path150, file$1, 192, 12, 24905);
			attr_dev(path151, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path151, "d", "M139.61,374s1.3-5.25.74-7.86");
			attr_dev(path151, "transform", "translate(0 0)");
			add_location(path151, file$1, 193, 12, 25015);
			attr_dev(path152, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path152, "d", "M16.22,354.93c16.18,5.11,17.11,9.3,17.11,9.3s.47,3.25-.84,10");
			attr_dev(path152, "transform", "translate(0 0)");
			add_location(path152, file$1, 194, 12, 25121);
			attr_dev(path153, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path153, "d", "M32.17,356.37s1.56-.44-14.26-6.58");
			attr_dev(path153, "transform", "translate(0 0)");
			add_location(path153, file$1, 195, 12, 25259);
			attr_dev(path154, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path154, "d", "M24.17,352.27a102.64,102.64,0,0,1,11.25-3.95");
			attr_dev(path154, "transform", "translate(0 0)");
			add_location(path154, file$1, 196, 12, 25370);
			attr_dev(path155, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path155, "d", "M15.52,357.86s3.9.46,6.51-.84");
			attr_dev(path155, "transform", "translate(0 0)");
			add_location(path155, file$1, 197, 12, 25492);
			attr_dev(path156, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path156, "d", "M33.33,353.2c-1.49.56-4.14,1.49-4.14,1.49");
			attr_dev(path156, "transform", "translate(0 0)");
			add_location(path156, file$1, 198, 12, 25599);
			attr_dev(path157, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path157, "d", "M35.7,365.86s2,3.18,1.19,8.48");
			attr_dev(path157, "transform", "translate(0 0)");
			add_location(path157, file$1, 199, 12, 25718);
			attr_dev(path158, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path158, "d", "M37.38,366.88s1.95-.65,1.95,7.53");
			attr_dev(path158, "transform", "translate(0 0)");
			add_location(path158, file$1, 200, 12, 25825);
			attr_dev(path159, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path159, "d", "M23.42,164.34a14,14,0,0,0-9.25,3.84c.32,0-2.75.42-3.44,1.77a11.52,11.52,0,0,0-2.89.7c-.42.23-2.6-1.21-4.74-.79s.28,1.44.28,1.44a4.52,4.52,0,0,0,2.14,1.16c1.25.88,1.67,1.16,3.11,1s2.93-.47,2.56-.19");
			attr_dev(path159, "transform", "translate(0 0)");
			add_location(path159, file$1, 201, 12, 25935);
			attr_dev(path160, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path160, "d", "M3.38,171.3a8.12,8.12,0,0,0-1.58-.23c-.14.14-.1-.75-1.63-.38-.33.75,1.25,1.91,1.25,1.91l1.12,1.12a9.3,9.3,0,0,0,2.19,1.72c.93.46.51,1.25,6.56.7");
			attr_dev(path160, "transform", "translate(0 0)");
			add_location(path160, file$1, 202, 12, 26209);
			attr_dev(path161, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path161, "d", "M10.91,178a9.51,9.51,0,0,1-3.25.61c-1.63.14-1.91-.19-3.26-1a9.36,9.36,0,0,1-3.07-3.58c-.65-1.21-.93-1.91-.51-2");
			attr_dev(path161, "transform", "translate(0 0)");
			add_location(path161, file$1, 203, 12, 26430);
			attr_dev(path162, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path162, "d", "M1.75,174.83s-.74-.23.56,1.82.65.83,2.42,2,1.63,2.42,4.32,1.45c2.65-.52,4.93-.89,4.75-.89s4.23-2.07,4.09-2,10.3-8,10.49-8,7.25-5,12.63-8.79c0,0,12-8.82,17.24-16.15");
			attr_dev(path162, "transform", "translate(0 0)");
			add_location(path162, file$1, 204, 12, 26618);
			attr_dev(path163, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path163, "d", "M3.69,170.43s.11-.6-1.15-.14c-.35.28.8.62.8.62C5.14,170.59,5,170.43,3.69,170.43Z");
			attr_dev(path163, "transform", "translate(0 0)");
			add_location(path163, file$1, 205, 12, 26859);
			attr_dev(path164, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path164, "d", "M1.46,171.26s-1.12-.52-1-.17a.87.87,0,0,0,.7.8S1,171.3,1.46,171.26Z");
			attr_dev(path164, "transform", "translate(0 0)");
			add_location(path164, file$1, 206, 12, 27017);
			attr_dev(path165, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path165, "d", "M11.33,372.93s6.14-25.12,14.7-49.49");
			attr_dev(path165, "transform", "translate(0 0)");
			add_location(path165, file$1, 207, 12, 27162);
			attr_dev(path166, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path166, "d", "M51.56,370.37");
			attr_dev(path166, "transform", "translate(0 0)");
			add_location(path166, file$1, 208, 12, 27275);
			attr_dev(path167, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path167, "d", "M51.56,370.55s-25.07-1.16-18.93-16.09c2.93-7.67,2.79-6.84,10-19s6.14-9.62,6.14-9.62");
			attr_dev(path167, "transform", "translate(0 0)");
			add_location(path167, file$1, 209, 12, 27366);
			attr_dev(path168, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path168, "d", "M88.21,132.32");
			attr_dev(path168, "transform", "translate(0 0)");
			add_location(path168, file$1, 210, 12, 27527);
			attr_dev(path169, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path169, "d", "M97.71,149.37c-4.42-7.23-4.89-18.79-6.1-24.07,0,0,3.63,17.11,9.21,25.67");
			attr_dev(path169, "transform", "translate(0 0)");
			add_location(path169, file$1, 211, 12, 27618);
			attr_dev(path170, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path170, "d", "M112.73,326.23c-.38-12.65-1.49-81.63-1.68-108.84-.1-14.85,0-20.73-10.08-57.93");
			attr_dev(path170, "transform", "translate(0 0)");
			add_location(path170, file$1, 212, 12, 27767);
			attr_dev(path171, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path171, "d", "M101,159.46c-.12-.41-.22-.81-.34-1.23-1.07-3.13-2-6.07-2.92-8.86");
			attr_dev(path171, "transform", "translate(0 0)");
			add_location(path171, file$1, 213, 12, 27922);
			attr_dev(path172, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path172, "d", "M97.71,149.37a26.82,26.82,0,0,1,.31,4,21.22,21.22,0,0,0,.69,4.51");
			attr_dev(path172, "transform", "translate(0 0)");
			add_location(path172, file$1, 214, 12, 28064);
			attr_dev(path173, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path173, "d", "M56.08,322.32c-8.19-1.49-5.77,2.05-5.77,2.05s4,.93,2.32-1-1.48.93-1.86.28.75-2.79,3.45-.09-5.4,2.33-5.4,2.33-5.49.46-6.51-1.59,2.88-.27,1.67-.55-.83.37.1.83,7.72-2.32-4.1-1.67c-7.25.4-6.93,1.39-5.6,2.1");
			attr_dev(path173, "transform", "translate(0 0)");
			add_location(path173, file$1, 215, 12, 28206);
			attr_dev(path174, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path174, "d", "M21.52,325.87c.12.14,1.25-.11,1.25-.11s-.62.08-1.25.11");
			attr_dev(path174, "transform", "translate(0 0)");
			add_location(path174, file$1, 216, 12, 28485);
			attr_dev(path175, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path175, "d", "M34.38,325a16.16,16.16,0,0,1,2.81.41c6,1.12-4.46,1.12-4.46,1.12s-9-.93-4.1-2.7,2.14.74,2.14.74,1.12-1.86-.83-.55.83.55,1.11,1.2,5.49-3.9-5-1.76c-7.78,2.32-6.1,2.51-4.51,2.43");
			attr_dev(path175, "transform", "translate(0 0)");
			add_location(path175, file$1, 217, 12, 28617);
			attr_dev(path176, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path176, "d", "M91.7,145.58c.2,1,5.7,16.66,5.68,18C100,170.88,93,174.79,93,174.79,77.79,189.37,74.12,195,72.45,205.67a46.18,46.18,0,0,0-.09,7.44c.26,8.24-13,49.16-14.4,55.75a22.38,22.38,0,0,1-10,14.58c-5.21,3.53-19.25,15.42-28.11,41.72.95,5.81,6.72-2.56,3.09-.14-1.21.53-1.52.76-1.44.85");
			attr_dev(path176, "transform", "translate(0 0)");
			add_location(path176, file$1, 218, 12, 28868);
			attr_dev(path177, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path177, "d", "M36.1,325.66a10.3,10.3,0,0,1-1.72-.68");
			attr_dev(path177, "transform", "translate(0 0)");
			add_location(path177, file$1, 219, 12, 29217);
			attr_dev(path178, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path178, "d", "M36.1,325.66l.35.1-.35-.1");
			attr_dev(path178, "transform", "translate(0 0)");
			add_location(path178, file$1, 220, 12, 29332);
			attr_dev(path179, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path179, "d", "M34.38,325c-.29.06,1.06.48,1.72.68");
			attr_dev(path179, "transform", "translate(0 0)");
			add_location(path179, file$1, 221, 12, 29435);
			attr_dev(path180, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path180, "d", "M90.49,106.74c6.42-22.84,22.66,28.58,22.66,28.58,1.25,8,1.16,15.93-.61,20.3-3.09,5.15-7.41,6.1-11.57,3.84");
			attr_dev(path180, "transform", "translate(0 0)");
			add_location(path180, file$1, 222, 12, 29547);
			attr_dev(path181, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path181, "d", "M87.89,127.16c.94,12.1,5.71,26.42,10.82,30.73");
			attr_dev(path181, "transform", "translate(0 0)");
			add_location(path181, file$1, 223, 12, 29730);
			attr_dev(path182, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path182, "d", "M98,153.38c7.81,23.25-2.6,60.48-2.6,60.48");
			attr_dev(path182, "transform", "translate(0 0)");
			add_location(path182, file$1, 224, 12, 29853);
			attr_dev(path183, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path183, "d", "M97.84,152.09s8.75,19.58,5.68,57");
			attr_dev(path183, "transform", "translate(0 0)");
			add_location(path183, file$1, 225, 12, 29972);
			attr_dev(path184, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path184, "d", "M106.59,212s2.65-27.35-8.93-61.12");
			attr_dev(path184, "transform", "translate(0 0)");
			add_location(path184, file$1, 226, 12, 30082);
			attr_dev(path185, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path185, "d", "M99.89,210s5.4-41.49-1.87-56.57");
			attr_dev(path185, "transform", "translate(0 0)");
			add_location(path185, file$1, 227, 12, 30193);
			attr_dev(path186, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path186, "d", "M97.52,84.81a23.15,23.15,0,0,1-2,16.28");
			attr_dev(path186, "transform", "translate(0 0)");
			add_location(path186, file$1, 228, 12, 30302);
			attr_dev(path187, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path187, "d", "M114,173.9s11.72,35.44,15.49,51.91");
			attr_dev(path187, "transform", "translate(0 0)");
			add_location(path187, file$1, 229, 12, 30418);
			attr_dev(path188, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path188, "d", "M112.17,173.34s14.93,44.38,17,61.26");
			attr_dev(path188, "transform", "translate(0 0)");
			add_location(path188, file$1, 230, 12, 30530);
			attr_dev(path189, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path189, "d", "M117.89,181.72s4,11.58,8.79,27.07");
			attr_dev(path189, "transform", "translate(0 0)");
			add_location(path189, file$1, 231, 12, 30643);
			attr_dev(path190, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path190, "d", "M121,185.9s2,8.1,4.19,17.17");
			attr_dev(path190, "transform", "translate(0 0)");
			add_location(path190, file$1, 232, 12, 30754);
			attr_dev(path191, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path191, "d", "M115.38,187.72s7.11,31.39,8.23,49.53");
			attr_dev(path191, "transform", "translate(0 0)");
			add_location(path191, file$1, 233, 12, 30859);
			attr_dev(path192, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path192, "d", "M127,235s-4.61-23.58-10-44.37");
			attr_dev(path192, "transform", "translate(0 0)");
			add_location(path192, file$1, 234, 12, 30973);
			attr_dev(path193, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path193, "d", "M113.7,190s6.56,25.12,7.26,49.53");
			attr_dev(path193, "transform", "translate(0 0)");
			add_location(path193, file$1, 235, 12, 31080);
			attr_dev(path194, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path194, "d", "M113.29,191.9s4.74,27.21,4.46,47");
			attr_dev(path194, "transform", "translate(0 0)");
			add_location(path194, file$1, 236, 12, 31190);
			attr_dev(path195, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path195, "d", "M115.38,243");
			attr_dev(path195, "transform", "translate(0 0)");
			add_location(path195, file$1, 237, 12, 31300);
			attr_dev(path196, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path196, "d", "M134.68,61.67");
			attr_dev(path196, "transform", "translate(0 0)");
			add_location(path196, file$1, 238, 12, 31389);
			attr_dev(path197, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path197, "d", "M132.73,65.21");
			attr_dev(path197, "transform", "translate(0 0)");
			add_location(path197, file$1, 239, 12, 31480);
			attr_dev(path198, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path198, "d", "M146.88,58.6");
			attr_dev(path198, "transform", "translate(0 0)");
			add_location(path198, file$1, 240, 12, 31571);
			attr_dev(path199, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path199, "d", "M148.91,39.18");
			attr_dev(path199, "transform", "translate(0 0)");
			add_location(path199, file$1, 241, 12, 31661);
			attr_dev(path200, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path200, "d", "M150.59,27.49s-1-.28-2.28,9.09c-.05.35-.21,1.92-.45,4.16");
			attr_dev(path200, "transform", "translate(0 0)");
			add_location(path200, file$1, 242, 12, 31752);
			attr_dev(path201, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path201, "d", "M142.66,72.25s-.44.62-1.34,1.69");
			attr_dev(path201, "transform", "translate(0 0)");
			add_location(path201, file$1, 243, 12, 31886);
			attr_dev(path202, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path202, "d", "M141.32,73.94a97.84,97.84,0,0,1-16,14.75");
			attr_dev(path202, "transform", "translate(0 0)");
			add_location(path202, file$1, 244, 12, 31995);
			attr_dev(path203, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path203, "d", "M125.15,88.79l.12-.1");
			attr_dev(path203, "transform", "translate(0 0)");
			add_location(path203, file$1, 245, 12, 32113);
			attr_dev(path204, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path204, "d", "M146.12,58.6c-.25,2.33-.48,4.35-.65,5.73s-.94,3-1.08,4.19c-.36,3-1.35,3.81-2,4.46l-1,1");
			attr_dev(path204, "transform", "translate(0 0)");
			add_location(path204, file$1, 246, 12, 32211);
			attr_dev(path205, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path205, "d", "M125.27,88.69a30.66,30.66,0,0,0-5.61,11.49");
			attr_dev(path205, "transform", "translate(0 0)");
			add_location(path205, file$1, 247, 12, 32375);
			attr_dev(path206, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path206, "d", "M127.8,86.08a16.79,16.79,0,0,0-2.53,2.61");
			attr_dev(path206, "transform", "translate(0 0)");
			add_location(path206, file$1, 248, 12, 32495);
			attr_dev(path207, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path207, "d", "M141.32,73.94");
			attr_dev(path207, "transform", "translate(0 0)");
			add_location(path207, file$1, 249, 12, 32613);
			attr_dev(path208, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path208, "d", "M146.88,58.6");
			attr_dev(path208, "transform", "translate(0 0)");
			add_location(path208, file$1, 250, 12, 32704);
			attr_dev(path209, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path209, "d", "M146.12,59.81");
			attr_dev(path209, "transform", "translate(0 0)");
			add_location(path209, file$1, 251, 12, 32794);
			attr_dev(path210, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path210, "d", "M146,59.11c1.76-4.07,2-15.5,1.91-18.37");
			attr_dev(path210, "transform", "translate(0 0)");
			add_location(path210, file$1, 252, 12, 32885);
			attr_dev(path211, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path211, "d", "M148.87,38.51c0,.08,0,.31,0,.67");
			attr_dev(path211, "transform", "translate(0 0)");
			add_location(path211, file$1, 253, 12, 33001);
			attr_dev(path212, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path212, "d", "M152.75,370.07s18.84,9.93-.19,9c-29.48-2-36.93-.19-36.93-.19s-9.28,3.06-4.28-7.63-1.48,3.85,2.14,2.8c4.19-1.23,40.8,2,31.59-1.05C154,374.13,152.75,370.07,152.75,370.07Z");
			attr_dev(path212, "transform", "translate(0 0)");
			add_location(path212, file$1, 254, 12, 33110);
			attr_dev(path213, "class", "allison-tattoo-1 svelte-1qjlatf");
			attr_dev(path213, "d", "M101.56,124.86s-4.65-2.72-11.44.9c-4.73,2.53-5.68,4.08-12.74,8.19-3.08,1.79-5.51,3-12,6.14A23.89,23.89,0,0,0,57.29,146");
			attr_dev(path213, "transform", "translate(0 0)");
			add_location(path213, file$1, 255, 12, 33356);
			attr_dev(path214, "class", "allison-tattoo-5 svelte-1qjlatf");
			attr_dev(path214, "d", "M92,104.88");
			attr_dev(path214, "transform", "translate(0 0)");
			add_location(path214, file$1, 256, 12, 33552);
			attr_dev(g2, "id", "Layer_3");
			attr_dev(g2, "data-name", "Layer 3");
			add_location(g2, file$1, 96, 12, 11972);
			attr_dev(svg, "viewBox", "0 0 168.85 379.56");
			add_location(svg, file$1, 1, 8, 9);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, g0);
			append_dev(g0, path0);
			append_dev(g0, path1);
			append_dev(g0, path2);
			append_dev(g0, path3);
			append_dev(g0, path4);
			append_dev(g0, path5);
			append_dev(g0, path6);
			append_dev(g0, path7);
			append_dev(g0, path8);
			append_dev(g0, path9);
			append_dev(g0, path10);
			append_dev(g0, path11);
			append_dev(g0, path12);
			append_dev(g0, path13);
			append_dev(g0, path14);
			append_dev(g0, path15);
			append_dev(g0, path16);
			append_dev(g0, path17);
			append_dev(g0, path18);
			append_dev(g0, path19);
			append_dev(g0, path20);
			append_dev(g0, path21);
			append_dev(g0, path22);
			append_dev(g0, path23);
			append_dev(g0, path24);
			append_dev(g0, path25);
			append_dev(g0, path26);
			append_dev(g0, path27);
			append_dev(g0, path28);
			append_dev(g0, path29);
			append_dev(g0, path30);
			append_dev(g0, path31);
			append_dev(g0, path32);
			append_dev(g0, path33);
			append_dev(g0, path34);
			append_dev(g0, path35);
			append_dev(g0, path36);
			append_dev(g0, path37);
			append_dev(g0, path38);
			append_dev(g0, path39);
			append_dev(g0, path40);
			append_dev(g0, path41);
			append_dev(g0, path42);
			append_dev(g0, path43);
			append_dev(g0, path44);
			append_dev(g0, path45);
			append_dev(g0, path46);
			append_dev(g0, path47);
			append_dev(g0, path48);
			append_dev(g0, path49);
			append_dev(g0, path50);
			append_dev(g0, path51);
			append_dev(g0, path52);
			append_dev(g0, path53);
			append_dev(g0, path54);
			append_dev(g0, path55);
			append_dev(g0, path56);
			append_dev(g0, path57);
			append_dev(g0, path58);
			append_dev(g0, path59);
			append_dev(g0, path60);
			append_dev(g0, path61);
			append_dev(g0, path62);
			append_dev(g0, path63);
			append_dev(g0, path64);
			append_dev(g0, path65);
			append_dev(g0, path66);
			append_dev(g0, path67);
			append_dev(g0, path68);
			append_dev(g0, path69);
			append_dev(g0, path70);
			append_dev(g0, path71);
			append_dev(g0, path72);
			append_dev(g0, path73);
			append_dev(g0, path74);
			append_dev(svg, g1);
			append_dev(g1, path75);
			append_dev(g1, path76);
			append_dev(g1, path77);
			append_dev(g1, path78);
			append_dev(g1, path79);
			append_dev(g1, path80);
			append_dev(g1, path81);
			append_dev(g1, path82);
			append_dev(g1, path83);
			append_dev(g1, path84);
			append_dev(g1, path85);
			append_dev(g1, path86);
			append_dev(svg, g2);
			append_dev(g2, path87);
			append_dev(g2, path88);
			append_dev(g2, path89);
			append_dev(g2, path90);
			append_dev(g2, path91);
			append_dev(g2, path92);
			append_dev(g2, path93);
			append_dev(g2, path94);
			append_dev(g2, path95);
			append_dev(g2, path96);
			append_dev(g2, path97);
			append_dev(g2, path98);
			append_dev(g2, path99);
			append_dev(g2, path100);
			append_dev(g2, path101);
			append_dev(g2, path102);
			append_dev(g2, path103);
			append_dev(g2, path104);
			append_dev(g2, path105);
			append_dev(g2, path106);
			append_dev(g2, path107);
			append_dev(g2, path108);
			append_dev(g2, path109);
			append_dev(g2, path110);
			append_dev(g2, path111);
			append_dev(g2, path112);
			append_dev(g2, path113);
			append_dev(g2, path114);
			append_dev(g2, path115);
			append_dev(g2, path116);
			append_dev(g2, path117);
			append_dev(g2, path118);
			append_dev(g2, path119);
			append_dev(g2, path120);
			append_dev(g2, path121);
			append_dev(g2, path122);
			append_dev(g2, path123);
			append_dev(g2, path124);
			append_dev(g2, path125);
			append_dev(g2, path126);
			append_dev(g2, path127);
			append_dev(g2, line0);
			append_dev(g2, line1);
			append_dev(g2, line2);
			append_dev(g2, line3);
			append_dev(g2, line4);
			append_dev(g2, line5);
			append_dev(g2, line6);
			append_dev(g2, path128);
			append_dev(g2, path129);
			append_dev(g2, line7);
			append_dev(g2, path130);
			append_dev(g2, path131);
			append_dev(g2, path132);
			append_dev(g2, path133);
			append_dev(g2, path134);
			append_dev(g2, path135);
			append_dev(g2, path136);
			append_dev(g2, path137);
			append_dev(g2, path138);
			append_dev(g2, line8);
			append_dev(g2, line9);
			append_dev(g2, line10);
			append_dev(g2, line11);
			append_dev(g2, line12);
			append_dev(g2, line13);
			append_dev(g2, path139);
			append_dev(g2, line14);
			append_dev(g2, line15);
			append_dev(g2, line16);
			append_dev(g2, line17);
			append_dev(g2, line18);
			append_dev(g2, line19);
			append_dev(g2, line20);
			append_dev(g2, line21);
			append_dev(g2, line22);
			append_dev(g2, path140);
			append_dev(g2, line23);
			append_dev(g2, line24);
			append_dev(g2, line25);
			append_dev(g2, path141);
			append_dev(g2, line26);
			append_dev(g2, line27);
			append_dev(g2, line28);
			append_dev(g2, line29);
			append_dev(g2, line30);
			append_dev(g2, line31);
			append_dev(g2, path142);
			append_dev(g2, path143);
			append_dev(g2, path144);
			append_dev(g2, path145);
			append_dev(g2, path146);
			append_dev(g2, path147);
			append_dev(g2, path148);
			append_dev(g2, path149);
			append_dev(g2, path150);
			append_dev(g2, path151);
			append_dev(g2, path152);
			append_dev(g2, path153);
			append_dev(g2, path154);
			append_dev(g2, path155);
			append_dev(g2, path156);
			append_dev(g2, path157);
			append_dev(g2, path158);
			append_dev(g2, path159);
			append_dev(g2, path160);
			append_dev(g2, path161);
			append_dev(g2, path162);
			append_dev(g2, path163);
			append_dev(g2, path164);
			append_dev(g2, path165);
			append_dev(g2, path166);
			append_dev(g2, path167);
			append_dev(g2, path168);
			append_dev(g2, path169);
			append_dev(g2, path170);
			append_dev(g2, path171);
			append_dev(g2, path172);
			append_dev(g2, path173);
			append_dev(g2, path174);
			append_dev(g2, path175);
			append_dev(g2, path176);
			append_dev(g2, path177);
			append_dev(g2, path178);
			append_dev(g2, path179);
			append_dev(g2, path180);
			append_dev(g2, path181);
			append_dev(g2, path182);
			append_dev(g2, path183);
			append_dev(g2, path184);
			append_dev(g2, path185);
			append_dev(g2, path186);
			append_dev(g2, path187);
			append_dev(g2, path188);
			append_dev(g2, path189);
			append_dev(g2, path190);
			append_dev(g2, path191);
			append_dev(g2, path192);
			append_dev(g2, path193);
			append_dev(g2, path194);
			append_dev(g2, path195);
			append_dev(g2, path196);
			append_dev(g2, path197);
			append_dev(g2, path198);
			append_dev(g2, path199);
			append_dev(g2, path200);
			append_dev(g2, path201);
			append_dev(g2, path202);
			append_dev(g2, path203);
			append_dev(g2, path204);
			append_dev(g2, path205);
			append_dev(g2, path206);
			append_dev(g2, path207);
			append_dev(g2, path208);
			append_dev(g2, path209);
			append_dev(g2, path210);
			append_dev(g2, path211);
			append_dev(g2, path212);
			append_dev(g2, path213);
			append_dev(g2, path214);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<AllisonTattoo> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("AllisonTattoo", $$slots, []);
	return [];
}

class AllisonTattoo extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "AllisonTattoo",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src/routes/index.svelte generated by Svelte v3.24.0 */
const file$2 = "src/routes/index.svelte";

function create_fragment$2(ctx) {
	let t0;
	let div25;
	let div24;
	let div23;
	let div8;
	let div0;
	let selfportrait;
	let t1;
	let div1;
	let t2;
	let div7;
	let div6;
	let div2;
	let t3;
	let t4;
	let div3;
	let t5;
	let t6;
	let div4;
	let t7;
	let t8;
	let div5;
	let t9;
	let t10;
	let div22;
	let div21;
	let div20;
	let div14;
	let div13;
	let div9;
	let t11;
	let div10;
	let t12;
	let t13;
	let div11;
	let a0;
	let t14;
	let t15;
	let div12;
	let a1;
	let t16;
	let t17;
	let div19;
	let div15;
	let allisontattoo0;
	let t18;
	let allisontattoo1;
	let t19;
	let allisontattoo2;
	let t20;
	let allisontattoo3;
	let t21;
	let allisontattoo4;
	let t22;
	let allisontattoo5;
	let t23;
	let allisontattoo6;
	let t24;
	let allisontattoo7;
	let t25;
	let div16;
	let allisontattoo8;
	let t26;
	let allisontattoo9;
	let t27;
	let allisontattoo10;
	let t28;
	let allisontattoo11;
	let t29;
	let allisontattoo12;
	let t30;
	let allisontattoo13;
	let t31;
	let allisontattoo14;
	let t32;
	let allisontattoo15;
	let t33;
	let div17;
	let allisontattoo16;
	let t34;
	let allisontattoo17;
	let t35;
	let allisontattoo18;
	let t36;
	let allisontattoo19;
	let t37;
	let allisontattoo20;
	let t38;
	let allisontattoo21;
	let t39;
	let allisontattoo22;
	let t40;
	let allisontattoo23;
	let t41;
	let div18;
	let allisontattoo24;
	let t42;
	let allisontattoo25;
	let t43;
	let allisontattoo26;
	let t44;
	let allisontattoo27;
	let t45;
	let allisontattoo28;
	let t46;
	let allisontattoo29;
	let t47;
	let allisontattoo30;
	let t48;
	let allisontattoo31;
	let current;
	selfportrait = new SelfPortrait({ $$inline: true });

	allisontattoo0 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo1 = new AllisonTattoo({ $$inline: true });

	allisontattoo2 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo3 = new AllisonTattoo({ $$inline: true });

	allisontattoo4 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo5 = new AllisonTattoo({ $$inline: true });

	allisontattoo6 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo7 = new AllisonTattoo({ $$inline: true });
	allisontattoo8 = new AllisonTattoo({ $$inline: true });

	allisontattoo9 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo10 = new AllisonTattoo({ $$inline: true });

	allisontattoo11 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo12 = new AllisonTattoo({ $$inline: true });

	allisontattoo13 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo14 = new AllisonTattoo({ $$inline: true });

	allisontattoo15 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo16 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo17 = new AllisonTattoo({ $$inline: true });

	allisontattoo18 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo19 = new AllisonTattoo({ $$inline: true });

	allisontattoo20 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo21 = new AllisonTattoo({ $$inline: true });

	allisontattoo22 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo23 = new AllisonTattoo({ $$inline: true });
	allisontattoo24 = new AllisonTattoo({ $$inline: true });

	allisontattoo25 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo26 = new AllisonTattoo({ $$inline: true });

	allisontattoo27 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo28 = new AllisonTattoo({ $$inline: true });

	allisontattoo29 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	allisontattoo30 = new AllisonTattoo({ $$inline: true });

	allisontattoo31 = new AllisonTattoo({
			props: { class: "svg-mirror" },
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			div25 = element("div");
			div24 = element("div");
			div23 = element("div");
			div8 = element("div");
			div0 = element("div");
			create_component(selfportrait.$$.fragment);
			t1 = space();
			div1 = element("div");
			t2 = space();
			div7 = element("div");
			div6 = element("div");
			div2 = element("div");
			t3 = text("Jess Tucker");
			t4 = space();
			div3 = element("div");
			t5 = text("The Miles Davis of Solitaire");
			t6 = space();
			div4 = element("div");
			t7 = text("The Kurt Cobain of Web Development");
			t8 = space();
			div5 = element("div");
			t9 = text("Web Developer");
			t10 = space();
			div22 = element("div");
			div21 = element("div");
			div20 = element("div");
			div14 = element("div");
			div13 = element("div");
			div9 = element("div");
			t11 = space();
			div10 = element("div");
			t12 = text("art");
			t13 = space();
			div11 = element("div");
			a0 = element("a");
			t14 = text("code");
			t15 = space();
			div12 = element("div");
			a1 = element("a");
			t16 = text("techno");
			t17 = space();
			div19 = element("div");
			div15 = element("div");
			create_component(allisontattoo0.$$.fragment);
			t18 = space();
			create_component(allisontattoo1.$$.fragment);
			t19 = space();
			create_component(allisontattoo2.$$.fragment);
			t20 = space();
			create_component(allisontattoo3.$$.fragment);
			t21 = space();
			create_component(allisontattoo4.$$.fragment);
			t22 = space();
			create_component(allisontattoo5.$$.fragment);
			t23 = space();
			create_component(allisontattoo6.$$.fragment);
			t24 = space();
			create_component(allisontattoo7.$$.fragment);
			t25 = space();
			div16 = element("div");
			create_component(allisontattoo8.$$.fragment);
			t26 = space();
			create_component(allisontattoo9.$$.fragment);
			t27 = space();
			create_component(allisontattoo10.$$.fragment);
			t28 = space();
			create_component(allisontattoo11.$$.fragment);
			t29 = space();
			create_component(allisontattoo12.$$.fragment);
			t30 = space();
			create_component(allisontattoo13.$$.fragment);
			t31 = space();
			create_component(allisontattoo14.$$.fragment);
			t32 = space();
			create_component(allisontattoo15.$$.fragment);
			t33 = space();
			div17 = element("div");
			create_component(allisontattoo16.$$.fragment);
			t34 = space();
			create_component(allisontattoo17.$$.fragment);
			t35 = space();
			create_component(allisontattoo18.$$.fragment);
			t36 = space();
			create_component(allisontattoo19.$$.fragment);
			t37 = space();
			create_component(allisontattoo20.$$.fragment);
			t38 = space();
			create_component(allisontattoo21.$$.fragment);
			t39 = space();
			create_component(allisontattoo22.$$.fragment);
			t40 = space();
			create_component(allisontattoo23.$$.fragment);
			t41 = space();
			div18 = element("div");
			create_component(allisontattoo24.$$.fragment);
			t42 = space();
			create_component(allisontattoo25.$$.fragment);
			t43 = space();
			create_component(allisontattoo26.$$.fragment);
			t44 = space();
			create_component(allisontattoo27.$$.fragment);
			t45 = space();
			create_component(allisontattoo28.$$.fragment);
			t46 = space();
			create_component(allisontattoo29.$$.fragment);
			t47 = space();
			create_component(allisontattoo30.$$.fragment);
			t48 = space();
			create_component(allisontattoo31.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-14mspzp\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div25 = claim_element(nodes, "DIV", { id: true, class: true });
			var div25_nodes = children(div25);
			div24 = claim_element(div25_nodes, "DIV", { id: true });
			var div24_nodes = children(div24);
			div23 = claim_element(div24_nodes, "DIV", { id: true, class: true });
			var div23_nodes = children(div23);
			div8 = claim_element(div23_nodes, "DIV", { id: true, class: true });
			var div8_nodes = children(div8);
			div0 = claim_element(div8_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(selfportrait.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div8_nodes);
			div1 = claim_element(div8_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { id: true, class: true });
			var div6_nodes = children(div6);
			div2 = claim_element(div6_nodes, "DIV", {});
			var div2_nodes = children(div2);
			t3 = claim_text(div2_nodes, "Jess Tucker");
			div2_nodes.forEach(detach_dev);
			t4 = claim_space(div6_nodes);
			div3 = claim_element(div6_nodes, "DIV", {});
			var div3_nodes = children(div3);
			t5 = claim_text(div3_nodes, "The Miles Davis of Solitaire");
			div3_nodes.forEach(detach_dev);
			t6 = claim_space(div6_nodes);
			div4 = claim_element(div6_nodes, "DIV", {});
			var div4_nodes = children(div4);
			t7 = claim_text(div4_nodes, "The Kurt Cobain of Web Development");
			div4_nodes.forEach(detach_dev);
			t8 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", {});
			var div5_nodes = children(div5);
			t9 = claim_text(div5_nodes, "Web Developer");
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t10 = claim_space(div23_nodes);
			div22 = claim_element(div23_nodes, "DIV", { id: true, class: true });
			var div22_nodes = children(div22);
			div21 = claim_element(div22_nodes, "DIV", { id: true });
			var div21_nodes = children(div21);
			div20 = claim_element(div21_nodes, "DIV", { id: true, class: true });
			var div20_nodes = children(div20);
			div14 = claim_element(div20_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", {});
			var div13_nodes = children(div13);
			div9 = claim_element(div13_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div9_nodes.forEach(detach_dev);
			t11 = claim_space(div13_nodes);
			div10 = claim_element(div13_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			t12 = claim_text(div10_nodes, "art");
			div10_nodes.forEach(detach_dev);
			t13 = claim_space(div13_nodes);
			div11 = claim_element(div13_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			a0 = claim_element(div11_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			t14 = claim_text(a0_nodes, "code");
			a0_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t15 = claim_space(div13_nodes);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			a1 = claim_element(div12_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			t16 = claim_text(a1_nodes, "techno");
			a1_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			t17 = claim_space(div20_nodes);
			div19 = claim_element(div20_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			div15 = claim_element(div19_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			claim_component(allisontattoo0.$$.fragment, div15_nodes);
			t18 = claim_space(div15_nodes);
			claim_component(allisontattoo1.$$.fragment, div15_nodes);
			t19 = claim_space(div15_nodes);
			claim_component(allisontattoo2.$$.fragment, div15_nodes);
			t20 = claim_space(div15_nodes);
			claim_component(allisontattoo3.$$.fragment, div15_nodes);
			t21 = claim_space(div15_nodes);
			claim_component(allisontattoo4.$$.fragment, div15_nodes);
			t22 = claim_space(div15_nodes);
			claim_component(allisontattoo5.$$.fragment, div15_nodes);
			t23 = claim_space(div15_nodes);
			claim_component(allisontattoo6.$$.fragment, div15_nodes);
			t24 = claim_space(div15_nodes);
			claim_component(allisontattoo7.$$.fragment, div15_nodes);
			div15_nodes.forEach(detach_dev);
			t25 = claim_space(div19_nodes);
			div16 = claim_element(div19_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			claim_component(allisontattoo8.$$.fragment, div16_nodes);
			t26 = claim_space(div16_nodes);
			claim_component(allisontattoo9.$$.fragment, div16_nodes);
			t27 = claim_space(div16_nodes);
			claim_component(allisontattoo10.$$.fragment, div16_nodes);
			t28 = claim_space(div16_nodes);
			claim_component(allisontattoo11.$$.fragment, div16_nodes);
			t29 = claim_space(div16_nodes);
			claim_component(allisontattoo12.$$.fragment, div16_nodes);
			t30 = claim_space(div16_nodes);
			claim_component(allisontattoo13.$$.fragment, div16_nodes);
			t31 = claim_space(div16_nodes);
			claim_component(allisontattoo14.$$.fragment, div16_nodes);
			t32 = claim_space(div16_nodes);
			claim_component(allisontattoo15.$$.fragment, div16_nodes);
			div16_nodes.forEach(detach_dev);
			t33 = claim_space(div19_nodes);
			div17 = claim_element(div19_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			claim_component(allisontattoo16.$$.fragment, div17_nodes);
			t34 = claim_space(div17_nodes);
			claim_component(allisontattoo17.$$.fragment, div17_nodes);
			t35 = claim_space(div17_nodes);
			claim_component(allisontattoo18.$$.fragment, div17_nodes);
			t36 = claim_space(div17_nodes);
			claim_component(allisontattoo19.$$.fragment, div17_nodes);
			t37 = claim_space(div17_nodes);
			claim_component(allisontattoo20.$$.fragment, div17_nodes);
			t38 = claim_space(div17_nodes);
			claim_component(allisontattoo21.$$.fragment, div17_nodes);
			t39 = claim_space(div17_nodes);
			claim_component(allisontattoo22.$$.fragment, div17_nodes);
			t40 = claim_space(div17_nodes);
			claim_component(allisontattoo23.$$.fragment, div17_nodes);
			div17_nodes.forEach(detach_dev);
			t41 = claim_space(div19_nodes);
			div18 = claim_element(div19_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			claim_component(allisontattoo24.$$.fragment, div18_nodes);
			t42 = claim_space(div18_nodes);
			claim_component(allisontattoo25.$$.fragment, div18_nodes);
			t43 = claim_space(div18_nodes);
			claim_component(allisontattoo26.$$.fragment, div18_nodes);
			t44 = claim_space(div18_nodes);
			claim_component(allisontattoo27.$$.fragment, div18_nodes);
			t45 = claim_space(div18_nodes);
			claim_component(allisontattoo28.$$.fragment, div18_nodes);
			t46 = claim_space(div18_nodes);
			claim_component(allisontattoo29.$$.fragment, div18_nodes);
			t47 = claim_space(div18_nodes);
			claim_component(allisontattoo30.$$.fragment, div18_nodes);
			t48 = claim_space(div18_nodes);
			claim_component(allisontattoo31.$$.fragment, div18_nodes);
			div18_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			div22_nodes.forEach(detach_dev);
			div23_nodes.forEach(detach_dev);
			div24_nodes.forEach(detach_dev);
			div25_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Jess Tucker - Full Stack Web Developer";
			attr_dev(div0, "class", "header-left-margin svelte-1pgmu3c");
			add_location(div0, file$2, 13, 12, 364);
			attr_dev(div1, "class", "header-center svelte-1pgmu3c");
			add_location(div1, file$2, 16, 12, 459);
			add_location(div2, file$2, 21, 22, 614);
			add_location(div3, file$2, 22, 6, 643);
			add_location(div4, file$2, 23, 6, 690);
			add_location(div5, file$2, 24, 22, 758);
			attr_dev(div6, "id", "signature");
			attr_dev(div6, "class", "svelte-1pgmu3c");
			add_location(div6, file$2, 20, 18, 571);
			attr_dev(div7, "class", "header-right-margin svelte-1pgmu3c");
			add_location(div7, file$2, 18, 12, 518);
			attr_dev(div8, "id", "heading");
			attr_dev(div8, "class", "svelte-1pgmu3c");
			add_location(div8, file$2, 12, 12, 333);
			attr_dev(div9, "class", "diagonal-text line-spaced svelte-1pgmu3c");
			add_location(div9, file$2, 39, 22, 1184);
			attr_dev(div10, "class", "diagonal-text line-spaced svelte-1pgmu3c");
			add_location(div10, file$2, 42, 22, 1337);
			attr_dev(a0, "href", "https://github.com/jesstucker");
			attr_dev(a0, "class", "svelte-1pgmu3c");
			add_location(a0, file$2, 46, 24, 1520);
			attr_dev(div11, "class", "diagonal-text line-spaced svelte-1pgmu3c");
			add_location(div11, file$2, 45, 22, 1456);
			attr_dev(a1, "href", "https://soundcloud.com/jeff-ff");
			attr_dev(a1, "class", "svelte-1pgmu3c");
			add_location(a1, file$2, 49, 24, 1684);
			attr_dev(div12, "class", "diagonal-text line-spaced svelte-1pgmu3c");
			add_location(div12, file$2, 48, 22, 1620);
			add_location(div13, file$2, 36, 20, 1112);
			attr_dev(div14, "class", "body-left-margin svelte-1pgmu3c");
			add_location(div14, file$2, 34, 16, 1042);
			attr_dev(div15, "class", "allison-tattoo-container svelte-1pgmu3c");
			add_location(div15, file$2, 55, 20, 1899);
			attr_dev(div16, "class", "allison-tattoo-container svelte-1pgmu3c");
			add_location(div16, file$2, 65, 20, 2404);
			attr_dev(div17, "class", "allison-tattoo-container svelte-1pgmu3c");
			add_location(div17, file$2, 75, 20, 2909);
			attr_dev(div18, "class", "allison-tattoo-container svelte-1pgmu3c");
			add_location(div18, file$2, 85, 20, 3414);
			attr_dev(div19, "class", "stuff body svelte-1pgmu3c");
			add_location(div19, file$2, 54, 18, 1854);
			attr_dev(div20, "id", "paper");
			attr_dev(div20, "class", "svelte-1pgmu3c");
			add_location(div20, file$2, 33, 16, 1009);
			attr_dev(div21, "id", "body-content-wrapper");
			add_location(div21, file$2, 32, 14, 961);
			attr_dev(div22, "id", "body");
			attr_dev(div22, "class", "svelte-1pgmu3c");
			add_location(div22, file$2, 31, 12, 931);
			attr_dev(div23, "id", "inner-wrapper");
			attr_dev(div23, "class", "svelte-1pgmu3c");
			add_location(div23, file$2, 11, 10, 296);
			attr_dev(div24, "id", "outer-wrapper");
			add_location(div24, file$2, 10, 8, 261);
			attr_dev(div25, "id", "bodycenter");
			attr_dev(div25, "class", "svelte-1pgmu3c");
			add_location(div25, file$2, 9, 0, 231);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div25, anchor);
			append_dev(div25, div24);
			append_dev(div24, div23);
			append_dev(div23, div8);
			append_dev(div8, div0);
			mount_component(selfportrait, div0, null);
			append_dev(div8, t1);
			append_dev(div8, div1);
			append_dev(div8, t2);
			append_dev(div8, div7);
			append_dev(div7, div6);
			append_dev(div6, div2);
			append_dev(div2, t3);
			append_dev(div6, t4);
			append_dev(div6, div3);
			append_dev(div3, t5);
			append_dev(div6, t6);
			append_dev(div6, div4);
			append_dev(div4, t7);
			append_dev(div6, t8);
			append_dev(div6, div5);
			append_dev(div5, t9);
			append_dev(div23, t10);
			append_dev(div23, div22);
			append_dev(div22, div21);
			append_dev(div21, div20);
			append_dev(div20, div14);
			append_dev(div14, div13);
			append_dev(div13, div9);
			append_dev(div13, t11);
			append_dev(div13, div10);
			append_dev(div10, t12);
			append_dev(div13, t13);
			append_dev(div13, div11);
			append_dev(div11, a0);
			append_dev(a0, t14);
			append_dev(div13, t15);
			append_dev(div13, div12);
			append_dev(div12, a1);
			append_dev(a1, t16);
			append_dev(div20, t17);
			append_dev(div20, div19);
			append_dev(div19, div15);
			mount_component(allisontattoo0, div15, null);
			append_dev(div15, t18);
			mount_component(allisontattoo1, div15, null);
			append_dev(div15, t19);
			mount_component(allisontattoo2, div15, null);
			append_dev(div15, t20);
			mount_component(allisontattoo3, div15, null);
			append_dev(div15, t21);
			mount_component(allisontattoo4, div15, null);
			append_dev(div15, t22);
			mount_component(allisontattoo5, div15, null);
			append_dev(div15, t23);
			mount_component(allisontattoo6, div15, null);
			append_dev(div15, t24);
			mount_component(allisontattoo7, div15, null);
			append_dev(div19, t25);
			append_dev(div19, div16);
			mount_component(allisontattoo8, div16, null);
			append_dev(div16, t26);
			mount_component(allisontattoo9, div16, null);
			append_dev(div16, t27);
			mount_component(allisontattoo10, div16, null);
			append_dev(div16, t28);
			mount_component(allisontattoo11, div16, null);
			append_dev(div16, t29);
			mount_component(allisontattoo12, div16, null);
			append_dev(div16, t30);
			mount_component(allisontattoo13, div16, null);
			append_dev(div16, t31);
			mount_component(allisontattoo14, div16, null);
			append_dev(div16, t32);
			mount_component(allisontattoo15, div16, null);
			append_dev(div19, t33);
			append_dev(div19, div17);
			mount_component(allisontattoo16, div17, null);
			append_dev(div17, t34);
			mount_component(allisontattoo17, div17, null);
			append_dev(div17, t35);
			mount_component(allisontattoo18, div17, null);
			append_dev(div17, t36);
			mount_component(allisontattoo19, div17, null);
			append_dev(div17, t37);
			mount_component(allisontattoo20, div17, null);
			append_dev(div17, t38);
			mount_component(allisontattoo21, div17, null);
			append_dev(div17, t39);
			mount_component(allisontattoo22, div17, null);
			append_dev(div17, t40);
			mount_component(allisontattoo23, div17, null);
			append_dev(div19, t41);
			append_dev(div19, div18);
			mount_component(allisontattoo24, div18, null);
			append_dev(div18, t42);
			mount_component(allisontattoo25, div18, null);
			append_dev(div18, t43);
			mount_component(allisontattoo26, div18, null);
			append_dev(div18, t44);
			mount_component(allisontattoo27, div18, null);
			append_dev(div18, t45);
			mount_component(allisontattoo28, div18, null);
			append_dev(div18, t46);
			mount_component(allisontattoo29, div18, null);
			append_dev(div18, t47);
			mount_component(allisontattoo30, div18, null);
			append_dev(div18, t48);
			mount_component(allisontattoo31, div18, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(selfportrait.$$.fragment, local);
			transition_in(allisontattoo0.$$.fragment, local);
			transition_in(allisontattoo1.$$.fragment, local);
			transition_in(allisontattoo2.$$.fragment, local);
			transition_in(allisontattoo3.$$.fragment, local);
			transition_in(allisontattoo4.$$.fragment, local);
			transition_in(allisontattoo5.$$.fragment, local);
			transition_in(allisontattoo6.$$.fragment, local);
			transition_in(allisontattoo7.$$.fragment, local);
			transition_in(allisontattoo8.$$.fragment, local);
			transition_in(allisontattoo9.$$.fragment, local);
			transition_in(allisontattoo10.$$.fragment, local);
			transition_in(allisontattoo11.$$.fragment, local);
			transition_in(allisontattoo12.$$.fragment, local);
			transition_in(allisontattoo13.$$.fragment, local);
			transition_in(allisontattoo14.$$.fragment, local);
			transition_in(allisontattoo15.$$.fragment, local);
			transition_in(allisontattoo16.$$.fragment, local);
			transition_in(allisontattoo17.$$.fragment, local);
			transition_in(allisontattoo18.$$.fragment, local);
			transition_in(allisontattoo19.$$.fragment, local);
			transition_in(allisontattoo20.$$.fragment, local);
			transition_in(allisontattoo21.$$.fragment, local);
			transition_in(allisontattoo22.$$.fragment, local);
			transition_in(allisontattoo23.$$.fragment, local);
			transition_in(allisontattoo24.$$.fragment, local);
			transition_in(allisontattoo25.$$.fragment, local);
			transition_in(allisontattoo26.$$.fragment, local);
			transition_in(allisontattoo27.$$.fragment, local);
			transition_in(allisontattoo28.$$.fragment, local);
			transition_in(allisontattoo29.$$.fragment, local);
			transition_in(allisontattoo30.$$.fragment, local);
			transition_in(allisontattoo31.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(selfportrait.$$.fragment, local);
			transition_out(allisontattoo0.$$.fragment, local);
			transition_out(allisontattoo1.$$.fragment, local);
			transition_out(allisontattoo2.$$.fragment, local);
			transition_out(allisontattoo3.$$.fragment, local);
			transition_out(allisontattoo4.$$.fragment, local);
			transition_out(allisontattoo5.$$.fragment, local);
			transition_out(allisontattoo6.$$.fragment, local);
			transition_out(allisontattoo7.$$.fragment, local);
			transition_out(allisontattoo8.$$.fragment, local);
			transition_out(allisontattoo9.$$.fragment, local);
			transition_out(allisontattoo10.$$.fragment, local);
			transition_out(allisontattoo11.$$.fragment, local);
			transition_out(allisontattoo12.$$.fragment, local);
			transition_out(allisontattoo13.$$.fragment, local);
			transition_out(allisontattoo14.$$.fragment, local);
			transition_out(allisontattoo15.$$.fragment, local);
			transition_out(allisontattoo16.$$.fragment, local);
			transition_out(allisontattoo17.$$.fragment, local);
			transition_out(allisontattoo18.$$.fragment, local);
			transition_out(allisontattoo19.$$.fragment, local);
			transition_out(allisontattoo20.$$.fragment, local);
			transition_out(allisontattoo21.$$.fragment, local);
			transition_out(allisontattoo22.$$.fragment, local);
			transition_out(allisontattoo23.$$.fragment, local);
			transition_out(allisontattoo24.$$.fragment, local);
			transition_out(allisontattoo25.$$.fragment, local);
			transition_out(allisontattoo26.$$.fragment, local);
			transition_out(allisontattoo27.$$.fragment, local);
			transition_out(allisontattoo28.$$.fragment, local);
			transition_out(allisontattoo29.$$.fragment, local);
			transition_out(allisontattoo30.$$.fragment, local);
			transition_out(allisontattoo31.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div25);
			destroy_component(selfportrait);
			destroy_component(allisontattoo0);
			destroy_component(allisontattoo1);
			destroy_component(allisontattoo2);
			destroy_component(allisontattoo3);
			destroy_component(allisontattoo4);
			destroy_component(allisontattoo5);
			destroy_component(allisontattoo6);
			destroy_component(allisontattoo7);
			destroy_component(allisontattoo8);
			destroy_component(allisontattoo9);
			destroy_component(allisontattoo10);
			destroy_component(allisontattoo11);
			destroy_component(allisontattoo12);
			destroy_component(allisontattoo13);
			destroy_component(allisontattoo14);
			destroy_component(allisontattoo15);
			destroy_component(allisontattoo16);
			destroy_component(allisontattoo17);
			destroy_component(allisontattoo18);
			destroy_component(allisontattoo19);
			destroy_component(allisontattoo20);
			destroy_component(allisontattoo21);
			destroy_component(allisontattoo22);
			destroy_component(allisontattoo23);
			destroy_component(allisontattoo24);
			destroy_component(allisontattoo25);
			destroy_component(allisontattoo26);
			destroy_component(allisontattoo27);
			destroy_component(allisontattoo28);
			destroy_component(allisontattoo29);
			destroy_component(allisontattoo30);
			destroy_component(allisontattoo31);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);
	$$self.$capture_state = () => ({ SelfPortrait, AllisonTattoo });
	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$2.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguNThkOTcxNzkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cdGltcG9ydCBTZWxmUG9ydHJhaXQgZnJvbSAnLi4vY29tcG9uZW50cy9TZWxmUG9ydHJhaXQuc3ZlbHRlJ1xuXHRpbXBvcnQgQWxsaXNvblRhdHRvbyBmcm9tICcuLi9jb21wb25lbnRzL0FsbGlzb25UYXR0b28uc3ZlbHRlJ1xuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkplc3MgVHVja2VyIC0gRnVsbCBTdGFjayBXZWIgRGV2ZWxvcGVyPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxkaXYgaWQ9XCJib2R5Y2VudGVyXCI+XG4gICAgICAgIDxkaXYgaWQ9XCJvdXRlci13cmFwcGVyXCI+XG4gICAgICAgICAgPGRpdiBpZD1cImlubmVyLXdyYXBwZXJcIj5cbiAgICAgICAgICAgIDxkaXYgaWQ9XCJoZWFkaW5nXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLWxlZnQtbWFyZ2luXCI+XG4gICAgICAgICAgICAgIDxTZWxmUG9ydHJhaXQgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRlci1jZW50ZXJcIj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRlci1yaWdodC1tYXJnaW5cIj5cblxuICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cInNpZ25hdHVyZVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+SmVzcyBUdWNrZXI8L2Rpdj5cblx0XHRcdFx0XHRcdDxkaXY+VGhlIE1pbGVzIERhdmlzIG9mIFNvbGl0YWlyZSA8L2Rpdj5cblx0XHRcdFx0XHRcdDxkaXY+VGhlIEt1cnQgQ29iYWluIG9mIFdlYiBEZXZlbG9wbWVudDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+V2ViIERldmVsb3BlcjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGRpdj57Y3JlYXRlRGF0ZSgpfTwvZGl2PiAtLT5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgaWQ9XCJib2R5XCI+XG4gICAgICAgICAgICAgIDxkaXYgaWQ9XCJib2R5LWNvbnRlbnQtd3JhcHBlclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJwYXBlclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib2R5LWxlZnQtbWFyZ2luXCI+XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpYWdvbmFsLXRleHQgbGluZS1zcGFjZWRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPExpbmsgdG89XCIvcmVzdW1lXCI+Y3Y8L0xpbms+IC0tPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaWFnb25hbC10ZXh0IGxpbmUtc3BhY2VkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnRcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlhZ29uYWwtdGV4dCBsaW5lLXNwYWNlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9qZXNzdHVja2VyXCI+Y29kZTwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlhZ29uYWwtdGV4dCBsaW5lLXNwYWNlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vc291bmRjbG91ZC5jb20vamVmZi1mZlwiPnRlY2hubzwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0dWZmIGJvZHlcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFsbGlzb24tdGF0dG9vLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIGNsYXNzPXsnc3ZnLW1pcnJvcid9Lz5cbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyAvPiAgIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIGNsYXNzPXsnc3ZnLW1pcnJvcid9Lz4gICBcbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyAvPiAgXG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gY2xhc3M9eydzdmctbWlycm9yJ30vPiAgIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+ICBcbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyBjbGFzcz17J3N2Zy1taXJyb3InfS8+ICAgXG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gLz4gICBcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbGxpc29uLXRhdHRvby1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIGNsYXNzPXsnc3ZnLW1pcnJvcid9Lz5cbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyAvPiAgIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIGNsYXNzPXsnc3ZnLW1pcnJvcid9Lz4gICBcbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyAvPiAgXG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gY2xhc3M9eydzdmctbWlycm9yJ30vPiAgIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+ICBcbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyBjbGFzcz17J3N2Zy1taXJyb3InfS8+ICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWxsaXNvbi10YXR0b28tY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gY2xhc3M9eydzdmctbWlycm9yJ30vPlxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+ICAgXG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gY2xhc3M9eydzdmctbWlycm9yJ30vPiAgIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+ICBcbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyBjbGFzcz17J3N2Zy1taXJyb3InfS8+ICAgXG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gLz4gIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIGNsYXNzPXsnc3ZnLW1pcnJvcid9Lz4gIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+ICAgIFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFsbGlzb24tdGF0dG9vLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gY2xhc3M9eydzdmctbWlycm9yJ30vPlxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+ICAgXG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gY2xhc3M9eydzdmctbWlycm9yJ30vPiAgIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIC8+ICBcbiAgICAgICAgICAgICAgICAgICAgICA8QWxsaXNvblRhdHRvbyBjbGFzcz17J3N2Zy1taXJyb3InfS8+ICAgXG4gICAgICAgICAgICAgICAgICAgICAgPEFsbGlzb25UYXR0b28gLz4gIFxuICAgICAgICAgICAgICAgICAgICAgIDxBbGxpc29uVGF0dG9vIGNsYXNzPXsnc3ZnLW1pcnJvcid9Lz4gICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuXG48c3R5bGU+XG5cdEBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogJ0NvbXB1dGVyTW9kZXJuJztcblx0c3JjOiB1cmwoJy4vZm9udHMvQ29tcHV0ZXJNb2Rlcm4vU2VyaWYvY211bnJtLnR0ZicpO1xufVxuYm9keXtcblx0Zm9udC1mYW1pbHk6ICdDb21wdXRlck1vZGVybic7XG59XG5cbiNib2R5Y2VudGVyIHtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHBhZGRpbmc6IDEwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA4NTBweCkge1xuXHQjYm9keWNlbnRlciB7XG5cdFx0cGFkZGluZzogMyU7XG5cdH0gXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuXHQjYm9keWNlbnRlciB7XG5cdFx0cGFkZGluZzogMSU7XG5cdH0gXG59XG5cbiNpbm5lci13cmFwcGVye1xuXHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdGJvcmRlcjogMXB4IGRvdHRlZCAjZWFlYWVhO1xufVxuI2hlYWRpbmcge1xuXHRkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnIgMWZyO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxuICAgIFwiaGVhZGVyLWxlZnQtbWFyZ2luIGhlYWRlci1jZW50ZXIgaGVhZGVyLXJpZ2h0LW1hcmdpblwiO1xuXHR3aWR0aDogMTAwJTtcblx0YmFja2dyb3VuZC1jb2xvcjogI0Y0RjBFRTU5O1xuXHRiYWNrZ3JvdW5kLWltYWdlOiBcblx0XHRsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHRyYW5zcGFyZW50IDE2LjUlLCByZ2JhKDI1MywgNjUsIDU1LCAwLjI4MSkgMTYuODUlLCByZ2JhKDI1MywgNjUsIDU1LCAwLjE5MikgMTYuNSUsIHRyYW5zcGFyZW50IDE2Ljg1JSksXG5cdFx0bGluZWFyLWdyYWRpZW50KDkwZGVnLCB0cmFuc3BhcmVudCA4Mi42NSUsICNGRDQyMzcxQSA4My4xJSwgI0ZENDIzNzFBIDgyLjY1JSwgdHJhbnNwYXJlbnQgODMuMSUpO1xuXHRcdC8qbGluZWFyLWdyYWRpZW50KCM1OEQ3RTU0MCAuMmVtLCB0cmFuc3BhcmVudCAuMmVtKTsqL1xuXHRcdGJhY2tncm91bmQtc2l6ZTogMTAwJSAxLjdlbTtcbn1cblxuLmhlYWRlci1yaWdodC1tYXJnaW4ge1xuXHRncmlkLWFyZWE6IGhlYWRlci1yaWdodC1tYXJnaW47XG5cdGFsaWduLXNlbGY6IGNlbnRlcjtcblx0anVzdGlmeS1zZWxmOiBjZW50ZXI7XG59XG5cbi5oZWFkZXItbGVmdC1tYXJnaW4ge1xuXHRncmlkLWFyZWE6IGhlYWRlci1sZWZ0LW1hcmdpbjtcblx0anVzdGlmeS1zZWxmOiBjZW50ZXI7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcblx0cGFkZGluZzogMjAlO1xuXG59XG5cbi5oZWFkZXItY2VudGVyIHtcblx0Z3JpZC1hcmVhOiBoZWFkZXItY2VudGVyO1xuXHRqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcblx0ZGlzcGxheTogZmxleDtcblx0YWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuXG4jYm9keSB7XG5cdGJhY2tncm91bmQtY29sb3I6ICNGNEYwRUU1OTsgXG5cdGJhY2tncm91bmQtaW1hZ2U6IFxuXHRcdGxpbmVhci1ncmFkaWVudCg5MGRlZywgdHJhbnNwYXJlbnQgMTYuNSUsIHJnYmEoMjUzLCA2NSwgNTUsIDAuMjgxKSAxNi44NSUsIHJnYmEoMjUzLCA2NSwgNTUsIDAuMTkyKSAxNi41JSwgdHJhbnNwYXJlbnQgMTYuODUlKSxcblx0XHRsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHRyYW5zcGFyZW50IDgyLjY1JSwgI0ZENDIzNzFBIDgzLjElLCAjRkQ0MjM3MUEgODIuNjUlLCB0cmFuc3BhcmVudCA4My4xJSksXG5cdFx0bGluZWFyLWdyYWRpZW50KHJnYmEoODgsIDIxNSwgMjI5LCAwLjEwMykgLjE1ZW0sIHRyYW5zcGFyZW50IC4xNWVtKTtcblx0XHRiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMyU7XG5cbn1cblxuI3BhcGVye1xuXHRkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnIgMWZyO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxuICAgIFwiYm9keS1sZWZ0LW1hcmdpbiBib2R5IGJvZHktcmlnaHQtbWFyZ2luXCJcbiAgICBcImZvb3Rlci1sZWZ0LW1hcmdpbiBmb290ZXItY2VudGVyIGZvb3Rlci1yaWdodC1tYXJnaW5cIjtcbn1cblxuLmJvZHktbGVmdC1tYXJnaW57XG5cdGdyaWQtYXJlYTogYm9keS1sZWZ0LW1hcmdpbjtcblx0bWFyZ2luLXRvcDogMS41dnc7XG59XG4uZW51bWVyYXRlZCB7XG5cdGxpbmUtaGVpZ2h0OiAxLjQzN2VtO1xuXHRtYXJnaW46IDAuMDNlbSAwLjNlbSAwLjAzZW0gMDtcblx0dGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5saW5lLXNwYWNlZCB7XG5cdGZvbnQtc2l6ZTogMS4zOHZ3O1xufVxuLmRpYWdvbmFsLXRleHQge1xuXHR0cmFuc2Zvcm06IHJvdGF0ZSgzMTVkZWcpO1xuXHR0cmFuc2Zvcm0tb3JpZ2luOiA3NSUgNzUlO1xuXHRsaW5lLWhlaWdodDogMC43NWVtO1xuXHRtYXJnaW46IDFlbSAwO1xuXHR0ZXh0LWFsaWduOiByaWdodDtcbn1cbi5ib2R5LXJpZ2h0LW1hcmdpbntcblx0Z3JpZC1hcmVhOiBib2R5LXJpZ2h0LW1hcmdpbjtcblx0YmFja2dyb3VuZC1jb2xvcjogcGluaztcbn1cbi5ib2R5e1xuXHRncmlkLWFyZWE6IGJvZHk7XG5cdHBhZGRpbmc6IDMuMiUgMCA1JSAwO1xufVxuXG4jc2lnbmF0dXJlIHtcblx0Zm9udC1zaXplOiAwLjVlbTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRjb2xvcjogZ3JleTtcbn1cblxuXG4jc2VsZnBvcnRyYWl0IHtcbiAgXHQvKndpZHRoOjEwMCU7Ki9cbiAgXHR0ZXh0LWFsaWduOiBtaWRkbGU7XG59XG4jc2VsZnBvcnRyYWl0LW9iamVjdCB7XG4gIFx0d2lkdGg6MTAwJTtcbn1cblxuXG4jbHVuY2gge1xuXHRkaXNwbGF5OmJsb2NrO1xuLypcdGZsb2F0OnJpZ2h0O1xuXHR3aWR0aDogMzclOyovXG5cdGNsZWFyOiBib3RoO1xufVxuXG4gI2x1bmNoID4gYSB7XG4gXHRib3gtc2hhZG93OiBub25lO1xuIH1cblxuXG4jcmlnaHRzaWRlIHtcblx0ZmxvYXQ6IHJpZ2h0O1xuXHR3aWR0aDo2MCU7XG59XG5cbnVsIHtcblx0bWFyZ2luOjA7IFxuXHRwYWRkaW5nOjA7IFxuXHRsaXN0LXN0eWxlOm5vbmU7IFxufVxuXG50YWJsZSB7XG5cdGJvcmRlci13aWR0aDogMXB4O1xuXHRib3JkZXItc3R5bGU6IHNvbGlkO1xuXHRib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTtcbn1cbnRoIHtcblx0Y3Vyc29yOnBvaW50ZXI7XG5cdHRleHQtYWxpZ246IGxlZnQ7XG5cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMyk7XG59XG5cbnRkIHtcblx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNSk7XHRcbn1cbnRyID4gKjpudGgtY2hpbGQoMykge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cblxuXG5cblxuXG5cblxuXG5hLCBhOmxpbmssIGE6dmlzaXRlZCB7XG5cdGNvbG9yOmJsYWNrO1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4vKlx0Ym9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNiNGU3Zjg7Ki9cblx0Ym94LXNoYWRvdzogaW5zZXQgMCAtNHB4IDAgI2I0ZTdmODtcblx0d2hpdGUtc3BhY2U6IHByZS1saW5lO1xuIFxufVxuXG4jc2tpbGxzIHtcblx0d2lkdGg6IDEwMCU7XG5cdGRpc3BsYXk6IGlubGluZS10YWJsZTtcbn1cbiNza2lsbHMgdHIge1xuXHRsaW5lLWhlaWdodDogMTUlO1xufVxuXG5cbi8qIC5zdHVmZntcblx0bGluZS1oZWlnaHQ6IDEuN2VtO1xufSAqL1xuXG4uaW5kZXgtY2FyZC1jb250YWluZXJ7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0d2lkdGg6IDEwMCU7XG59XG5cbi5pbmRleC1jYXJkLWNvbnRhaW5lcjpiZWZvcmV7XG5cdGNvbnRlbnQ6IFwiXCI7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwYWRkaW5nLXRvcDogNjAlOyBcdC8qIGluaXRpYWwgcmF0aW8gb2YgMToxKi9cbn1cblxuLmluZGV4LWNhcmQgeyBcblx0Ym9yZGVyOiAxcHggZG90dGVkIGxpZ2h0Z3JleTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdGxlZnQ6IDA7XG5cdGJvdHRvbTogMDtcblx0cmlnaHQ6IDA7XG5cdG92ZXJmbG93OiBoaWRkZW47XG59XG4uaW5kZXgtY2FyZC1jb250ZW50e1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGhlaWdodDogMTAwJTtcblx0Zm9udC1zaXplOiAxMDAlO1xufVxuLmluZGV4LWNhcmQtaGVhZGVye1xuXHQvKnBvc2l0aW9uOiByZWxhdGl2ZTsqL1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRkJGQUY5RjA7XG5cdGJhY2tncm91bmQtaW1hZ2U6IFxuXHRcdGxpbmVhci1ncmFkaWVudCgwZGVnLCB0cmFuc3BhcmVudCA2NCUsICNGQ0E5QTRGMCA2NyUsICNGQ0E5QTRGMCA2NyUsIHRyYW5zcGFyZW50IDY0JSk7XG5cdFx0YmFja2dyb3VuZC1zaXplOiAxMDAlIDIwMCU7XG5cdGhlaWdodDoyNSU7XG5cdGZvbnQtc2l6ZTogMXZ3XG59XG4uaW5kZXgtY2FyZC1ib2R5e1xuXHQvKnBvc2l0aW9uOiByZWxhdGl2ZTsqL1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRkJGQUY5RjA7XG5cdGJhY2tncm91bmQtaW1hZ2U6IFxuXHRcdGxpbmVhci1ncmFkaWVudCgjNThEN0U1RjAgMiUsIHRyYW5zcGFyZW50IDE1JSk7XG5cdFx0YmFja2dyb3VuZC1zaXplOiAxMDAlIDExLjUlO1xuXHRoZWlnaHQ6NzUlO1xuXHRmb250LXNpemU6IC41dnc7XG5cdGxpbmUtaGVpZ2h0OiAuNzBlbTtcbn1cbi50aW55LXRhYmxle1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdC8qd2lkdGg6IDI1JTsqL1xuXHRtaW4taGVpZ2h0OiAzMyU7XG5cdG1pbi13aWR0aDogMjUlO1xuXHRtYXgtd2lkdGg6IDMwJTtcblx0Ym9yZGVyOiAxcHggZG90dGVkIGxpZ2h0Z3JleTtcblx0LypoZWlnaHQ6IDQzJTsqL1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHR2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4ucmVzdW1lX2NvbnRhaW5lcntcblx0ZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG8gYXV0byBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxuICAgIFwiaGVhZGVyIGhlYWRlciBoZWFkZXIgaGVhZGVyXCJcbiAgICBcIm1haW4gbWFpbiAuIHNpZGViYXJcIlxuICAgIFwiZm9vdGVyIGZvb3RlciBmb290ZXIgZm9vdGVyXCI7XG59XG4ucmVzdW1lX2l0ZW0ge1xuXHRncmlkLWNvbHVtbi1zdGFydDogMTBweDtcbiAgZ3JpZC1jb2x1bW4tZW5kOiAxMHB4O1xuICBncmlkLXJvdy1zdGFydDogMTBweDtcbiAgZ3JpZC1yb3ctZW5kOiAxMHB4O1xufVxuLmFsbGlzb24tdGF0dG9vLWNvbnRhaW5lcntcblx0bGluZS1oZWlnaHQ6IDA7XG5cdGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byBhdXRvIGF1dG8gYXV0byBhdXRvIGF1dG8gYXV0byBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxuICAgIFwiaGVhZGVyIGhlYWRlciBoZWFkZXIgaGVhZGVyXCJcbiAgICBcIm1haW4gbWFpbiAuIHNpZGViYXJcIlxuICAgIFwiZm9vdGVyIGZvb3RlciBmb290ZXIgZm9vdGVyXCI7XG59XG5cblxuLnN2Zy1taXJyb3Ige1xuXHR0cmFuc2Zvcm06IHNjYWxlKC0xLDEpO1xufVxuXG5cbi5sYWR5LWhhbmQge1xuXHRhbmltYXRpb246IHNodWZmbGUgLjVzIGxpbmVhciBpbmZpbml0ZTtcdFxufVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQkF3RDRDLFlBQVk7Ozs7Ozs7bUJBRVosWUFBWTs7Ozs7OzttQkFFWixZQUFZOzs7Ozs7O21CQUVaLFlBQVk7Ozs7Ozs7O21CQUtaLFlBQVk7Ozs7Ozs7bUJBRVosWUFBWTs7Ozs7OzttQkFFWixZQUFZOzs7Ozs7O21CQUVaLFlBQVk7Ozs7O21CQUdaLFlBQVk7Ozs7Ozs7bUJBRVosWUFBWTs7Ozs7OzttQkFFWixZQUFZOzs7Ozs7O21CQUVaLFlBQVk7Ozs7Ozs7O21CQUtaLFlBQVk7Ozs7Ozs7bUJBRVosWUFBWTs7Ozs7OzttQkFFWixZQUFZOzs7Ozs7O21CQUVaLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
